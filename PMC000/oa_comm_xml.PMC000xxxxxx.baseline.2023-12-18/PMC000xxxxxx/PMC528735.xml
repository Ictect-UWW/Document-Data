<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15504240</article-id><article-id pub-id-type="pmc">PMC528735</article-id><article-id pub-id-type="publisher-id">1471-2105-5-160</article-id><article-id pub-id-type="doi">10.1186/1471-2105-5-160</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Reuse of imputed data in microarray analysis increases imputation efficiency</article-title></title-group><contrib-group><contrib id="A1" contrib-type="author"><name><surname>Kim</surname><given-names>Ki-Yeol</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>kky1004@icu.ac.kr</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Kim</surname><given-names>Byoung-Jin</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>bjkim@icu.ac.kr</email></contrib><contrib id="A3" corresp="yes" contrib-type="author"><name><surname>Yi</surname><given-names>Gwan-Su</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>gsyi@icu.ac.kr</email></contrib></contrib-group><aff id="I1"><label>1</label>School of engineering, Information and Communications University, 103-6 Munji-dong, Yusung-gu, Daejon 305-714, South Korea</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>26</day><month>10</month><year>2004</year></pub-date><volume>5</volume><fpage>160</fpage><lpage>160</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/5/160"/><history><date date-type="received"><day>19</day><month>5</month><year>2004</year></date><date date-type="accepted"><day>26</day><month>10</month><year>2004</year></date></history><copyright-statement>Copyright &#x000a9; 2004 Kim et al; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>The imputation of missing values is necessary for the efficient use of DNA microarray data, because many clustering algorithms and some statistical analysis require a complete data set. A few imputation methods for DNA microarray data have been introduced, but the efficiency of the methods was low and the validity of imputed values in these methods had not been fully checked.</p></sec><sec><title>Results</title><p>We developed a new cluster-based imputation method called sequential K-nearest neighbor (SKNN) method. This imputes the missing values sequentially from the gene having least missing values, and uses the imputed values for the later imputation. Although it uses the imputed values, the efficiency of this new method is greatly improved in its accuracy and computational complexity over the conventional KNN-based method and other methods based on maximum likelihood estimation. The performance of SKNN was in particular higher than other imputation methods for the data with high missing rates and large number of experiments.</p><p>Application of Expectation Maximization (EM) to the SKNN method improved the accuracy, but increased computational time proportional to the number of iterations. The Multiple Imputation (MI) method, which is well known but not applied previously to microarray data, showed a similarly high accuracy as the SKNN method, with slightly higher dependency on the types of data sets.</p></sec><sec><title>Conclusions</title><p>Sequential reuse of imputed data in KNN-based imputation greatly increases the efficiency of imputation. The SKNN method should be practically useful to save the data of some microarray experiments which have high amounts of missing entries. The SKNN method generates reliable imputed values which can be used for further cluster-based analysis of microarray data.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>DNA microarray is a popular high-throughput technology for the monitoring of thousands of gene expression levels simultaneously under different conditions [<xref ref-type="bibr" rid="B1">1</xref>]. The typical purposes of microarray studies are to identify similarly expressed genes under various cell conditions and associate the genes with cellular functions[<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>].</p><p>The analysis performed to meet the purposes of microarray studies mentioned above usually involves clustering genes according to their pattern of expression levels in various experimental conditions. In fact, cluster analysis means grouping samples (or genes) by similarity in expression patterns. To measure the similarity in cluster analysis, correlation distance and Euclidean distance are widely used[<xref ref-type="bibr" rid="B4">4</xref>]. Principal component analysis (PCA) is also a powerful technique when used with the clustering method to specify the number of clusters[<xref ref-type="bibr" rid="B5">5</xref>]. However, these widely-used methods in microarray data analysis can be both seriously biased and misled by missing values in the dataset[<xref ref-type="bibr" rid="B6">6</xref>-<xref ref-type="bibr" rid="B8">8</xref>].</p><p>Missing values of microarray data commonly occur during data preparation mainly due to imperfections in the various steps in DNA microarray experiments. One of the yeast microarray data sets shows that the number of genes having at least one missing value was 2419 of 6198 rows (genes) (in other words, 39 %)[<xref ref-type="bibr" rid="B9">9</xref>] and 566 of 918 rows (72.5%) [<xref ref-type="bibr" rid="B10">10</xref>]; and 1741 of 2364 rows (73.6%) [<xref ref-type="bibr" rid="B11">11</xref>] had missing values in other reports. As mentioned previously, some statistical analyses require complete data sets and one should discard the entire data in a row, usually all the values for one gene, that have a single missing value. The rows with missing values can be utilized for further analyses after the imputation of the missing values in many cases. Imputation has been used in many fields to fill the missing values in incomplete data using observed values. There are many different algorithms for imputation: hot deck imputation and mean imputation [<xref ref-type="bibr" rid="B7">7</xref>], regression imputation [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>], cluster-based imputation [<xref ref-type="bibr" rid="B14">14</xref>], and tree-based imputation [<xref ref-type="bibr" rid="B15">15</xref>,<xref ref-type="bibr" rid="B16">16</xref>], maximum likelihood estimation (MLE)[<xref ref-type="bibr" rid="B17">17</xref>], and multiple imputations (MI)[<xref ref-type="bibr" rid="B17">17</xref>,<xref ref-type="bibr" rid="B18">18</xref>]. Proper selection of an algorithm for a given data set is important to achieve maximum accuracy of imputation.</p><p>Recently, several methods have been applied to the imputation of microarray data, including row average [<xref ref-type="bibr" rid="B7">7</xref>], singular value decomposition (SVD) [<xref ref-type="bibr" rid="B19">19</xref>] and KNN imputation [<xref ref-type="bibr" rid="B20">20</xref>] methods. In general, it seems the recently developed KNN-based method is most efficient. KNN imputation method is an improved hot deck imputation method [<xref ref-type="bibr" rid="B21">21</xref>] that uses the mean values of most similar genes for estimating missing values. The KNN imputation method can be considered a cluster-based method since missing values are imputed using selected similar genes. In the previously developed method, the efficiency of imputation was limited both in accuracy and computational complexity in that it did not efficiently use the information of the gene having missing values. The existence of missing values in a gene limits the use of other observed values of that gene in the conventional imputation method. In our work, this problem could be improved by using the imputed values sequentially for the later nearest neighbor calculation and imputation. We suggest a sequential KNN (SKNN) imputation method that boasts improved accuracy in estimation of missing values in a wide range of missing rates with high computational speed. We also suggest an EM-style sequential KNN (EM-SKNN) method that uses a sequential KNN method repeatedly to improve accuracy. We evaluated the efficiency of the SKNN imputation method through comparison with the known KNN-based method and other well known imputation methods such as maximum likelihood estimation (MLE) and multiple imputations (MI).</p></sec><sec><title>Results</title><p>We evaluated the efficiency of our new SKNN method and the EM-SKNN method with three other imputation methods: KNN-based imputation, the MLE method, the MI method, by applying them to three different types of microarray data sets with different missing rates. The appropriate number (k) of nearest neighbors was dependent on the data types and missing rates. The RMS errors were minimal when <italic>k </italic>was 10 for time-series data and mixed type data regardless of the missing rate, and the RMS errors of the non-time series data showed similarly low values when <italic>k </italic>values were between 10 and 20. For comparison of different imputation methods, we used 10 for <italic>k </italic>which showed a minimal RMS error in every data type with different missing rates.</p><p>The performance of the KNN-based imputation method depends on the similarity of <italic>k</italic>-nearest neighbors to be used for imputation. The overall similarity of the entire data set can affect, on average, the similarity of all possible <italic>k</italic>-nearest neighbors. The time-series data set, which has the narrowest distribution of Euclidean distances among genes, shows the least RMS error after imputation as we can see in Figure <xref ref-type="fig" rid="F1">1</xref> and <xref ref-type="fig" rid="F2">2</xref>. Figure <xref ref-type="fig" rid="F1">1</xref> also shows that the performances of the SKNN and EM-SKNN methods are better than that of the conventional KNN method over a whole range of tested missing rates. The range of RMS error by the new SKNN method, for example, was 0.194 to 0.269 in comparison with 0.194 to 0.324 of the KNN method in time-series data. The accuracies of our new methods are especially superior when the missing rate is over 30%. The RMS errors for time-series and non-time series data nearly approached their maximum values at missing rates of 50% and 60%, respectively, in the KNN method. The RMS error of the mixed data set is stable over a wide range of missing rates, but becomes unstable and increases dramatically after a 40% missing rate. The slight difference of KNN algorithm could lead to a large improvement in the accuracy of imputation at a high missing rate because the SKNN method is able to select more similar <italic>k</italic>-neighbors than the conventional KNN method as the missing rate grows. In the conventional KNN method, the selection pool and the dimension (or number of existing values for a gene) of the distance measurement of neighbor genes are reduced according to the increase of missing rate. In this situation, the method inevitably selects less related (or less similar) neighbors for imputation. In addition, the size of data set can limit the maximum missing rate for stable imputation. In our data sets, the size of a mixed data set is about 20% larger than other data sets, which may affect the mixed data set in terms of having stable RMS error in a relatively larger (10%) range of missing rate.</p><p>We tested the performance of other well known non-KNN-based methods such as maximum likelihood estimation (MLE) and multiple imputations (MI) methods. These methods are well known imputation methods but there has been no report on their application in microarray data analysis. The efficiency of the MLE method was much worse than the SKNN method for all tested data sets. The RMS errors in the MLE method were 0.11 to 0.33 in time-series data, 0.30 to 0.38 in mixed data, and 0.58 to 0.69 in non-time series data. The efficiency of the MI method was generally similar to SKNN but the former is more dependent on data types. The efficiency of the MI method was better at a lower missing rate, but slightly worse at a higher missing rate for the time-series data set. The MI method was worse than SKNN in terms of overall range of missing rate of non-time series data. However, the best imputation method for mixed data set proved to be the MI method. We can conclude that the MI method is as efficient as the SKNN method for the imputation of microarray data, even though the efficiency of the MI method experienced more fluctuations than the SKNN method depending on the data type.</p><p>The result is similar in a comparison of overall RMS error after imputation of a data set having unequally distributed missing entries over the columns. We show a comparison of one of the data sets (time series data set) in Table <xref ref-type="table" rid="T1">1</xref>. As expected, the efficiency of the SKNN method is higher, especially for the data sets having a higher missing rate.</p><p>For more careful estimation of imputation efficiency, we examined the structure of data after imputation. We calculated the Pearson correlation coefficients for each column (experiment) between original data and imputed data. The larger the correlation coefficient is, the better the relationship between original complete data and imputed data is preserved in a column. Figure <xref ref-type="fig" rid="F3">3</xref> shows that the SKNN method preserves the structure of the original data set better than the conventional KNN method and MI method for all columns of the time-series data set. The situation was the same for the other data sets (data not shown). Interestingly, the MI method was much worse than the SKNN method, differing from RMS error analysis. This column-wise comparison gives us more specific information on the efficiency of imputation method. In Figure <xref ref-type="fig" rid="F3">3-b</xref>, we can see that the performance of SKNN is relatively better for the column with highly missing entries (column 17 and 18) than for other columns. Through measuring the means and standard deviations for each column of data sets, we discovered that the dispersion of values in a column does not affect the accuracy of KNN-based imputation.</p><p>The SKNN algorithm improves execution time for imputation. The computational complexities are approximately <italic>O</italic>(<italic>m</italic><sup>2</sup><italic>n</italic><sup>2</sup>) in the conventional KNN method and <italic>O</italic>(<italic>mn </italic>log <italic>m</italic>) in the SKNN method for a matrix with <italic>m </italic>rows (genes) and <italic>n </italic>columns (experiments). This is because the sequential KNN algorithm imputes all missing values in a gene simultaneously with given nearest neighbors, while the conventional KNN method must calculate neighbors for each missing entry. The application of Expectation Maximization (EM) to the sequential KNN method marginally improved the accuracy in compensation for the increase of computational time proportional to the number of iterations. For MI methods, the execution time increased as M times of single imputation method when MI used M multiple imputation. Using the SKNN imputation method, it took 28.3 seconds on a Pentium IV 2.4 GHz computer to estimate missing values for a data set with 4489 genes, 18 experiments and a 40% missing rate. The processing time using the EM-SKNN method was proportional to the number of iterations.</p></sec><sec><title>Discussion</title><p>The SKNN method offers better performance than the previously developed KNN method for both time series and non-time series microarray data sets and for data sets having different missing patterns. As the missing rate increased, sequential reuse of imputed data did not propagate errors of imputation as in the conventional KNN method. It showed the best improvement of accuracy for the data set with a high missing rate.</p><p>Notably, the SKNN method is also robust on the imputation of a data set with unequally distributed missing entries. A real microarray data set usually has non-random distribution of missing data. Furthermore, some systematic errors during the experiment can generate an abnormal increase in distribution of missing entries for the corresponding column of microarray data set. In this type of data, the SKNN method, which is especially efficient on the data set having heavy missing entries, can exert relatively more accurate imputation than other imputation methods as shown in our model data set. The MI method has not been well introduced in the field of microarray analysis, although it is a well known imputation method in other fields [<xref ref-type="bibr" rid="B18">18</xref>]. In comparison with the SKNN method, we discovered the potential of the MI method for microarray analysis. The MI method did not preserve original data structure as well as the SKNN method, but the overall RMS error was close to the SKNN method. The MI method is executed under the assumption of multiple normality of all dimensions of data. This assumption may not be satisfied in real-world data. Nevertheless, the performance of the MI method was much higher than the simple KNN method, which suggests that the MI method is practically applicable for the imputation of microarray data.</p><p>The computational complexity is reduced in the SKNN method for the dimension of both the number of genes and the experiments compared with the simple KNN method. Particularly, computation time can be saved substantially for microarray data with a large number of experiments. The SKNN method works efficiently in a wider range of missing rate with high speed. We want to emphasize that our results showed that the method using estimated values achieved even better accuracy than the method using only observed values in the case of the KNN-based imputation method. We suppose that this result could be applicable to other cluster-based analysis. It would be hardly acceptable for the experimentalist to use imputed data for further analysis. However, analysis could become more errorneous without imputation due to loss of information caused by missing values. The use of imputed data should definitely depend on the type of later process. If the next process is a cluster-based analysis, the genes with imputed values could be efficiently used, as we had good results for KNN-based imputation with the reuse of imputed values. For future works, it may be possible to integrate the imputation and gene clustering of microarray data for classification of genes with proper evaluation steps. This may offer more and better information sources of microarray data for the final decision of gene classification. All the procedures used in this paper are done by R-code and C++ and the programs are available upon request.</p></sec><sec><title>Conclusions</title><p>The SKNN method is an especially efficient imputation method on data having high missing entries. It can be practically useful in saving data of some accidental microarray experiments having high missing entries. Our results also suggest that the imputed values generated by the SKNN method can be used reliably for further cluster-based analysis of microarray data.</p></sec><sec sec-type="methods"><title>Methods</title><p>We developed and implemented SKNN and EM-SKNN methods for the imputation of microarray data, and we compared their accuracies with the previously developed KNN imputation method. Data sets used in this work were selected from publically available microarray data. The data sets were from a study of gene expression in yeast Saccharomyces cerevisiae cell-cycle regulation [<xref ref-type="bibr" rid="B22">22</xref>], calcineurin/crz1p signaling pathway [<xref ref-type="bibr" rid="B23">23</xref>], and certain environmental changes[<xref ref-type="bibr" rid="B9">9</xref>]. These data sets can be classified into time series data set [<xref ref-type="bibr" rid="B22">22</xref>], mixed (time-series and non-time series) data set[<xref ref-type="bibr" rid="B23">23</xref>] and non-time series data set[<xref ref-type="bibr" rid="B9">9</xref>]. The efficiencies of imputation methods were assessed by Root Mean Squared (RMS) error and correlation coefficients using three different data types as described later.</p><sec><title>KNN Imputation method</title><p>To assess the relative efficiency of the imputation methods, we implemented known KNN imputation method developed by Troyanskaya et al. (2001)[<xref ref-type="bibr" rid="B20">20</xref>]. The source code of the KNN imputation was available from the Helix group at Stanford University [<xref ref-type="bibr" rid="B24">24</xref>].</p><p>The matrix form of microarray data is composed of rows and columns that represent genes and experimental conditions respectively. Before any further process, the rows of original data sets containing missing values are removed to make complete matrices and test data sets for imputation methods were generated by random deletion of values in the complete matrices. The sizes of test data sets were 4489&#x000d7;18 for time series data set, 4380&#x000d7;24 for mixed data set, and 3779&#x000d7;22 for non-time series data set. The missing rates generated randomly in the test data sets were between 1% and 70% (1, 3, 5, 10, 20, 30, 40, 50, 60, 70). The occurrence of missing values can depend on the specific experiment in real miroarray data. Considering this case, we also generated test data set having missing values non-randomly along the columns which represent each experiment. The overall missing rate of data set was fixed to one of the value ranging from 10% to 60%. In a data set, the missing rates for two experiments (columns) were set to 80% and remaining columns have randomly generated missing entries.</p><p>In KNN method, <italic>k</italic>-nearest neighbor genes are taken from the whole matrix of the test data set except any genes that has missing value at the same position with the gene to be imputed. Euclidean distance is used as the metric to estimate the similarity of neighboring genes. To compare the similarity by this metric, each gene should have the same dimension and missing positions of values inside. Missing value is imputed with weighted average of the corresponding column of the <italic>k</italic>-nearest genes.</p><p>The weight of <italic>i</italic><sup>th </sup>gene is calculated as equation (1), where <italic>k </italic>is the number of selected genes and <italic>D</italic><sub>i </sub>is the distance between <italic>i</italic><sup>th </sup>gene and a gene to be imputed.</p><p><inline-graphic xlink:href="1471-2105-5-160-i1.gif"/></p><p>For the performance comparison of the imputation methods, we selected appropriate <italic>k</italic>-values for each data set and each method with different missing rates. Different <italic>k</italic>-values ranging from 1 to 500 were tested and we selected the <italic>k</italic>-values with the least error between imputed values and real values.</p></sec><sec><title>Sequential KNN Imputation method</title><p>SKNN method that we suggest in this report is distinguished in two main points from previously implemented KNN method described above. In SKNN method, genes are ordered by its missing rate and the imputation was executed sequentially from the gene that had least missing rate. In addition, these sequentially imputed genes are used for the later imputation of the other genes. The test data set was separated into incomplete and complete set that has or has not missing values respectively. The genes in incomplete set were imputed by the order of missing rate. Missing value was filled by the weighted mean value of corresponding column of the nearest neighbor genes in complete set. Once all missing values in a gene are imputed, the imputed gene was moved into the complete set and used for the imputation of the rest of genes in incomplete set. In this process, all missing values in one gene can be imputed simultaneously from the selected neighbor genes in complete set. This reduced execution time from previously developed KNN method that should select nearest neighbors for each imputation.</p></sec><sec><title>EM-style Sequential KNN Imputation method</title><p>EM-style imputation algorithm was originally suggested by Rich Caruana (2001)[<xref ref-type="bibr" rid="B25">25</xref>]. EM-style imputation is executed by two steps. It estimates missing values from observed values and improves accuracy of fill-in values through recursive process. We integrated EM-style imputation algorithm and SKNN method to increase the accuracy of imputation. All of missing values were estimated by SKNN imputation method at the first step. The estimated missing values were re-estimated by SKNN method again. In this second step, we could use newly imputed values to select <italic>k</italic>-nearest neighbors for the estimation of missing values. EM-style method executes this process repeatedly until the differences between newly updated values and previous values converge. Because all the imputed values were converged within less than 10 iterations, we did 10 iterations for the comparison of accuracy with the other methods.</p></sec><sec><title>Maximum Likelihood Estimation (MLE) and Multiple Imputation (MI)</title><p>In MLE method, data set with missing values are centered, scaled, and sorted by the patterns of missing through the preliminary manipulations. Missing entries in a data matrix are estimated under the multivariate normal model with user-supplied parameters and observed data (non-missing entries in the data set). The parameters are estimated using imputed and observed data. A vector of parameters representing the MLE, means and variance-covariance matrix are returned by using EM algorithm. Missing values are estimated through this iterative process until estimated parameters converge. We executed MLE method to estimate missing values by using 'norm' library of R [<xref ref-type="bibr" rid="B26">26</xref>] based on the description of Rubin[<xref ref-type="bibr" rid="B17">17</xref>] for this work.</p><p>The whole MI procedure is made of three steps. They are imputation, analysis, and pooling processes. We applied only the first step, imputation process, of the three steps because our interest is to fill in missing values with estimated values. We used Predictive Mean Matching (PMM) as a method for missing values estimation. It uses a linear regression on observed variables to impute missing values. The estimated coefficients provide the mean vector and the variance matrix to generate multiple sets of coefficients that leads M imputed sets. M plausible values for missing observations were created by above MI algorithm and then the mean of M imputed values was filled in the missing value. We implemented Multiple imputation method using 'mice' library of R [<xref ref-type="bibr" rid="B26">26</xref>] based on the description by Rubin [<xref ref-type="bibr" rid="B17">17</xref>].</p></sec><sec><title>Evaluation of imputation methods</title><p>The accuracy of imputation method was evaluated by calculating error between actual values and imputed values after missing values were estimated. The metric used to assess the accuracy of estimation was RMS error. RMS error was calculated as follows,</p><p><inline-graphic xlink:href="1471-2105-5-160-i2.gif"/></p><p>where <italic>R</italic><sub>i </sub>is the real value, <italic>I</italic><sub>i </sub>is the imputed value, and <italic>N </italic>is the number of missing values.</p><p>Besides RMS error, Pearson correlation coefficients were used to evaluate the sequential KNN method. Correlation coefficients were calculated between imputed data and complete data for each column. From this evaluation, we could find how the data structure of each column was preserved after imputation with different imputation methods.</p></sec></sec><sec><title>List of abbreviations</title><p>KNN: K Nearest Neighbor; SKNN: Sequential KNN; EM: Expectation Maximization; RMS: Root Mean Squared; PCA: Principal Component Analysis; MLE: Maximum Likelihood Estimation; MI: Multiple Imputation</p></sec><sec><title>Authors' contributions</title><p>KK participated in the design of algorithms, performed statistical analysis and drafted the manuscript. BK participated in the design of algorithms and carried out C++ programming. GY conceived of the study, participated in its design and coordination, and finalized manuscript. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>This research was partially supported by Ministry of Information and Communication (MIC) in Republic of Korea through University IT Research Center Project and by grant (No. R01-2002-000-00554-0) from the Basic Research Program of the Korea Science and Engineering Foundation.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Dudoit</surname><given-names>S</given-names></name><name><surname>Yang</surname><given-names>YH</given-names></name><name><surname>Callow</surname><given-names>MJ</given-names></name><name><surname>Speed</surname><given-names>TP</given-names></name></person-group><article-title>Statistical methods for identifying differentially expressed genes in replicated cDNA microarray experiments</article-title><source>Statistica Sinica</source><year>2002</year><volume>12</volume><fpage>111</fpage><lpage>139</lpage></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Alizadeh</surname><given-names>AA</given-names></name><name><surname>Eisen</surname><given-names>MB</given-names></name><name><surname>Davis</surname><given-names>RE</given-names></name><name><surname>Ma</surname><given-names>C</given-names></name><name><surname>Lossos</surname><given-names>IS</given-names></name><name><surname>Rosenwald</surname><given-names>A</given-names></name><name><surname>Boldrick</surname><given-names>JC</given-names></name><name><surname>Sabet</surname><given-names>H</given-names></name><name><surname>Tran</surname><given-names>T</given-names></name><name><surname>Yu</surname><given-names>X</given-names></name><name><surname>Powell</surname><given-names>JI</given-names></name><name><surname>Yang</surname><given-names>L</given-names></name><name><surname>Marti</surname><given-names>GE</given-names></name><name><surname>Moore</surname><given-names>T</given-names></name><name><surname>Jr</surname><given-names>JH</given-names></name><name><surname>Lu</surname><given-names>L</given-names></name><name><surname>Lewis</surname><given-names>DB</given-names></name><name><surname>Tibshirani</surname><given-names>R</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name><name><surname>Chan</surname><given-names>WC</given-names></name><name><surname>Greiner</surname><given-names>TC</given-names></name><name><surname>Weisenburger</surname><given-names>DD</given-names></name><name><surname>Armitage</surname><given-names>JO</given-names></name><name><surname>Warnke</surname><given-names>R</given-names></name><name><surname>Levy</surname><given-names>R</given-names></name><name><surname>Wilson</surname><given-names>W</given-names></name><name><surname>Grever</surname><given-names>MR</given-names></name><name><surname>Byrd</surname><given-names>JC</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Staudt</surname><given-names>LM</given-names></name></person-group><article-title>Distinct types of diffuse large B-cell lymphoma identified by gene expression profiling</article-title><source>Nature</source><year>2000</year><volume>403</volume><fpage>503</fpage><lpage>511</lpage><pub-id pub-id-type="pmid">10676951</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yeung</surname><given-names>KY</given-names></name><name><surname>Medvedovic</surname><given-names>M</given-names></name><name><surname>Bumgarner</surname><given-names>RE</given-names></name></person-group><article-title>Clustering gene-expression data with repeated measurements</article-title><source>Genome Biol</source><year>2003</year><volume>4</volume><fpage>R34</fpage><pub-id pub-id-type="pmid">12734014</pub-id><pub-id pub-id-type="doi">10.1186/gb-2003-4-5-r34</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Eisen</surname><given-names>MB</given-names></name><name><surname>Spellman</surname><given-names>PT</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name></person-group><article-title>Cluster analysis and display of genome-wide expression patterns</article-title><source>Proc Natl Acad Sci U S A</source><year>1998</year><fpage>14863</fpage><lpage>14868</lpage><pub-id pub-id-type="pmid">9843981</pub-id><pub-id pub-id-type="doi">10.1073/pnas.95.25.14863</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Quackenbush</surname><given-names>J</given-names></name></person-group><article-title>Computational analysis of microarray data</article-title><source>Nat Rev Genet</source><year>2001</year><volume>2</volume><fpage>418</fpage><lpage>427</lpage><pub-id pub-id-type="pmid">11389458</pub-id><pub-id pub-id-type="doi">10.1038/35076576</pub-id></citation></ref><ref id="B6"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Beasley</surname><given-names>TM</given-names></name></person-group><article-title>Comments on the Analysis of Data with Missing Values</article-title><source>Tech rep</source><year>1998</year></citation></ref><ref id="B7"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Little</surname><given-names>R</given-names></name><name><surname>Rubin</surname><given-names>D</given-names></name></person-group><source>Statistical Analysis With Missing Data</source><year>1987</year><publisher-name>Wiley, New Work</publisher-name></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Narhi</surname><given-names>V</given-names></name><name><surname>Laassonen</surname><given-names>S</given-names></name><name><surname>Hietala</surname><given-names>R</given-names></name><name><surname>Ahonen</surname><given-names>T</given-names></name><name><surname>Lyyti</surname><given-names>H</given-names></name></person-group><article-title>Treating missing data in a clinical neuropsychological dataset-data imputation</article-title><source>The Clinical Neuropsychologist</source><year>2001</year><volume>15</volume><fpage>380</fpage><lpage>392</lpage><pub-id pub-id-type="pmid">11778776</pub-id><pub-id pub-id-type="doi">10.1076/clin.15.3.380.10266</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gasch</surname><given-names>AP</given-names></name><name><surname>Spellman</surname><given-names>PT</given-names></name><name><surname>Kao</surname><given-names>CM</given-names></name><name><surname>Carmel-Harel</surname><given-names>O</given-names></name><name><surname>Eisen</surname><given-names>MB</given-names></name><name><surname>Storz</surname><given-names>G</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name></person-group><article-title>Genomic expression programs in the response of yeast cells to environmental changes</article-title><source>Molecular Biology of the Cell</source><year>2000</year><volume>11</volume><fpage>4241</fpage><lpage>4257</lpage><pub-id pub-id-type="pmid">11102521</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Garber</surname><given-names>ME</given-names></name><name><surname>Troyanskaya</surname><given-names>OG</given-names></name><name><surname>Schluens</surname><given-names>K</given-names></name><name><surname>Petersen</surname><given-names>S</given-names></name><name><surname>Thaesler</surname><given-names>Z</given-names></name><name><surname>Pacyna-Gengelbach</surname><given-names>M</given-names></name><name><surname>van de Rijn</surname><given-names>M</given-names></name><name><surname>Rosen</surname><given-names>GD</given-names></name><name><surname>Perou</surname><given-names>CM</given-names></name><name><surname>Whyte</surname><given-names>RI</given-names></name><name><surname>Altman</surname><given-names>RB</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Petersen</surname><given-names>I</given-names></name></person-group><article-title>Diversity of gene expression in adenocarcinoma of the lung</article-title><source>Proc Natl Acad Sci U S A</source><year>2001</year><volume>98</volume><fpage>13784</fpage><lpage>13789</lpage><pub-id pub-id-type="pmid">11707590</pub-id><pub-id pub-id-type="doi">10.1073/pnas.241500798</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bohen</surname><given-names>SP</given-names></name><name><surname>Troyanskaya</surname><given-names>OG</given-names></name><name><surname>Alter</surname><given-names>O</given-names></name><name><surname>Warnke</surname><given-names>R</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Levy</surname><given-names>R</given-names></name></person-group><article-title>Variation in gene expression patterns in follicular lymphoma and the response to rituximab</article-title><source>Proc Natl Acad Sci U S A</source><year>2003</year><volume>100</volume><fpage>1926</fpage><lpage>1930</lpage><pub-id pub-id-type="pmid">12571354</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0437875100</pub-id></citation></ref><ref id="B12"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Kuzin</surname><given-names>SS</given-names></name></person-group><article-title>Data imputation based on regression models with variayions of entropy</article-title><source>In Conference of European Statistics</source><year>2000</year><fpage>18</fpage><lpage>20</lpage></citation></ref><ref id="B13"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Beaumont</surname><given-names>JF</given-names></name></person-group><article-title>On regression imputation in the presence of nonignorable nonresponse</article-title><source>In Proceeding of the Survey Research Methods Section, American Statistical Asssociation</source><year>2000</year><fpage>580</fpage><lpage>585</lpage></citation></ref><ref id="B14"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Raj</surname><given-names>B</given-names></name><name><surname>Singh</surname><given-names>R</given-names></name><name><surname>Stern</surname><given-names>RM</given-names></name></person-group><article-title>Inference of missing spectrographic features for robust speech recognition</article-title><source>In Proceedings of the International Conference on Spoken Language Precessing</source><year>1998</year><fpage>1491</fpage><lpage>1494</lpage></citation></ref><ref id="B15"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Breiman</surname><given-names>L</given-names></name><name><surname>Friedman</surname><given-names>JH</given-names></name><name><surname>Olshen</surname><given-names>RA</given-names></name><name><surname>Stone</surname><given-names>CJ</given-names></name></person-group><source>Classification and Regressions Trees</source><year>1984</year><publisher-name>Chapman &#x00026; Hall Inc</publisher-name></citation></ref><ref id="B16"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Feelders</surname><given-names>A</given-names></name></person-group><article-title>Cluster analysis and display of genome-wide expression patterns</article-title><source>In PKDD 99, 3rd European Conference of Principles and Practice of Knowledge Discovery in Databases</source><year>1999</year></citation></ref><ref id="B17"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Rubin</surname><given-names>D</given-names></name></person-group><source>Multiple Imputation for Nonresponse in Surveys</source><year>1987</year><publisher-name>Wiley, New York</publisher-name></citation></ref><ref id="B18"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Schafer</surname><given-names>J</given-names></name></person-group><source>Analysis of Incomplete Multivariate Data</source><year>1997</year><publisher-name>Chapman &#x00026; Hall, New York</publisher-name></citation></ref><ref id="B19"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Hastie</surname><given-names>T</given-names></name><name><surname>Tibshirani</surname><given-names>R</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name><name><surname>Eisen</surname><given-names>M</given-names></name><name><surname>Brown</surname><given-names>P</given-names></name><name><surname>Botsein</surname><given-names>D</given-names></name></person-group><article-title>Imputing Missing Data for Gene Expression Arrays</article-title><source>Technical report, Division of Biostatistics, Stanford University</source><year>1999</year></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Troyanskaya</surname><given-names>O</given-names></name><name><surname>Cantor</surname><given-names>M</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name><name><surname>Brown</surname><given-names>P</given-names></name><name><surname>Hastie</surname><given-names>T</given-names></name><name><surname>Tibshirani</surname><given-names>R</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Altman</surname><given-names>RB</given-names></name></person-group><article-title>Missing value estimation methods for DNA microarrays</article-title><source>Bioinformatics</source><year>2001</year><volume>7</volume><fpage>520</fpage><lpage>525</lpage><pub-id pub-id-type="pmid">11395428</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/17.6.520</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Chen</surname><given-names>JS</given-names></name></person-group><article-title>Jackknife Variance Estimation for Nearest Neighbor Imputation</article-title><source>Journal of Statistical Association</source><year>2001</year><volume>96</volume><fpage>260</fpage><lpage>269</lpage><pub-id pub-id-type="doi">10.1198/016214501750332839</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Spellman</surname><given-names>PT</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name><name><surname>Zhang</surname><given-names>MQ</given-names></name><name><surname>Iyer</surname><given-names>VR</given-names></name><name><surname>Anders</surname><given-names>K</given-names></name><name><surname>Eisen</surname><given-names>MB</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Futcher</surname><given-names>B</given-names></name></person-group><article-title>Comprehensive Identification of Cell-regulated Genes of the Yeast Saccharomyces cerevisiae by Microarray Hybridzation</article-title><source>Molecular biology of the Cell</source><year>1998</year><volume>9</volume><fpage>3273</fpage><lpage>3297</lpage><pub-id pub-id-type="pmid">9843569</pub-id></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yoshimoto</surname><given-names>H</given-names></name><name><surname>Saltsman</surname><given-names>K</given-names></name><name><surname>Gasch</surname><given-names>AP</given-names></name><name><surname>Li</surname><given-names>HX</given-names></name><name><surname>Ogawa</surname><given-names>N</given-names></name><name><surname>D</surname><given-names>B</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Cyert</surname><given-names>MS</given-names></name></person-group><article-title>Genome-wide Analysis of Gene Expression Regulated by the Calcineurin/Crzlp Signaling Pathway in Saccharomyces cerevisiae</article-title><source>The Journal of Biological Chemistry</source><year>2002</year><volume>277</volume><fpage>31079</fpage><lpage>31088</lpage><pub-id pub-id-type="pmid">12058033</pub-id><pub-id pub-id-type="doi">10.1074/jbc.M202718200</pub-id></citation></ref><ref id="B24"><citation citation-type="other"><article-title>Helix group at Stanford University</article-title><ext-link ext-link-type="uri" xlink:href="http://smi-web.stanford.edu/projects/helix/pubs/impute"/></citation></ref><ref id="B25"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Caruana</surname><given-names>R</given-names></name></person-group><article-title>A Non-Parametric EM-Style Algorithm for Imputing Missing Values</article-title><source>AI and Statistics</source><year>2001</year></citation></ref><ref id="B26"><citation citation-type="other"><article-title>R: A language and environment for statistical computing</article-title><ext-link ext-link-type="uri" xlink:href="http://www.R-project.org"/></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p>Comparison of the accuracy of KNN, sequential KNN, EM style sequential KNN, and MI methods for three different types of data sets. The accuracies were assessed by Root Mean Squared (RMS) error. Tested data sets were time series data set [22] (a), mixed (time series and non-time series) data set [23] (b), and non-time series data set [9] (c).</p></caption><graphic xlink:href="1471-2105-5-160-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p>Comparison of distributions of the similarities between genes in different types of microarray data sets. The Euclidean distances were measured between a randomly selected gene and the rest of genes in each data set. The solid line, dotted line and dashed line represent for time series data, mixed data, and non-time series data respectively. The shape of the distribution implies the degree of similarities between genes in each data set.</p></caption><graphic xlink:href="1471-2105-5-160-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p>Comparison of the performance of KNN, SKNN, EM-SKNN, and MI methods by the correlation coefficients for each column between the original data and the imputed data of time-series data. The imputed data set was created by each imputation method from the data set having 50% of randomly (a) or non-randomly (b) generated missing entries.</p></caption><graphic xlink:href="1471-2105-5-160-3"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>The RMS errors of different imputation methods for time-series data set having non-randomly generated missing entries.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">missing rate(%)</td><td align="center">KNN</td><td align="center">SKNN</td><td align="center">EM-SKNN</td><td align="center">MI</td><td align="center">MLE</td></tr></thead><tbody><tr><td align="center">10</td><td align="center">0.2171</td><td align="center">0.2247</td><td align="center">0.2239</td><td align="center">0.1573</td><td align="center">0.2112</td></tr><tr><td align="center">20</td><td align="center">0.2233</td><td align="center">0.2223</td><td align="center">0.2175</td><td align="center">0.2171</td><td align="center">0.2602</td></tr><tr><td align="center">30</td><td align="center">0.2422</td><td align="center">0.2285</td><td align="center">0.2224</td><td align="center">0.2277</td><td align="center">0.2907</td></tr><tr><td align="center">40</td><td align="center">0.2778</td><td align="center">0.2369</td><td align="center">0.2288</td><td align="center">0.2380</td><td align="center">0.3079</td></tr><tr><td align="center">50</td><td align="center">0.3155</td><td align="center">0.2450</td><td align="center">0.2349</td><td align="center">0.2495</td><td align="center">0.3237</td></tr><tr><td align="center">60</td><td align="center">0.3210</td><td align="center">0.2487</td><td align="center">0.2476</td><td align="center">0.2627</td><td align="center">0.3381</td></tr></tbody></table></table-wrap></sec></back></article>



