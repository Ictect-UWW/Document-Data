<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15663796</article-id><article-id pub-id-type="pmc">PMC547898</article-id><article-id pub-id-type="publisher-id">1471-2105-6-15</article-id><article-id pub-id-type="doi">10.1186/1471-2105-6-15</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Large scale hierarchical clustering of protein sequences</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Krause</surname><given-names>Antje</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I3">3</xref><email>akrause@igw.tfh-wildau.de</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Stoye</surname><given-names>Jens</given-names></name><xref ref-type="aff" rid="I2">2</xref><email>stoye@techfak.uni-bielefeld.de</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Vingron</surname><given-names>Martin</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>vingron@molgen.mpg.de</email></contrib></contrib-group><aff id="I1"><label>1</label>Max Planck Institute for Molecular Genetics, Computational Molecular Biology, Ihnestrasse 73, 14195 Berlin, Germany</aff><aff id="I2"><label>2</label>Universit&#x000e4;t Bielefeld, Technische Fakult&#x000e4;t, AG Genominformatik, Postfach 100131, 33501 Bielefeld, Germany</aff><aff id="I3"><label>3</label>TFH Wildau, Bahnhofstrasse 1, 15745 Wildau, Germany</aff><pub-date pub-type="collection"><year>2005</year></pub-date><pub-date pub-type="epub"><day>22</day><month>1</month><year>2005</year></pub-date><volume>6</volume><fpage>15</fpage><lpage>15</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/6/15"/><history><date date-type="received"><day>2</day><month>8</month><year>2004</year></date><date date-type="accepted"><day>22</day><month>1</month><year>2005</year></date></history><copyright-statement>Copyright &#x000a9; 2005 Krause et al; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>Searching a biological sequence database with a query sequence looking for homologues has become a routine operation in computational biology. In spite of the high degree of sophistication of currently available search routines it is still virtually impossible to identify quickly and clearly a group of sequences that a given query sequence belongs to.</p></sec><sec><title>Results</title><p>We report on our developments in grouping all known protein sequences hierarchically into superfamily and family clusters. Our graph-based algorithms take into account the topology of the sequence space induced by the data itself to construct a biologically meaningful partitioning. We have applied our clustering procedures to a non-redundant set of about 1,000,000 sequences resulting in a hierarchical clustering which is being made available for querying and browsing at <ext-link ext-link-type="uri" xlink:href="http://systers.molgen.mpg.de/"/>.</p></sec><sec><title>Conclusions</title><p>Comparisons with other widely used clustering methods on various data sets show the abilities and strengths of our clustering methods in producing a biologically meaningful grouping of protein sequences.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>With the overwhelming growth of biological sequence databases, handling of these amounts of data has increasingly become a problem. Protein sequences constitute one such data type. The number of unique entries in all protein sequence databases together exceeds now about a million. However, biological evolution lets proteins fall into so-called families, thus imposing a natural grouping. A protein family contains sequences that are evolutionarily related. Generally, this is reflected by sequence similarity. Therefore, one aims at organizing the set of all protein sequences into clusters based on their sequence similarity.</p><p>Clustering a large set of sequences as opposed to dealing only with the individual sequences offers several advantages. A frequent problem is the identification of sequences that are similar to a new query sequence. This task can be executed much quicker when only one comparison to an entire cluster has to be performed rather than one comparison per database sequence. Another application lies in the possibility of analyzing evolutionary relationships among the sequences in a cluster and of the species they come from. Moreover, the presence or absence of sequences of a group of species can give useful information about their evolutionary relationship, if their complete set of protein sequences is known.</p><p>The aim of clustering protein sequences is to get a biologically meaningful partitioning. One of the simplest well-studied and computationally cheap methods to construct a clustering of data points is <italic>single linkage clustering</italic>. Starting with the pair of data points of least distance, one incrementally merges single data points or already existing clusters. Such a hierarchical clustering can be viewed as a tree, called the <italic>single linkage tree</italic>. The leaves represent the individual data points, while the root of this tree corresponds to just one large cluster representing the whole data set. All other layers in between can be seen as cluster sets at different levels of similarity. However, it is not clear which layers give a meaningful partitioning of the data. They should be chosen so that they neither produce small trivial clusters nor form huge uninformative clusters.</p><p>Several approaches already deal with the problem of partitioning a protein sequence database into protein families. Automatically generated cluster sets like ProtoMap [<xref ref-type="bibr" rid="B1">1</xref>], ProtoNet [<xref ref-type="bibr" rid="B2">2</xref>], or CluSTr [<xref ref-type="bibr" rid="B3">3</xref>] typically provide a hierarchical classification at several different levels of similarity. Others, like iProClass [<xref ref-type="bibr" rid="B4">4</xref>] or PIRSF [<xref ref-type="bibr" rid="B5">5</xref>] include further knowledge, e.g., from domain based classifications, or require manual interaction. Kawaji <italic>et al</italic>. [<xref ref-type="bibr" rid="B6">6</xref>] recently developed a graph-based clustering method for the detection of distantly related sequences of a protein family. TribeMCL [<xref ref-type="bibr" rid="B7">7</xref>] is a method for clustering proteins into 'protein families' using a Markov Clustering method. It is primarily used for comparing protein sequence sets of completely sequenced genomes. Reviews of currently available cluster sets can be found in: Heger <italic>et al</italic>. [<xref ref-type="bibr" rid="B8">8</xref>] and Liu <italic>et al</italic>. [<xref ref-type="bibr" rid="B9">9</xref>].</p><p>In our approach we first exploit the branching structure of the single linkage tree, which elucidates an unexpected structuring of the sequence space. Traversing the tree from a leaf towards the root we inspect the sizes of the merging subtrees. First one notices relatively small increases that correspond to very similar proteins. Later on, sequences merging in correspond to weakly related proteins. At one point, however, we observe an enormous increase in the size of the subtree, where a large part of the database merges in. All sequences below this point in the tree are assumed to belong to the same <italic>superfamily</italic>. Each superfamily typically covers several closely related protein families. They can be determined by revealing the connectivity of the sequences belonging to a superfamily. Since the single linkage tree is built using only the smallest distances connecting subtrees, information about the connectivity within these subtrees is lost in the hierarchy. For each superfamily, we construct a <italic>superfamily distance graph </italic>by including only those nodes labeled with sequences belonging to the respective superfamily. These graphs are then split at reasonable cut sites into <italic>highly connected subclusters</italic>. For historical reasons [<xref ref-type="bibr" rid="B10">10</xref>], we call our procedure as well as the resulting cluster set SYSTERS, which is short for <italic>SYSTEmatic Re-Searching</italic>.</p><p>Up to that point, the hierarchy consists of superfamily and family clusters. However, protein sequences are built up of smaller entities, called <italic>domains</italic>. They again can be grouped independently of a certain order in a protein sequence. For this level we rely on one of the currently established domain databases, i.e., the Pfam database [<xref ref-type="bibr" rid="B11">11</xref>]. To allow the user to explore protein sequence space through the complete hierarchy, we present an interface to our cluster set on the Internet. It is possible to enter the hierarchy at each of the layers through various entry points and change to another layer whenever desired. Additional information like a multiple alignment or a phylogenetic tree is given for each of the family clusters.</p><p>Here, we explain in more detail the SYSTERS algorithms developed to determine superfamily and family clusters. Each step is illustrated by an example. We report our results on clustering the non-redundant protein sequence space consisting of about 1,000,000 sequences. An overview of the availability and accessibility of the cluster set is given. Finally, we present a comparison of our clustering method with two other currently available and widely used clustering methods, namely single linkage clustering and TribeMCL.</p></sec><sec><title>Results and discussion</title><sec><title>Clustering</title><p>We have applied our algorithms as described in the Methods Section to a sequence set consisting of all known protein sequences from the Swiss-Prot Rel. 41 and TrEMBL Rel. 23 databases [<xref ref-type="bibr" rid="B12">12</xref>], and from several completely sequenced organisms [<xref ref-type="bibr" rid="B13">13</xref>-<xref ref-type="bibr" rid="B16">16</xref>]. The original set contains 1,168,542 sequences. Sequences which are too short to yield a result in the database search are removed from this set. Sequences which are identical (sub-)sequences of other sequences are sorted together and only the longest sequence is retained as the representative. In a pairwise comparison of all remaining 969,579 non-redundant sequences, this results in a triangular matrix sparsely filled with 775,133,144 E-values better than or equal to 0.05. Comparisons of a sequence to itself are not considered. By temporarily removing all those sequences which are at least 80% identical over at least 80% of their entire length to another sequence, this number decreases. These sequences are considered redundant, and are added to the cluster set again later in order to retain their annotation. By reducing the number of sequences to 546,538 non-redundant sequences, the remaining number of pairwise comparisons decreases significantly. Fortunately, the resulting triangular distance matrix turns out to be sparsely filled with only 52,618,818 values (0.035% of all possible pairs). Constructing the distance graph with these values, the data splits into 93,918 connected components with 76,347 components consisting of only one sequence. The resulting single linkage tree divides into 147,796 superfamilies with 110,308 of them consisting of only one sequence. The subclustering splits the data further into 158,153 family clusters with an overall number of 110,322 single sequence clusters.</p></sec><sec><title>Access to the cluster set</title><p>The SYSTERS cluster set [<xref ref-type="bibr" rid="B17">17</xref>] is available over the Internet at <ext-link ext-link-type="uri" xlink:href="http://systers.molgen.mpg.de/"/>. There it is possible to explore the protein sequence space by navigating through the complete hierarchy consisting of superfamilies, family clusters, and domains. For the last layer in the hierarchy, the domain level, we rely on one of the currently established domain databases, namely the Pfam collection of protein domains. It is possible to enter the hierarchy at any layer, e.g., by searching for a keyword, choosing a species, or selecting a domain. For each family cluster a consensus sequence is generated. All consensus sequences together build a database searchable by BLAST. Thus, a clear assignment of a new protein or nucleotide sequence to a family and a superfamily is possible. Additional information like a multiple alignment or a phylogenetic tree is given for each of the family clusters. Whenever possible, links to external resources are provided to allow for further information, e.g., about structural properties or underlying genes.</p></sec><sec><title>Validation</title><p>For the validation of our clustering procedures we needed on one hand a "true" biologically verified cluster set and on the other hand results of other clustering procedures on this data set. Unfortunately, for large scale analyses such validated data is not available. Thus, we decided on performing our evaluations on two biologically meanigful data sets, namely well characterized sequences from Swiss-Prot and TrEMBL with (a) Pfam domain annotations and (b) ENZYME annotations.</p><p>Clustering of such large data sets is not an every day routine. Normally the software to handle such data sets is not publicly available and only the results of their application are published. Although these results are mostly publicly available for browsing on the web the underlying primary data differs in all of these data sets. Additionally a systematic, unbiased and independent comparison would be intractable on a large scale by querying the web.</p><p>One of the simplest well-studied and computationally cheap methods to construct a clustering is single linkage clustering. We implemented procedures to perform a single linkage clustering on the two data sets at various different cutoffs. This corresponds to performing single sequence searches with a certain E-value cut-off for all sequences in the data set with subsequent determination of the connected components of the results. Additionally we decided to compare our clustering procedure to one of the most widely used and publicly available methods for large scale protein sequence clustering, namely TribeMCL.</p><p>We applied the single linkage clustering as well as the SYSTERS clustering to the Pfam data set and computed the Jaccard coeffcient, the sensitivity and the selectivity of the clustering results in comparison to the "true" cluster set as described in the Methods Section. All clusterings were performed on the non-redundant data set as described under Preprocessing in the Methods Section. After the clustering, redundant sequences were added again to the cluster sets to allow for a comparison with the "true" cluster sets.</p><p>For the Pfam cluster set the best single linkage clustering with respect to the "true" cluster set can be achieved at an E-value cutoff of 1e-53 (cf. Table <xref ref-type="table" rid="T1">1</xref>). The SYSTERS clustering results in a slightly higher Jaccard value. Note that the "best" single linkage clustering result can not be determined from the clustering itself, but was selected after comparison with the "true" cluster set, which is not available when clustering new sequence data. Thus, the SYSTERS clustering turns out to be superior to the single linkage clustering in the sense that it is able to determine the correct cluster granularity without manual interaction.</p><p>In total we get only weak results for the Pfam data set. One of the reasons is the choice of the "true" cluster set. Figure <xref ref-type="fig" rid="F1">1</xref> shows an example where sequences composed of the same domains and belonging to the same family of adenylate cyclases end up in different "true" clusters. The repetition of one domain and the presence/absence of another domain lets them fall into different "true" clusters. These sequences are in a biological sense correctly clustered by SYSTERS but cause a problem when comparing them to the "true" cluster set. In this case the "true" clusters build subsets of the SYSTERS subclusters.</p><p>Another reason for the weak results in comparison with the Pfam data set are fusion proteins. They bring together sequences belonging to otherwise unrelated families.</p><p>We applied the single linkage clustering, the SYSTERS clustering and the TribeMCL clustering to the ENZYME data sets and computed the Jaccard coeffcient, the sensitivity and the selectivity of the clustering results in comparison to the "true" cluster sets as described in the Methods Section. For this data set the SYSTERS clustering turns out to be superior to both the single linkage clustering and TribeMCL (cf. Table <xref ref-type="table" rid="T1">1</xref>). In both ENZYME data sets the TribeMCL clustering shows the best ability to reject unrelated sequences but at the expense of finding distantly related sequences. As expected, the SYSTERS subclustering shows the best result on the lowest level of the ENZYME data set where individual enzymes are identified.</p><p>In total all methods perform significantly better on the ENZYME data set. This data set is much smaller than the Pfam data set and contains well annotated enzymes. In contrast to the Pfam data set, the "true" cluster set was chosen on the basis of enzyme annotation, namely EC numbers, as described in the Methods section. Sequences belonging to the same "true" cluster thus may show the same domain composition but may also differ in this sense. Although this is a somehow weaker definition of a "true" cluster set it is more focussing on the functional properties of the proteins.</p></sec></sec><sec><title>Conclusions</title><p>We have presented a hierarchical clustering of protein sequences into biologically meaningful superfamily and family clusters. A combination of an upward sweep with dynamic determination of superfamily cutoffs and a downward pass that divides superfamilies into families has been introduced. We determine a superfamily by detecting the largest increase in the size of the merging subtree traversing from a leaf in a single linkage tree to the root. We assume that at this point the twilight zone begins because suddenly a large number of supposedly unrelated sequences enters the cluster. Each of the superfamilies is further cut into family clusters by detecting weak connections in the underlying distance graph.</p><p>It is interesting that both the superfamilies as well as the family clusters are generated solely from the structure of the single linkage tree (respectively the underlying distance graph), without any knowledge of the biological information represented. Such self-structuring properties have also been observed in other large data sets such as phone-call or web-link graphs [<xref ref-type="bibr" rid="B18">18</xref>].</p><p>An alternative approach for cluster determination is presented by Sharan <italic>et al</italic>. [<xref ref-type="bibr" rid="B19">19</xref>]. Their CLICK algorithm (Cluster Identification via Connectivity Kernels) uses graph-theoretic and statistical techniques to first identify tight groups of highly similar elements (kernels), which are likely to belong to the same cluster. Several heuristic procedures are then used to expand the kernels into the full clustering. In our much simpler approach, we produce a hierarchical clustering based on the partitioning into superfamilies, which already results in a biologically meaningful set of family clusters.</p><p>Although the vast majority of cases we looked at are in agreement with biological knowledge, there exist some inconsistencies due to peculiarities in the data. Distinct protein families may end up erroneously in the same superfamily because of a fusion protein covering sequence information from both families. The same effect can be seen at multidomain protein families linked together by a single highly conserved common domain. Although the subclustering in most cases splits these superfamilies again into distinct families, we would prefer to take care of these cases already in the process of superfamily determination. Nevertheless, comparisons with other methods showed that our clustering methods are able to produce a biologically meaningful clustering.</p><p>Thus far, our hierarchy consists of two layers representing protein superfamilies and families. For the third layer located at the domain level, we currently rely on well-established domain databases, but intend to follow our methodology also in the direction of deriving so far unknown domains.</p><p>Future plans also include a regular update of the SYSTERS cluster set. Since the most time consuming part are the all-against-all sequence searches, new sequence similarities will be incrementally added instead of recalculating all similarity values. The clustering procedures themselves rely on the topology of the whole sequence space and can be run on the whole data set whenever the underlying sequence set changes. Other future developments will be in the direction of the so called <italic>tree of life</italic>. We plan to combine the evolutionary information given by each of the protein clusters to extend the knowledge about the relationship between different groups of species.</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Clustering procedures</title><p>Here we present the methods that we use to compute our clustering of protein sequences, i.e., selecting superfamilies and dividing them into reasonable family clusters. Figure <xref ref-type="fig" rid="F2">2</xref> shows a schematic overview.</p><sec><title>Preprocessing</title><p>The total number of entries in all protein sequence databases together now exceeds about a million. This number includes fragmental as well as identical (sub-)sequences from different resources. To reduce the amount of data without losing information we exclude redundant information in the form of identical and nearly identical (sub-)sequences from the data set prior to the clustering.</p><p>We model the remaining protein space as a weighted undirected graph with pairwise distances attached to the edges. We decided on using E-values computed from pairwise local sequence alignments [<xref ref-type="bibr" rid="B20">20</xref>] as distances (all-against-all database searches were carried out on a Paracel GeneMatcher&#x02122; machine [<xref ref-type="bibr" rid="B21">21</xref>]). The E-value (short for Expectation value) is the number of alignments with similarity scores equivalent to or better than the score <italic>S </italic>that one expects to find in a database search by chance. Thus, the lower the E-value, the more significant is the score. Typically, matches with an E-value lower than 1e-20 are assumed to be relevant, while those sequence pairs with an E-value higher than 0.01 need further experimental evidence to be accepted as being distantly related. Values in between belong to the so called <italic>twilight zone</italic>, and a clear statement about relatedness cannot be made for them. All sequence pairs whose E-value was worse than 0.05 were assumed to be unrelated and their distance was set to infinity. We are aware that we may miss distantly related sequences with this E-value threshold in a single sequence search. However, by using each sequence in the data set as query in a database search and combining all results we hope to overcome this problem. The resulting symmetric distance matrix <italic>D </italic>contains all pairwise distances <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>) for each pair of protein sequences <italic>s</italic><sub><italic>i </italic></sub>and <italic>s</italic><sub><italic>j</italic></sub>, 1 &#x02264; <italic>i</italic>, <italic>j </italic>&#x02264; <italic>n</italic>, for which <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>) &#x0003c; &#x0221e;.</p></sec><sec><title>Single linkage tree</title><p>The distance matrix <italic>D </italic>can be represented by an undirected weighted graph <italic>G</italic>, which we call the <italic>distance graph</italic>. <italic>G </italic>= (<italic>V</italic>, <italic>E</italic>) is defined as follows: <italic>V </italic>= {<italic>v</italic><sub><italic>i </italic></sub>| <italic>v</italic><sub><italic>i </italic></sub>= {<italic>s</italic><sub><italic>i</italic></sub>}, <italic>i </italic>&#x02208; {1, ..., <italic>n</italic>}} and <italic>E </italic>= {(<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) | <italic>i</italic>, <italic>j</italic>, &#x02208; {1, ..., <italic>n</italic>}, <italic>i </italic>&#x02260; <italic>j</italic>, <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>) &#x0003c; &#x0221e;}. The weight <italic>w</italic>(<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) of an edge (<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) &#x02208; <italic>E </italic>is given by <italic>w</italic>(<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) = <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>).</p><p>The single linkage tree is built based on the distance graph <italic>G </italic>in an agglomerative manner. The algorithm starts with a forest (collection of trees) <italic>F </italic>where each sequence corresponds to a distinct tree. As long as there are edges in the graph <italic>G</italic>, the edge with the smallest weight is selected and the adjacent nodes in <italic>G </italic>are merged. Edges linking this newly created node to adjacent ones in the graph receive the weight of the smaller of the two original edges. The two corresponding trees in <italic>F </italic>are collected together in a new tree rooted by a parental node labeled with the connecting edge weight. Finally, to allow for a better handling of the data, the resulting unconnected trees are rooted by connecting their roots to an artificial overall root node with weight infinity.</p></sec><sec><title>Superfamily determination</title><p>Different protein superfamilies display a different degree of conservation. Therefore, for each superfamily, the twilight zone starts at a different cutoff. A crucial problem thus lies in the determination of an appropriate E-value threshold for each superfamily. To this end we have devised the following procedure. For an edge of the tree linking, say, a parent <italic>p </italic>and a child <italic>q</italic>, we compute the quantity</p><p><inline-graphic xlink:href="1471-2105-6-15-i1.gif"/></p><p><italic>J </italic>represents the ratio between the size of all the subtrees below <italic>p </italic>without the child <italic>q </italic>and the size of the subtree below <italic>q</italic>. Watching the development of <italic>J </italic>as one walks up the tree from a leaf towards the root, one can observe that <italic>J </italic>tends to increase dramatically as one leaves the superfamily to which the leaf belongs, and then decreases again. This intuition is captured by our algorithm. For each leaf, we determine the maximum <italic>J </italic>as one proceeds from the leaf to the root of the single linkage tree. This strategy is applied to all leaves in the tree, assigning a superfamily to each leaf. In the end, inclusions are resolved by keeping the largest superfamilies. We call the internal node induced by a superfamily the <italic>superfamily root</italic>. The E-value linked to this node is called the <italic>superfamily cutoff</italic>. Refer to Algorithm 1 in Figure <xref ref-type="fig" rid="F3">3</xref> for more details. Figure <xref ref-type="fig" rid="F4">4</xref> shows an example of the superfamily determination. Only a part of the complete single linkage tree consisting of 290,811 leaves and 186,176 internal nodes is shown. The superfamily procedure correctly determines the ephrin family of sequences. Ephrins are membrane-attached proteins involved in the development of the nervous system and can be further distinguished into type A and type B ephrins depending on their membrane binding mechanism.</p></sec><sec><title>Subclustering</title><p>Stepping down the hierarchy of the single linkage tree starting at a superfamily root usually splits off one sequence after another, but does not lead to a meaningful partitioning into families. Since the single linkage tree is built using only the best (lowest) E-values connecting subtrees, information about the connectivity within these subtrees is lost in the hierarchy. For each superfamily we construct a distance graph that includes only those nodes labeled with sequences belonging to the respective superfamily and those of the induced edges which are labeled with a distance better than or equal to the superfamily cutoff. Let <italic>SF </italic>be the set of sequences belonging to the superfamily <italic>sf </italic>and <italic>c </italic>the corresponding superfamily cutoff. We call the connected weighted graph <italic>G </italic>= (<italic>V</italic>, <italic>E</italic>) with <italic>V </italic>= {<italic>v</italic><sub><italic>i </italic></sub>| <italic>v</italic><sub><italic>i </italic></sub>= {<italic>s</italic><sub><italic>i</italic></sub>}, <italic>s</italic><sub><italic>i </italic></sub>&#x02208; <italic>SF</italic>} and <italic>E </italic>= {(<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) | <italic>w</italic>(<italic>v</italic><sub><italic>i</italic></sub>, <italic>v</italic><sub><italic>j</italic></sub>) = <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>), <italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j </italic></sub>&#x02208; <italic>SF</italic>, <italic>i </italic>&#x02260; <italic>j</italic>, <italic>d</italic>(<italic>s</italic><sub><italic>i</italic></sub>, <italic>s</italic><sub><italic>j</italic></sub>) &#x02264; <italic>c</italic>} the <italic>superfamily distance graph </italic>of <italic>sf</italic>.</p><p>To split a superfamily distance graph into family clusters, we use an algorithm that can be seen as a weighted version of a method presented by Hartuv <italic>et al</italic>. [<xref ref-type="bibr" rid="B22">22</xref>]. First, we review some standard graph-theoretic definitions. The <italic>edge-connectivity k</italic>(<italic>G</italic>) of a graph <italic>G </italic>is the minimum number <italic>k </italic>of edges whose removal results in a disconnected graph. A <italic>cut </italic>in a graph is a set of edges <italic>C </italic>whose removal disconnects the graph into two disjoint components <italic>H</italic><sub>1 </sub>and <italic>H</italic><sub>2</sub>. A <italic>minimal cut </italic>is a cut with a minimum number of edges. The length <italic>p</italic>(<italic>u</italic>, <italic>v</italic>) of the <italic>shortest path </italic>between nodes <italic>u </italic>and <italic>v </italic>in <italic>G </italic>is the minimum length of a path from <italic>u </italic>to <italic>v</italic>, if such a path exists; otherwise <italic>p</italic>(<italic>u</italic>, <italic>v</italic>) = &#x0221e;. The <italic>diameter </italic>of a connected graph <italic>G </italic>is the maximum shortest path length <italic>p</italic>(<italic>u</italic>, <italic>v</italic>) over all pairs of nodes <italic>u </italic>and <italic>v </italic>in <italic>G</italic>.</p><p>The key definition of the algorithm in [<xref ref-type="bibr" rid="B22">22</xref>] is the following: An undirected unweighted graph <italic>G </italic>with <italic>n </italic>&#x0003e; 1 nodes is called <italic>highly connected</italic>, if <italic>k</italic>(<italic>G</italic>) &#x0003e;<inline-graphic xlink:href="1471-2105-6-15-i2.gif"/>. A <italic>highly connected subgraph </italic>(HCS) is an induced subgraph <italic>H </italic>&#x02286; <italic>G</italic>, such that <italic>H </italic>is highly connected. In an unweighted graph this definition results in the following property: The diameter of every highly connected subgraph is at most two. Thus, these subgraphs are compact clusters which need not meet the constraint of being fully connected.</p><p>The original HCS algorithm in [<xref ref-type="bibr" rid="B22">22</xref>] recursively splits a connected graph at a minimal cut site until a disjoint set of <italic>highly connected subclusters </italic>is reached. For our purposes we had to modify the algorithm to be able to handle a weighted graph. Precisely, in our weighted HCS algorithm, if the edge weights covered by the minimal cut are approximately the same as in the remaining graph, the graph is assumed to be already highly connected and is not further split into subclusters (see Algorithm 2 in Figure <xref ref-type="fig" rid="F3">3</xref>).</p><p>The E-values in our data set range from 0 (corresponding to any E-value better than 1e-180) to 0.05. To be able to find a minimal cut in our graph, edge labels should be positive values with a low value representing a weak connection and a high value representing a strong connection. Instead of using the raw E-values we label the edges in our graph with the negative logarithm of the corresponding E-value each. Since the logarithm of 0 is not defined, we use an arbitrary value (e.g., 181) for these edges instead of the logarithm. The running time of both HCS algorithms is bounded by 2<italic>N </italic>* <italic>f</italic>(<italic>n</italic>, <italic>m</italic>), where <italic>N </italic>is the number of clusters found and <italic>f</italic>(<italic>n</italic>, <italic>m</italic>) is the time complexity of computing a minimum cut in a graph with <italic>n </italic>nodes and <italic>m </italic>edges. We use the implementation of the "mincut" algorithm given in the LEDA [<xref ref-type="bibr" rid="B23">23</xref>] distribution, which has a time complexity of <inline-graphic xlink:href="1471-2105-6-15-i3.gif"/>(<italic>nm </italic>+ <italic>n</italic><sup>2 </sup>log <italic>n</italic>).</p><p>To apply this algorithm to our data set we added a preprocessing as well as a postprocessing step as shown in Algorithm 3 in Figure <xref ref-type="fig" rid="F3">3</xref>. First, we describe the preprocessing. Cuts consisting of only one edge in the graph will be found first by the mincut algorithm, but are as time consuming to find as other cuts.</p><p>Sequences being connected with the remaining graph by only one edge are either fragmental or are the so far sole representative of a protein family in the sequence database. The underlying data of our clustering is known to contain lots of fragmental sequences. Before applying the HCS algorithm to our graph, we repeatedly merge all nodes connected to the remaining graph with only one edge with their respective adjacent node.</p><p>Nevertheless, the HCS algorithm may split off single sequences as subclusters. Thus, in a postprocessing step, sequences which ended up after the subclustering as a single sequence cluster are assigned to their closest neighboring cluster (<italic>singleton adoption</italic>), if there is no contradiction. When there are several minimum cuts in a graph, the original as well as our weighted HCS algorithm might choose a minimum cut which, from the clustering point of view, is not optimal. In many cases this process will break clusters into singletons. In the original algorithm in [<xref ref-type="bibr" rid="B22">22</xref>] iterations were introduced to handle these cases. Since we are working on a weighted graph these cases occur very rarely and mostly are compensated by the subsequent singleton adoption step.</p><p>Figure <xref ref-type="fig" rid="F5">5</xref> shows an example of splitting the superfamily distance graph of the ephrin superfamily (see Fig. <xref ref-type="fig" rid="F4">4</xref>) into two subclusters representing ephrin types A and B.</p></sec></sec><sec><title>Validation</title><sec><title>Pfam sequence set</title><p>For our analyses we used all sequences from the Swiss-Prot and TrEMBL databases annotated with Pfam domains (Rel. 9). This data set consists of 5,724 single domain families assigned to 733,830 sequences. Since our aim is not to cluster single domains but full-length sequences, we define a "true" cluster consisting of all sequences having the same domain composition. Fragmental sequences will cause a problem in our analyses by showing a different domain composition than complete sequences. We restrict our analyses to sequences not annotated as being fragmental in the Swiss-Prot or TrEMBL databases. The resulting "true" cluster set thus consists of 442,872 sequences sorted into 16,990 distinct families.</p></sec><sec><title>ENZYME sequence set</title><p>The ENZYME database [<xref ref-type="bibr" rid="B24">24</xref>] stores data of a functional classification system based on function rather than sequence or structure. Each enzyme of known function is given an EC (Enzyme Commission) Number of the form A.B.C.D with</p><p>A : type of reaction catalyzed (at present 6 classes)</p><p>B : subclass, information about type of compound or group involved</p><p>C : sub-subclass, further specifies the nature of the reaction</p><p>D : serial number to identify individual enzyme within sub-subclass</p><p>Although several distinct proteins may catalyze the same reaction, they are all ascribed the same EC number, since the naming system is based upon the reaction catalyzed. Thus, sequences given the same EC number do not necessarily show sequence similarity.</p><p>For our analyses we used all sequences from the Swiss-Prot and TrEMBL databases annotated with a unique EC number. We define two different "true" cluster sets representing different levels of granularity as follow: (1) sequences having A, B, C, and D in common build a cluster, (2) sequences having A, B, and C in common build a cluster. The data set consists of 84,405 sequences.</p></sec><sec><title>Clustering coeffcient</title><p>Assuming we have a well defined cluster set, we can compare our cluster set with this "true" cluster set based on the following numbers:</p><p>Number of sequence pairs clustered together in</p><p><italic>a</italic>: both cluster sets ("true positives").</p><p><italic>b</italic>: the "true" cluster set, but not in our cluster set ("false negatives").</p><p><italic>c</italic>: our cluster set, but not in the "true" cluster set ("false positives").</p><p>As similarity measure we decided on the Jaccard similarity [<xref ref-type="bibr" rid="B25">25</xref>] defined as follows: <inline-graphic xlink:href="1471-2105-6-15-i4.gif"/>. A perfect clustering which is identical to the "true" cluster set would result in <italic>S </italic>= 1.</p><p>Additionally we calculated the sensitivity (the ability to detect distantly related sequences: <inline-graphic xlink:href="1471-2105-6-15-i5.gif"/>) and the specificity (the ability to reject non-related sequences: <inline-graphic xlink:href="1471-2105-6-15-i6.gif"/>) for all cluster sets.</p></sec><sec><title>Single linkage clustering</title><p>We performed a single linkage clustering at various static E-values from 1e-02 to 1e-180. All resulting cluster sets have in common that when plotting the number of clusters against the cutoff E-value, one observes a continuous, smooth curve, indicating that there is no obvious (biologically given) choice of a cutoff (data not shown).</p></sec><sec><title>TribeMCL</title><p>TribeMCL [<xref ref-type="bibr" rid="B7">7</xref>] is a method for clustering proteins into 'protein families' using a Markov Clustering method. It is primarily used for comparing protein sequence sets of completely sequenced genomes. We performed TribeMCL clustering (Version 03&#x02013;276) with different inflation value settings ranging from 1.1 to 5 for all data sets. The inflation parameter is part of the core MCL algorithm and influences the granularity (or size) of the output clusters. For very small or 'tight' protein families an inflation value setting of 4.0 or 5.0 is recommended. For larger (broader) protein families settings of 1.1, 2.0 and 3.0 can be used.</p><p>For the Pfam data set we were not able to perform TribeMCL clustering due to memory allocation problems while executing the program.</p></sec></sec></sec><sec><title>Authors' contributions</title><p>MV had the initial ideas for SYSTERS. JS developed the superfamily determination. AK developed the subfamily determination, implemented the workflow from the raw sequence databases to a working web-server and made the validations. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>We thank Hannes Luz and Thomas Meinel for fruitful discussions. This work is supported by BMBF (Bundesministerium f&#x000fc;r Bildung und Forschung) and HNB (Helmholtz Network for Bioinformatics).</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yona</surname><given-names>G</given-names></name><name><surname>Linial</surname><given-names>N</given-names></name><name><surname>Linial</surname><given-names>M</given-names></name></person-group><article-title>ProtoMap: automatic classification of protein sequences and hierarchy of protein families</article-title><source>Nucleic Acids Research</source><year>2000</year><volume>28</volume><fpage>49</fpage><lpage>55</lpage><pub-id pub-id-type="pmid">10592179</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sasson</surname><given-names>O</given-names></name><name><surname>Vaaknin</surname><given-names>A</given-names></name><name><surname>Fleischer</surname><given-names>H</given-names></name><name><surname>Portugaly</surname><given-names>E</given-names></name><name><surname>Bilu</surname><given-names>Y</given-names></name><name><surname>Linial</surname><given-names>N</given-names></name><name><surname>Linial</surname><given-names>M</given-names></name></person-group><article-title>ProtoNet: hierarchical classification of the protein space</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>348</fpage><lpage>352</lpage><pub-id pub-id-type="pmid">12520020</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kriventseva</surname><given-names>E</given-names></name><name><surname>Servant</surname><given-names>F</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name></person-group><article-title>Improvements to CluSTr: the database of SWISS-PROT + TrEMBL protein clusters</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>388</fpage><lpage>189</lpage><pub-id pub-id-type="pmid">12520029</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>CH</given-names></name><name><surname>Xiao</surname><given-names>C</given-names></name><name><surname>Hou</surname><given-names>Z</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Barker</surname><given-names>WC</given-names></name></person-group><article-title>iProClass: an integrated, comprehensive and annotated protein classification database</article-title><source>Nucleic Acids Research</source><year>2001</year><volume>29</volume><fpage>52</fpage><lpage>54</lpage><pub-id pub-id-type="pmid">11125047</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>C</given-names></name><name><surname>Nikolskaya</surname><given-names>A</given-names></name><name><surname>Huang</surname><given-names>H</given-names></name><name><surname>Yeh</surname><given-names>L</given-names></name><name><surname>Natale</surname><given-names>D</given-names></name><name><surname>Vinayaka</surname><given-names>C</given-names></name><name><surname>Hu</surname><given-names>Z</given-names></name><name><surname>Mazumder</surname><given-names>R</given-names></name><name><surname>Kumar</surname><given-names>S</given-names></name><name><surname>Kourtesis</surname><given-names>P</given-names></name><name><surname>Ledley</surname><given-names>R</given-names></name><name><surname>Suzek</surname><given-names>B</given-names></name><name><surname>Arminski</surname><given-names>L</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Cardenas</surname><given-names>J</given-names></name><name><surname>Chung</surname><given-names>S</given-names></name><name><surname>Castro-Alvear</surname><given-names>J</given-names></name><name><surname>Dinkov</surname><given-names>G</given-names></name><name><surname>Barker</surname><given-names>W</given-names></name></person-group><article-title>PIRSF: family classification system at the Protein Information Resource</article-title><source>Nucleic Acids Res</source><year>2004</year><volume>32</volume><fpage>D112</fpage><lpage>D114</lpage><pub-id pub-id-type="pmid">14681371</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kawaji</surname><given-names>H</given-names></name><name><surname>Takenaka</surname><given-names>Y</given-names></name><name><surname>Matsuda</surname><given-names>H</given-names></name></person-group><article-title>Graph-based clustering for finding distant relationships in a large set of protein sequences</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><fpage>243</fpage><lpage>252</lpage><pub-id pub-id-type="pmid">14734316</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Enright</surname><given-names>A</given-names></name><name><surname>Dongen</surname><given-names>SV</given-names></name><name><surname>Ouzounis</surname><given-names>C</given-names></name></person-group><article-title>An effcient algorithm for large-scale detection of protein families</article-title><source>Nucleic Acids Research</source><year>2002</year><volume>30</volume><fpage>1575</fpage><lpage>1584</lpage><pub-id pub-id-type="pmid">11917018</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Heger</surname><given-names>A</given-names></name><name><surname>Holm</surname><given-names>L</given-names></name></person-group><article-title>Towards a covering set of protein family profiles</article-title><source>Prog Biophys Mol Biol</source><year>2000</year><volume>73</volume><fpage>321</fpage><lpage>337</lpage><pub-id pub-id-type="pmid">11063778</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>J</given-names></name><name><surname>Rost</surname><given-names>B</given-names></name></person-group><article-title>Domains, motifs and clusters in the protein universe</article-title><source>Current Opinion in Chemical Biology</source><year>2003</year><volume>7</volume><fpage>5</fpage><lpage>11</lpage><pub-id pub-id-type="pmid">12547420</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Krause</surname><given-names>A</given-names></name><name><surname>Vingron</surname><given-names>M</given-names></name></person-group><article-title>A set-theoretic approach to database searching and clustering</article-title><source>Bioinformatics</source><year>1998</year><volume>14</volume><fpage>430</fpage><lpage>438</lpage><pub-id pub-id-type="pmid">9682056</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bateman</surname><given-names>A</given-names></name><name><surname>Coin</surname><given-names>L</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Finn</surname><given-names>RD</given-names></name><name><surname>Hollich</surname><given-names>V</given-names></name><name><surname>Griffiths-Jones</surname><given-names>S</given-names></name><name><surname>Khanna</surname><given-names>A</given-names></name><name><surname>Marshall</surname><given-names>M</given-names></name><name><surname>Moxon</surname><given-names>S</given-names></name><name><surname>Sonnhammer</surname><given-names>ELL</given-names></name><name><surname>Studholme</surname><given-names>DJ</given-names></name><name><surname>Yeats</surname><given-names>C</given-names></name><name><surname>Eddy</surname><given-names>SR</given-names></name></person-group><article-title>The Pfam protein families database</article-title><source>Nucleic Acids Res</source><year>2004</year><volume>32</volume><fpage>D138</fpage><lpage>D141</lpage><pub-id pub-id-type="pmid">14681378</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Boeckmann</surname><given-names>B</given-names></name><name><surname>Bairoch</surname><given-names>A</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name><name><surname>Blatter</surname><given-names>M</given-names></name><name><surname>Estreicher</surname><given-names>A</given-names></name><name><surname>Gasteiger</surname><given-names>E</given-names></name><name><surname>Martin</surname><given-names>M</given-names></name><name><surname>Michoud</surname><given-names>K</given-names></name><name><surname>O'Donovan</surname><given-names>C</given-names></name><name><surname>Phan</surname><given-names>I</given-names></name><name><surname>Pilbout</surname><given-names>S</given-names></name><name><surname>M</surname><given-names>S</given-names></name></person-group><article-title>The SWISS-PROT protein knowledgebase and its supplement TrEMBL in 2003</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>365</fpage><lpage>370</lpage><pub-id pub-id-type="pmid">12520024</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Birney</surname><given-names>E</given-names></name><name><surname>Andrews</surname><given-names>D</given-names></name><name><surname>Bevan</surname><given-names>P</given-names></name><name><surname>Caccamo</surname><given-names>M</given-names></name><name><surname>Cameron</surname><given-names>G</given-names></name><name><surname>Chen</surname><given-names>Y</given-names></name><name><surname>Clarke</surname><given-names>L</given-names></name><name><surname>Coates</surname><given-names>G</given-names></name><name><surname>Cox</surname><given-names>T</given-names></name><name><surname>Cuff</surname><given-names>J</given-names></name><name><surname>Curwen</surname><given-names>V</given-names></name><name><surname>Cutts</surname><given-names>T</given-names></name><name><surname>Down</surname><given-names>T</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Eyras</surname><given-names>E</given-names></name><name><surname>Fernandez-Suarez</surname><given-names>XM</given-names></name><name><surname>Gane</surname><given-names>P</given-names></name><name><surname>Gibbins</surname><given-names>B</given-names></name><name><surname>Gilbert</surname><given-names>J</given-names></name><name><surname>Hammond</surname><given-names>M</given-names></name><name><surname>Hotz</surname><given-names>H</given-names></name><name><surname>Iyer</surname><given-names>V</given-names></name><name><surname>Kahari</surname><given-names>A</given-names></name><name><surname>Jekosch</surname><given-names>K</given-names></name><name><surname>Kasprzyk</surname><given-names>A</given-names></name><name><surname>Keefe</surname><given-names>D</given-names></name><name><surname>Keenan</surname><given-names>S</given-names></name><name><surname>Lehvaslaiho</surname><given-names>H</given-names></name><name><surname>McVicker</surname><given-names>G</given-names></name><name><surname>Melsopp</surname><given-names>C</given-names></name><name><surname>Meidl</surname><given-names>P</given-names></name><name><surname>Mongin</surname><given-names>E</given-names></name><name><surname>Pettett</surname><given-names>R</given-names></name><name><surname>Potter</surname><given-names>S</given-names></name><name><surname>Proctor</surname><given-names>G</given-names></name><name><surname>Rae</surname><given-names>M</given-names></name><name><surname>Searle</surname><given-names>S</given-names></name><name><surname>Slater</surname><given-names>G</given-names></name><name><surname>Smedley</surname><given-names>D</given-names></name><name><surname>Smith</surname><given-names>J</given-names></name><name><surname>Spooner</surname><given-names>W</given-names></name><name><surname>Stabenau</surname><given-names>A</given-names></name><name><surname>Stalker</surname><given-names>J</given-names></name><name><surname>Storey</surname><given-names>R</given-names></name><name><surname>Ureta-Vidal</surname><given-names>A</given-names></name><name><surname>Woodwark</surname><given-names>C</given-names></name><name><surname>Clamp</surname><given-names>M</given-names></name><name><surname>Hubbard</surname><given-names>T</given-names></name></person-group><article-title>Ensembl 2004</article-title><source>Nucleic Acids Res</source><year>2004</year><volume>32</volume><fpage>D468</fpage><lpage>D470</lpage><pub-id pub-id-type="pmid">14681459</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rhee</surname><given-names>SY</given-names></name><name><surname>Beavis</surname><given-names>W</given-names></name><name><surname>Berardini</surname><given-names>TZ</given-names></name><name><surname>Chen</surname><given-names>G</given-names></name><name><surname>Dixon</surname><given-names>D</given-names></name><name><surname>Doyle</surname><given-names>A</given-names></name><name><surname>Garcia-Hernandez</surname><given-names>M</given-names></name><name><surname>Huala</surname><given-names>E</given-names></name><name><surname>Lander</surname><given-names>G</given-names></name><name><surname>Montoya</surname><given-names>M</given-names></name><name><surname>Miller</surname><given-names>N</given-names></name><name><surname>Mueller</surname><given-names>LA</given-names></name><name><surname>Mundodi</surname><given-names>S</given-names></name><name><surname>Reiser</surname><given-names>L</given-names></name><name><surname>Tacklind</surname><given-names>J</given-names></name><name><surname>Weems</surname><given-names>DC</given-names></name><name><surname>Wu</surname><given-names>Y</given-names></name><name><surname>Xu</surname><given-names>I</given-names></name><name><surname>Yoo</surname><given-names>D</given-names></name><name><surname>Yoon</surname><given-names>J</given-names></name><name><surname>Zhang</surname><given-names>P</given-names></name></person-group><article-title>The Arabidopsis Information Resource (TAIR): a model organism database providing a centralized, curated gateway to Arabidopsis biology, research materials and community</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>224</fpage><lpage>228</lpage><pub-id pub-id-type="pmid">12519987</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Christie</surname><given-names>KR</given-names></name><name><surname>Weng</surname><given-names>S</given-names></name><name><surname>Balakrishnan</surname><given-names>R</given-names></name><name><surname>Costanzo</surname><given-names>MC</given-names></name><name><surname>Dolinski</surname><given-names>K</given-names></name><name><surname>Dwight</surname><given-names>SS</given-names></name><name><surname>Engel</surname><given-names>SR</given-names></name><name><surname>Feierbach</surname><given-names>B</given-names></name><name><surname>Fisk</surname><given-names>DG</given-names></name><name><surname>Hirschman</surname><given-names>JE</given-names></name><name><surname>Hong</surname><given-names>EL</given-names></name><name><surname>Issel-Tarver</surname><given-names>L</given-names></name><name><surname>Nash</surname><given-names>R</given-names></name><name><surname>Sethuraman</surname><given-names>A</given-names></name><name><surname>Starr</surname><given-names>B</given-names></name><name><surname>Theesfeld</surname><given-names>CL</given-names></name><name><surname>Andrada</surname><given-names>R</given-names></name><name><surname>Binkley</surname><given-names>G</given-names></name><name><surname>Dong</surname><given-names>Q</given-names></name><name><surname>Lane</surname><given-names>C</given-names></name><name><surname>Schroeder</surname><given-names>M</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Cherry</surname><given-names>JM</given-names></name></person-group><article-title>Saccharomyces Genome Database (SGD) provides tools to identify and analyze sequences from Saccharomyces cerevisiae and related sequences from other organisms</article-title><source>Nucleic Acids Res</source><year>2004</year><volume>32</volume><fpage>D311</fpage><lpage>D314</lpage><pub-id pub-id-type="pmid">14681421</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wood</surname><given-names>V</given-names></name><name><surname>Gwilliam</surname><given-names>R</given-names></name><name><surname>Rajandream</surname><given-names>MA</given-names></name><name><surname>Lyne</surname><given-names>M</given-names></name><name><surname>Lyne</surname><given-names>R</given-names></name><name><surname>Stewart</surname><given-names>A</given-names></name><name><surname>Sgouros</surname><given-names>J</given-names></name><name><surname>Peat</surname><given-names>N</given-names></name><name><surname>Hayles</surname><given-names>J</given-names></name><name><surname>Baker</surname><given-names>S</given-names></name><name><surname>Basham</surname><given-names>D</given-names></name><name><surname>Bowman</surname><given-names>S</given-names></name><name><surname>Brooks</surname><given-names>K</given-names></name><name><surname>Brown</surname><given-names>D</given-names></name><name><surname>Brown</surname><given-names>S</given-names></name><name><surname>Chillingworth</surname><given-names>T</given-names></name><name><surname>Churcher</surname><given-names>C</given-names></name><name><surname>Collins</surname><given-names>M</given-names></name><name><surname>Connor</surname><given-names>R</given-names></name><name><surname>Cronin</surname><given-names>A</given-names></name><name><surname>Davis</surname><given-names>P</given-names></name><name><surname>Feltwell</surname><given-names>T</given-names></name><name><surname>Fraser</surname><given-names>A</given-names></name><name><surname>Gentles</surname><given-names>S</given-names></name><name><surname>Goble</surname><given-names>A</given-names></name><name><surname>Hamlin</surname><given-names>N</given-names></name><name><surname>Harris</surname><given-names>D</given-names></name><name><surname>Hidalgo</surname><given-names>J</given-names></name><name><surname>Hodgson</surname><given-names>G</given-names></name><name><surname>Holroyd</surname><given-names>S</given-names></name><name><surname>Hornsby</surname><given-names>T</given-names></name><name><surname>Howarth</surname><given-names>S</given-names></name><name><surname>Huckle</surname><given-names>EJ</given-names></name><name><surname>Hunt</surname><given-names>S</given-names></name><name><surname>Jagels</surname><given-names>K</given-names></name><name><surname>James</surname><given-names>K</given-names></name><name><surname>Jones</surname><given-names>L</given-names></name><name><surname>Jones</surname><given-names>M</given-names></name><name><surname>Leather</surname><given-names>S</given-names></name><name><surname>McDonald</surname><given-names>S</given-names></name><name><surname>McLean</surname><given-names>J</given-names></name><name><surname>Mooney</surname><given-names>P</given-names></name><name><surname>Moule</surname><given-names>S</given-names></name><name><surname>Mungall</surname><given-names>K</given-names></name><name><surname>Murphy</surname><given-names>L</given-names></name><name><surname>Niblett</surname><given-names>D</given-names></name><name><surname>Odell</surname><given-names>C</given-names></name><name><surname>Oliver</surname><given-names>K</given-names></name><name><surname>O'Neil</surname><given-names>S</given-names></name><name><surname>Pearson</surname><given-names>D</given-names></name><name><surname>Quail</surname><given-names>MA</given-names></name><name><surname>Rabbinowitsch</surname><given-names>E</given-names></name><name><surname>Rutherford</surname><given-names>K</given-names></name><name><surname>Rutter</surname><given-names>S</given-names></name><name><surname>Saunders</surname><given-names>D</given-names></name><name><surname>Seeger</surname><given-names>K</given-names></name><name><surname>Sharp</surname><given-names>S</given-names></name><name><surname>Skelton</surname><given-names>J</given-names></name><name><surname>Simmonds</surname><given-names>M</given-names></name><name><surname>Squares</surname><given-names>R</given-names></name><name><surname>Squares</surname><given-names>S</given-names></name><name><surname>Stevens</surname><given-names>K</given-names></name><name><surname>Taylor</surname><given-names>K</given-names></name><name><surname>Taylor</surname><given-names>RG</given-names></name><name><surname>Tivey</surname><given-names>A</given-names></name><name><surname>Walsh</surname><given-names>S</given-names></name><name><surname>Warren</surname><given-names>T</given-names></name><name><surname>Whitehead</surname><given-names>S</given-names></name><name><surname>Woodward</surname><given-names>J</given-names></name><name><surname>Volckaert</surname><given-names>G</given-names></name><name><surname>Aert</surname><given-names>R</given-names></name><name><surname>Robben</surname><given-names>J</given-names></name><name><surname>Grymonprez</surname><given-names>B</given-names></name><name><surname>Weltjens</surname><given-names>I</given-names></name><name><surname>Vanstreels</surname><given-names>E</given-names></name><name><surname>Rieger</surname><given-names>M</given-names></name><name><surname>Schafer</surname><given-names>M</given-names></name><name><surname>Muller-Auer</surname><given-names>S</given-names></name><name><surname>Gabel</surname><given-names>C</given-names></name><name><surname>Fuchs</surname><given-names>M</given-names></name><name><surname>Dusterhoft</surname><given-names>A</given-names></name><name><surname>Fritzc</surname><given-names>C</given-names></name><name><surname>Holzer</surname><given-names>E</given-names></name><name><surname>Moestl</surname><given-names>D</given-names></name><name><surname>Hilbert</surname><given-names>H</given-names></name><name><surname>Borzym</surname><given-names>K</given-names></name><name><surname>Langer</surname><given-names>I</given-names></name><name><surname>Beck</surname><given-names>A</given-names></name><name><surname>Lehrach</surname><given-names>H</given-names></name><name><surname>Reinhardt</surname><given-names>R</given-names></name><name><surname>Pohl</surname><given-names>TM</given-names></name><name><surname>Eger</surname><given-names>P</given-names></name><name><surname>Zimmermann</surname><given-names>W</given-names></name><name><surname>Wedler</surname><given-names>H</given-names></name><name><surname>Wambutt</surname><given-names>R</given-names></name><name><surname>Purnelle</surname><given-names>B</given-names></name><name><surname>Goffeau</surname><given-names>A</given-names></name><name><surname>Cadieu</surname><given-names>E</given-names></name><name><surname>Dreano</surname><given-names>S</given-names></name><name><surname>Gloux</surname><given-names>S</given-names></name><name><surname>Lelaure</surname><given-names>V</given-names></name><name><surname>Mottier</surname><given-names>S</given-names></name><name><surname>Galibert</surname><given-names>F</given-names></name><name><surname>Aves</surname><given-names>SJ</given-names></name><name><surname>Xiang</surname><given-names>Z</given-names></name><name><surname>Hunt</surname><given-names>C</given-names></name><name><surname>Moore</surname><given-names>K</given-names></name><name><surname>Hurst</surname><given-names>SM</given-names></name><name><surname>Lucas</surname><given-names>M</given-names></name><name><surname>Rochet</surname><given-names>M</given-names></name><name><surname>Gaillardin</surname><given-names>C</given-names></name><name><surname>Tallada</surname><given-names>VA</given-names></name><name><surname>Garzon</surname><given-names>A</given-names></name><name><surname>Thode</surname><given-names>G</given-names></name><name><surname>Daga</surname><given-names>RR</given-names></name><name><surname>Cruzado</surname><given-names>L</given-names></name><name><surname>Jimenez</surname><given-names>J</given-names></name><name><surname>Sanchez</surname><given-names>M</given-names></name><name><surname>del Rey</surname><given-names>F</given-names></name><name><surname>Benito</surname><given-names>J</given-names></name><name><surname>Dominguez</surname><given-names>A</given-names></name><name><surname>Revuelta</surname><given-names>JL</given-names></name><name><surname>Moreno</surname><given-names>S</given-names></name><name><surname>Armstrong</surname><given-names>J</given-names></name><name><surname>Forsburg</surname><given-names>SL</given-names></name><name><surname>Cerutti</surname><given-names>L</given-names></name><name><surname>Lowe</surname><given-names>T</given-names></name><name><surname>McCombie</surname><given-names>WR</given-names></name><name><surname>Paulsen</surname><given-names>I</given-names></name><name><surname>Potashkin</surname><given-names>J</given-names></name><name><surname>Shpakovski</surname><given-names>GV</given-names></name><name><surname>Ussery</surname><given-names>D</given-names></name><name><surname>Barrell</surname><given-names>BG</given-names></name><name><surname>Nurse</surname><given-names>P</given-names></name><name><surname>Cerrutti</surname><given-names>L</given-names></name></person-group><article-title>The genome sequence of Schizosaccharomyces pombe</article-title><source>Nature</source><year>2002</year><volume>415</volume><fpage>871</fpage><lpage>880</lpage><pub-id pub-id-type="pmid">11859360</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Meinel</surname><given-names>T</given-names></name><name><surname>Krause</surname><given-names>A</given-names></name><name><surname>Luz</surname><given-names>H</given-names></name><name><surname>Vingron</surname><given-names>M</given-names></name><name><surname>Staub</surname><given-names>E</given-names></name></person-group><article-title>The SYSTERS Protein Family Database in 2005</article-title><source>Nucleic Acids Res</source><year>2005</year><volume>33</volume><fpage>D226</fpage><lpage>D229</lpage><pub-id pub-id-type="pmid">15608183</pub-id></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kleinberg</surname><given-names>J</given-names></name><name><surname>Lawrence</surname><given-names>S</given-names></name></person-group><article-title>The Structure of the Web</article-title><source>Science</source><year>2001</year><volume>294</volume><fpage>1849</fpage><lpage>1850</lpage><pub-id pub-id-type="pmid">11729296</pub-id></citation></ref><ref id="B19"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Sharan</surname><given-names>R</given-names></name><name><surname>Shamir</surname><given-names>R</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Bourne P, Gribskov M, Altman R, Jensen N, Hope D, Lengauer T, Mitchell J, Scheeff E, Smith C, Strande S, Weissig H</surname></name></person-group><article-title>CLICK: A Clustering Algorithm with Applications to Gene Expression Analysis</article-title><source>Proceedings of the Eighth International Conference on Intelligent Systems for Molecular Biology (ISMB)</source><year>2000</year><publisher-name>AAAI Press</publisher-name><fpage>307</fpage><lpage>316</lpage></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>TF</given-names></name><name><surname>Waterman</surname><given-names>MS</given-names></name></person-group><article-title>The identification of common molecular subsequences</article-title><source>Journal of Molecular Biology</source><year>1981</year><volume>147</volume><fpage>195</fpage><lpage>197</lpage><pub-id pub-id-type="pmid">7265238</pub-id></citation></ref><ref id="B21"><citation citation-type="other"><article-title>Paracel</article-title><ext-link ext-link-type="uri" xlink:href="http://www.paracel.com"/></citation></ref><ref id="B22"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Hartuv</surname><given-names>E</given-names></name><name><surname>Schmitt</surname><given-names>A</given-names></name><name><surname>Lange</surname><given-names>J</given-names></name><name><surname>Meier-Evert</surname><given-names>S</given-names></name><name><surname>Lehrach</surname><given-names>H</given-names></name><name><surname>Shamir</surname><given-names>R</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Istrail S, Pevzner P, Waterman M</surname></name></person-group><article-title>An Algorithm for Clustering cDNAs for Gene Expression Analysis</article-title><source>Proceedings of the Third Annual International Conference on Computational Molecular Biology (RECOMB)</source><year>1999</year><publisher-name>ACM Press</publisher-name><fpage>188</fpage><lpage>197</lpage></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mehlhorn</surname><given-names>K</given-names></name><name><surname>N&#x000e4;her</surname><given-names>S</given-names></name></person-group><article-title>LEDA: A Platform for Combinatorial and Geometric Computing</article-title><source>Communications of the ACM</source><year>1995</year><volume>38</volume><fpage>96</fpage><lpage>102</lpage></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bairoch</surname><given-names>A</given-names></name></person-group><article-title>The ENZYME database in 2000</article-title><source>Nucleic Acids Research</source><year>2000</year><volume>28</volume><fpage>304</fpage><lpage>305</lpage><pub-id pub-id-type="pmid">10592255</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Jaccard</surname><given-names>P</given-names></name></person-group><article-title>Nouvelles recherches sur la distribution florale</article-title><source>Bulletin de la Soci&#x000e9;t&#x000e9; Vaudoise des Sciences Naturelles</source><year>1908</year><volume>44</volume><fpage>223</fpage><lpage>270</lpage></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Multi domain proteins </bold>Sequences with different domain compositions belong to the same family of Adenylate cyclases but form different "true" clusters (Pfam domains: RA: Ras association (RalGDS/AF-6) domain; LRR: Leucine Rich Repeats; PP2C: Protein phosphatase 2C; guanylate_cyc: Adenylate and Guanylate cyclase catalytic domain)</p></caption><graphic xlink:href="1471-2105-6-15-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Schematic overview of the clustering procedures </bold>We start with a single linkage tree constructed from pairwise distances. Each leaf in the tree corresponds to a protein sequence. Superfamilies are determined based on the internal structure of the tree. For each superfamily a distinct superfamily distance graph is built. This weighted graph is cut at weak connections into subclusters.</p></caption><graphic xlink:href="1471-2105-6-15-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p>The SYSTERS algorithms</p></caption><graphic xlink:href="1471-2105-6-15-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>Excerpt from the single linkage tree </bold>The superfamily of sequence O93431 is determined as follows (traversing the tree along the branches depicted as bold lines). The first internal node connects this sequence with the four sequences P52794, P20827, P52793, and P97553 at an E-value of 1e-52. Thus, the ratio of the size of the merging subtree and the size of the current subtree at this point is 4/1. Stepping up the hierarchy, the next node (E-value 4e-38) connects these five sequences with a subtree consisting of 13 sequences, resulting in a ratio of 13/5 (= 2.6). Stepping further up the hierarchy, the following ratios are 1/18 (= 0.056 at E-value 6e-38), 2/19 (= 0.105 at E-value 2e-37), 15/21 (= 0.714 at E-value 2e-13), 1/36 (= 0.028 at E-value 5e-10), 211 975/37 (= 5729.054 at E-value 0.022), 259/212 012 (= 0.001 at E-value 0.023), etc. Taking the maximum of the ratios we find the superfamily root at E-value 5e-10 as the last node before the largest relative increase (depicted as a bullet in the tree). The superfamily of sequence O93431 hence consists of the 37 sequences belonging to the ephrin type A and type B families plus a few predicted proteins.</p></caption><graphic xlink:href="1471-2105-6-15-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>The superfamily distance graph of the ephrin superfamily </bold>The graph contains only those edges which represent E-values of at least the superfamily cutoff 5e-10. The width of an edge is according to its E-value, here ranging from 5e-10 (thinnest edge) to 3e-149 (thickest edge). The subclustering procedure first splits off nodes from the bottom right of the graph as single sequence clusters. These sequences are predicted proteins which are not yet confirmed as functioning by any experiment. The last accepted split in the graph results in the partitioning into the two major groups of ephrin type A (left) and type B (right) sequences as shown by the dashed line. Single sequence clusters are added to the ephrin type B family in the subsequent singleton adoption step.</p></caption><graphic xlink:href="1471-2105-6-15-5"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Comparison of SYSTERS, TribeMCL and single linkage clustering (SLC) on Pfam and ENZYME data sets (J: Jaccard Coeffcient, SE: Sensitivity, SP: Specificity). The best result in each row is shown in bold face. For the single linkage clustering only the results of the "best" clustering are shown together with the corresponding cutoff E-value. In the case of Sensitivity/Specificity these values were choosen according to the intercept point of the two curves when plotting the values for all possible E-value cutoffs. All clustering procedures were applied to the non-redundant data set and redundant sequences were added to the cluster sets again to compare to the "true" cluster sets: <sup><italic>a</italic></sup>33,963,365 pairwise values of 283,113 non-redundant sequences used for clustering and 442,872 redundant sequences used in comparison; <sup><italic>b</italic></sup>1,582,948 pairwise values of 38,176 non-redundant sequences used for clustering and 84,405 redundant sequences used in comparison.</p></caption><table frame="hsides" rules="groups"><thead><tr><td></td><td align="center" colspan="2">SLC</td><td align="center" colspan="2">SYSTERS</td><td align="center" colspan="5">TribeMCL at Inflation</td></tr><tr><td></td><td align="center">best</td><td align="center">at cutoff</td><td align="center">Superfam.</td><td align="center">Subclust.</td><td align="center">1.1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td><td align="center">5</td></tr></thead><tbody><tr><td align="left" colspan="10">Pfam<sup><italic>a</italic></sup></td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left">J</td><td align="center">0.19362</td><td align="center">1e-53</td><td align="center">0.15637</td><td align="center"><bold>0.20815</bold></td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td></tr><tr><td align="left">SE</td><td align="center">0.26886</td><td align="center">1e-49</td><td align="center"><bold>0.55272</bold></td><td align="center">0.48302</td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td></tr><tr><td align="left">SP</td><td align="center">0.26536</td><td align="center">1e-49</td><td align="center">0.17902</td><td align="center"><bold>0.26781</bold></td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td><td align="center">---</td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left" colspan="10">ENZYME<sup><italic>b</italic></sup></td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left" colspan="10">A.B.C.D</td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left">J</td><td align="center">0.88760</td><td align="center">1e-21</td><td align="center">0.77445</td><td align="center"><bold>0.89670</bold></td><td align="center">0.60390</td><td align="center">0.60074</td><td align="center">0.59990</td><td align="center">0.59942</td><td align="center">0.59778</td></tr><tr><td align="left">SE</td><td align="center">0.92295</td><td align="center">1e-08</td><td align="center"><bold>0.92931</bold></td><td align="center">0.92297</td><td align="center">0.61323</td><td align="center">0.60328</td><td align="center">0.60224</td><td align="center">0.60164</td><td align="center">0.59989</td></tr><tr><td align="left">SP</td><td align="center">0.93616</td><td align="center">1e-08</td><td align="center">0.82294</td><td align="center">0.96924</td><td align="center">0.97543</td><td align="center">0.99304</td><td align="center">0.99357</td><td align="center">0.99388</td><td align="center"><bold>0.99416</bold></td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left" colspan="10">A.B.C.?</td></tr><tr><td colspan="10"><hr></hr></td></tr><tr><td align="left">J</td><td align="center">0.71527</td><td align="center">1e-15</td><td align="center">0.65915</td><td align="center"><bold>0.72410</bold></td><td align="center">0.48721</td><td align="center">0.47900</td><td align="center">0.47803</td><td align="center">0.47746</td><td align="center">0.47600</td></tr><tr><td align="left">SE</td><td align="center">0.74985</td><td align="center">1e-03</td><td align="center"><bold>0.75320</bold></td><td align="center">0.73727</td><td align="center">0.49099</td><td align="center">0.47996</td><td align="center">0.47895</td><td align="center">0.47836</td><td align="center">0.47688</td></tr><tr><td align="left">SP</td><td align="center">0.80855</td><td align="center">1e-03</td><td align="center">0.84073</td><td align="center">0.97592</td><td align="center">0.98445</td><td align="center">0.99586</td><td align="center">0.99601</td><td align="center">0.99608</td><td align="center"><bold>0.99617</bold></td></tr></tbody></table></table-wrap></sec></back></article>



