<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15659246</article-id><article-id pub-id-type="pmc">PMC548128</article-id><article-id pub-id-type="publisher-id">1471-2105-6-11</article-id><article-id pub-id-type="doi">10.1186/1471-2105-6-11</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Using large-scale perturbations in gene network reconstruction</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>MacCarthy</surname><given-names>Thomas</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>t.maccarthy@ucl.ac.uk</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Pomiankowski</surname><given-names>Andrew</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>a.pomiankowski@ucl.ac.uk</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Seymour</surname><given-names>Robert</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I3">3</xref><email>rms@math.ucl.ac.uk</email></contrib></contrib-group><aff id="I1"><label>1</label>COMPLEX, University College London, 4 Stephenson Way, London NW1 2HE, UK</aff><aff id="I2"><label>2</label>Department of Biology, University College London, 4 Stephenson Way, London NW1 2HE, UK</aff><aff id="I3"><label>3</label>Department of Mathematics, University College London, Gower Street, London WC1E 2BT, UK</aff><pub-date pub-type="collection"><year>2005</year></pub-date><pub-date pub-type="epub"><day>19</day><month>1</month><year>2005</year></pub-date><volume>6</volume><fpage>11</fpage><lpage>11</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/6/11"/><history><date date-type="received"><day>20</day><month>10</month><year>2004</year></date><date date-type="accepted"><day>19</day><month>1</month><year>2005</year></date></history><copyright-statement>Copyright &#x000a9; 2005 MacCarthy et al; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>Recent analysis of the yeast gene network shows that most genes have few inputs, indicating that enumerative gene reconstruction methods are both useful and computationally feasible. A simple enumerative reconstruction method based on a discrete dynamical system model is used to study how microarray experiments involving modulated global perturbations can be designed to obtain reasonably accurate reconstructions. The method is tested on artificial gene networks with biologically realistic in/out degree characteristics.</p></sec><sec><title>Results</title><p>It was found that a relatively small number of perturbations significantly improve inference accuracy, particularly for low-order inputs of one or two genes. The perturbations themselves should alter the expression level of approximately 50&#x02013;60% of the genes in the network.</p></sec><sec><title>Conclusions</title><p>Time-series obtained from perturbations are a common form of expression data. This study illustrates how gene networks can be significantly reconstructed from such time-series while requiring only a relatively small number of calibrated perturbations, even for large networks, thus reducing experimental costs.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Recent technological advances have led to an explosive growth in high-throughput genomic and proteomic data such as DNA microarrays. The rapid growth in available data has led in turn to a need for novel quantitive methods for analysis. As a consequence of this need, the reconstruction of gene network architectures from DNA microarray expression data has become a major goal in the field of systems biology. An increased understanding of the network architectures and their respective dynamics will enable novel approaches to disease treatments by allowing us, for example, to identify drug targets <italic>in silico </italic>which manipulate the functional outputs of these networks. This process is expected to lead to novel classes of drug based on a network approach to cellular dynamics.</p><p>Frequently, the gene expression data itself is derived from perturbation experiments such as stress conditions, temperature shifts, and chemical treatments; for example, the widely used yeast cell-cycle datasets of Cho [<xref ref-type="bibr" rid="B1">1</xref>] and Spellman [<xref ref-type="bibr" rid="B2">2</xref>]. Although these global perturbations are carried out in order to reveal causality between genes, it is not always clear how experiments should be designed so as to reveal as much causality as possible, while both minimising costly experimentation and remaining computationally tractable.</p><p>A range of computational and mathematical techniques have been adopted in the effort to find a successful gene network reconstruction technique. Reconstruction methods often have to negotiate a tradeoff between intensive (often intractable) computations, and having to perform a large number of costly experiments. Certain progress can be achieved by making simplifications, such as imposing a limit on the number of inputs to each gene, or making steady state assumptions about the system [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>]. Some techniques described in the literature offer efficient algorithms, but require a large number of experiments, perhaps as many as there are genes [<xref ref-type="bibr" rid="B5">5</xref>-<xref ref-type="bibr" rid="B7">7</xref>]. On the other hand, theoretical work on Boolean models has shown [<xref ref-type="bibr" rid="B8">8</xref>] that perhaps as few as <italic>O</italic>(<italic>log</italic>(<italic>n</italic>)) experiments (input/output pairs) might be required for <italic>n </italic>genes, but that to infer these relationships requires the use of computationally costly enumeration methods.</p><p>In this paper, we propose to explore the issue of how perturbation microarray experiments might be designed, and to suggest how such experiments might be optimised so as to maximize inference capability. Logical gene network models have previously been used to investigate gene network robustness [<xref ref-type="bibr" rid="B9">9</xref>], perturbation dynamics [<xref ref-type="bibr" rid="B10">10</xref>] and evolutionary potential [<xref ref-type="bibr" rid="B11">11</xref>], and form the basis of the inference method used in this study. This inference method [<xref ref-type="bibr" rid="B11">11</xref>] is similar to others in which networks with a minimal number of connections are reconstructed through enumeration [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>]. Given the significant speed advantage of integer computation over floating point computation, and that most genes are expected to have few inputs (93% have between 1 and 4 [<xref ref-type="bibr" rid="B14">14</xref>]), the method is considered to be adequate for this investigation. In this study, exhaustive evaluation was performed up to a maximum of 4 inputs of both positive and negative sign (see Methods). Enumeration is computationally feasible on an ordinary desktop computer for medium-sized networks (<italic>n </italic>~ 100), and still tractable for large networks (<italic>n </italic>~ 1000), though this would require some parallelisation. The global perturbations themselves are simulated by changing the state of each gene at random. A perturbation intensity measure <italic>q</italic>, defines the probability that each gene will change state (see Methods).</p></sec><sec><title>Results and discussion</title><sec><title>A limited number of perturbations significantly improve accuracy</title><p>A discrete dynamical model was used to generate time series data from random networks (see Methods). To measure the effect of adding perturbations on inference ability, inference <italic>sensitivity </italic>(defined as true positives/true positives + false negatives, see Methods) was measured against <italic>P</italic>, the number of additional perturbations. Figure <xref ref-type="fig" rid="F1">1</xref> shows the results for predicted solutions with one and two inputs, as well as overall sensitivity. The top graph in figure <xref ref-type="fig" rid="F1">1</xref> shows that overall sensitivity is clearly enhanced by including more perturbation experiments, with lower order solutions (one and two inputs) reaching higher levels of sensitivity. The bottom graph shows the corresponding inverse relationship for the standard deviation of the sensitivity (lower for higher <italic>P</italic>).</p><p>It should be noted that the algorithm tends to underestimate the number of inputs a gene may have. This is to be expected in genes for which dynamics cannot be informative: for example, consider a gene <italic>i </italic>which has one or more negative inputs, as well as having default value OFF. Since the discrete dynamics for this gene will be the same as if it had no inputs at all (i.e. zero gene expression for <italic>t </italic>&#x0003e; 0), the presence of the inputs is impossible to infer. This underestimation effect is clear in table <xref ref-type="table" rid="T1">1</xref>, which compares the distribution of inferred solution set sizes (|<italic>Y</italic><sub><italic>i</italic></sub>|, see Methods) with the actual solution sizes (i.e. the indegree distribution), and shows that the method is only able to produce roughly half the number of one and two input solution sets that actually exist.</p><p>The increase in sensitivity with <italic>P </italic>can be explained at least partially, in the following way. Since the time series are discrete, many of the genes may have identical behaviour over time despite having different inputs (i.e. <italic>s</italic><sub><italic>i</italic></sub>(<italic>t</italic>) = <italic>s</italic><sub><italic>j</italic></sub>(<italic>t</italic>) for two different genes <italic>i </italic>and <italic>j</italic>). If we define a "concatenated" time series vector <inline-graphic xlink:href="1471-2105-6-11-i1.gif"/> for gene <italic>i</italic>, and then map each gene <italic>i </italic>onto <italic>S</italic><sub><italic>i</italic></sub>, we obtain a many-to-one mapping. As we increase the number of perturbations, we might expect the number of distinct time series also to increase. We define a simple measure to quantify this mapping, <italic>M </italic>= <italic>n</italic>'/<italic>N </italic>where <italic>n</italic>' is the number of distinct vectors <italic>S</italic><sub><italic>i</italic></sub>, and <italic>N </italic>is the number of genes. The maximum value of <italic>M </italic>= 1 indicates that the mapping of genes to time series is one-to-one, whereas lower values indicate degenerate mappings. The manner in which <italic>M </italic>increases with the number of perturbations is shown in figure <xref ref-type="fig" rid="F2">2</xref>, and shows how the increase in M reflects the corresponding increase in sensitivity (figure <xref ref-type="fig" rid="F1">1</xref>).</p></sec><sec><title>Network size and optimal perturbation intensity</title><p>The experiments described above were repeated to consider variations in two other parameters: the network size <italic>N</italic>, and the perturbation intensity parameter <italic>q </italic>(roughly, the proportion of genes whose initial expression level is changed in each perturbation experiment &#x02013; see Methods).</p><p>To consider the first case, the minimum number of perturbations <italic>P</italic>* required to reach a given high accuracy criterion was measured for different values of the network size <italic>N</italic>. The high accuracy criterion was defined as average sensitivity = 0.95 for one-input solution sets (average sensitivity is found using a default value q = 0.5 and averaging for all the sensitivity measurements obtained from 250 random networks). To find <italic>P</italic>*, we first find the number of perturbations <italic>P</italic><sup>+</sup>, such that average sensitivity <italic>P</italic><sup>+ </sup>&#x02265; 0.95, and average sensitivity (<italic>P</italic><sup>+ </sup>- 1) &#x0003c; 0.95. If average sensitivity <italic>P</italic><sup>+ </sup>&#x0003e; 0.95, we use simple linear interpolation to find the (real) value of <italic>P</italic>* between <italic>P</italic><sup>+ </sup>and (<italic>P</italic><sup>+ </sup>- 1) for which average sensitivity = 0.95.</p><p>The resulting values for <italic>P</italic>* are shown in figure <xref ref-type="fig" rid="F3">3</xref>. Since the relationship is expected to be logarithmic [<xref ref-type="bibr" rid="B8">8</xref>], the plot shows <italic>log</italic>(<italic>N</italic>) against <italic>P</italic>* (logarithms used are base 10). A least squares best fit gives <italic>P</italic>* &#x02243; 1.75 <italic>log</italic>(<italic>N</italic>) + 7.02, which, for <italic>N </italic>= 1000, gives <italic>P</italic>* &#x02243; 12.26. In order to obtain a measure of variance for <italic>P</italic>*, we would need to calculate <italic>P</italic>*-equivalent values for many individual networks separately, then consolidate these values to obtain the relevant statistics. However, because it was only feasible to consider medium-sized networks (20 &#x02264; <italic>N </italic>&#x02264; 70), and for any such network we often find only a small number of one-input solution sets, such statistics were found to be unreliable.</p><p>The second case (varying perturbation intensity) suggests an optimal range for <italic>q</italic>. Figure <xref ref-type="fig" rid="F4">4a</xref> shows the inference sensitivity over a range of values for <italic>q</italic>, and figure <xref ref-type="fig" rid="F4">4b</xref> shows the corresponding standard deviation. Again, inference sensitivity for one-input solutions is higher than for two-input solutions, which in turn is higher than overall sensitivity. For one-input solutions, the results show a clear peak for sensitivity close to the range 0.5 &#x0003c;<italic>q </italic>&#x0003c; 0.6. Together with a corresponding minimisation of the standard deviation in this interval (though it still remains fairly high in absolute terms), these results suggest that perturbation intensity should be close to this range to optimise inference accuracy.</p></sec></sec><sec><title>Conclusions</title><p>A recent analysis of the yeast genetic network has shown that 93% of genes are regulated by between 1 and 4 genes [<xref ref-type="bibr" rid="B14">14</xref>]. This suggests that enumerative network reconstruction methods can be useful within computationally feasible limits. Experiments involving large-scale perturbations (such as temperature shifts, chemical stress) are a standard way of obtaining time-series of gene expression data [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]. A key result of [<xref ref-type="bibr" rid="B14">14</xref>] is that indegree appears to follow an exponential distribution, whereas outdegree follows a scale-free distribution, which has enabled the generation of realistic artificial gene networks used here. A logical model [<xref ref-type="bibr" rid="B11">11</xref>] was used to simulate the perturbed expression data. Subsequently, experimental parameters were considered in relation to inference accuracy, namely: a) number of perturbations required, <italic>P</italic>, and b) perturbation intensity, <italic>q</italic>.</p><p>The inference method itself is most useful for low order inputs, with inference accuracy maximized for predicted single input genes. More accurate methods have been proposed, though these generally require a much larger number of experiments [<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. Methods such as the one proposed here, which infer relationships from expression data may well be more successful when used in conjunction with other methods such as promoter analysis [<xref ref-type="bibr" rid="B16">16</xref>,<xref ref-type="bibr" rid="B17">17</xref>], or when used to drive experimental procedure [<xref ref-type="bibr" rid="B18">18</xref>]. Here, the results show that only a relatively small number of perturbations are necessary in order to achieve a substantial inference accuracy, even for large <italic>N</italic>. These relatively modest experimental requirements would presumably imply lower experimental costs. The results also suggest that the perturbations should be calibrated (by changing stress intensity, for example), so as to alter the expression levels of approximately half the genes in each experiment. Generating perturbations which alter the expression level of half the genes at random may be difficult to achieve in practice, though experiments can be designed to come as close to this goal as possible. Even in the absence of optimal perturbations, we hope the simulation approach described here will still serve as a useful tool for planning experiments.</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Discrete dynamical model</title><p>For a system of <italic>N </italic>genes, the state of each gene <italic>s</italic><sub><italic>i </italic></sub>(<italic>i </italic>= 1, .., <italic>N</italic>) is represented by the binary values 0(OFF) and 1(ON). Additionally, each gene is assigned a default ON/OFF state <italic>&#x003b8;</italic><sub><italic>i </italic></sub>&#x02208; {0, 1}. The gene interactions are described by an (<italic>N </italic>&#x000d7; <italic>N</italic>) matrix <italic>C</italic>, composed of elements <italic>C</italic><sub><italic>ij </italic></sub>&#x02208; {-1, 0, +1}, representing the positive(+1), zero(0) or negative(-1) influence of gene <italic>j </italic>on gene <italic>i</italic>. State transitions are calculated as follows:</p><p><inline-graphic xlink:href="1471-2105-6-11-i2.gif"/></p><p>The state of the <italic>i</italic>th gene at the next timestep, <italic>s</italic><sub><italic>i</italic></sub>(<italic>t </italic>+ 1), is therefore determined by the balance of positive versus negative inputs which are ON at the previous timestep <italic>t</italic>. If the balance is positive, then <italic>u</italic><sub><italic>i</italic></sub>(<italic>t</italic>) &#x0003e; 0 and the next state will be 1(ON). Similarly, if the balance is negative, then <italic>u</italic><sub><italic>i</italic></sub>(<italic>t</italic>) &#x0003c; 0 and the next state will be 0(OFF). If <italic>u</italic><sub><italic>i</italic></sub>(<italic>t</italic>) = 0 (indicating either that there are no active input connections, or that they balance out), then the default value <italic>&#x003b8;</italic><sub><italic>i </italic></sub>determines the next state. This default value needs to be given <italic>a priori</italic>, and for the purpose of this study will be random.</p></sec><sec><title>Network inference method</title><p>Assuming we are given the state dynamics <italic>s</italic>(<italic>t</italic>) and the default vector <italic>&#x003b8;</italic>, the problem is to find the necessary model parameters (<italic>C</italic>) which will reproduce these dynamics. Specifically, a system initialised at <italic>s</italic>(0) should reproduce the given dynamics <italic>s</italic>(<italic>t</italic>) for <italic>t </italic>&#x0003e; 0. Note that multiple <italic>s</italic>(<italic>t</italic>) expression patterns may be defined, which will be denoted as <italic>s</italic><sup><italic>r</italic></sup>(<italic>t</italic>) for <italic>r </italic>= 0, .., <italic>P</italic>, corresponding to time series with different initial states <italic>s</italic><sup><italic>r</italic></sup>(0). Our problem is to find at least one interaction matrix that will reproduce all given dynamics <italic>s</italic><sup><italic>r</italic></sup>(<italic>t</italic>). The problem of finding an appropriate matrix <italic>C </italic>may be broken up into <italic>N </italic>sub-problems, since in this system, each gene <italic>i </italic>may be solved independently from the others. More precisely, the inputs to gene <italic>i </italic>(i.e. <italic>C</italic><sub><italic>i</italic></sub>, the <italic>i</italic>th row of <italic>C</italic>), can be found independently of the other genes. This reduces the search space from <inline-graphic xlink:href="1471-2105-6-11-i3.gif"/> down to <italic>O</italic>(<italic>N</italic>3<sup><italic>N</italic></sup>). Each input <italic>z</italic><sup><italic>i </italic></sup>to gene <italic>i </italic>is represented as an ordered pair (<italic>j</italic>, <italic>g</italic>), <italic>j </italic>&#x02208; {1, .., <italic>N</italic>}, <italic>g </italic>&#x02208; {&#x000b1; 1}, indicating an input from gene <italic>j </italic>of sign <italic>g</italic>. A solution <italic>y</italic>(<italic>i</italic>) for gene <italic>i </italic>is a set of <italic>K </italic>inputs <inline-graphic xlink:href="1471-2105-6-11-i4.gif"/> (with <italic>y</italic>(<italic>i</italic>) = <italic>&#x003c6; </italic>if <italic>K </italic>= 0). For <italic>K </italic>inputs there are <inline-graphic xlink:href="1471-2105-6-11-i5.gif"/> solutions to evaluate. Starting with <italic>K </italic>= 0 (no inputs), we progress up to a maximum of <italic>K </italic>= 4, exhaustively evaluating all possible solutions for each <italic>K</italic>. However, making a parsimony assumption, if solutions are found for some <italic>K</italic><sub><italic>s </italic></sub>&#x0003c; 4, the method no longer evaluates for <italic>K </italic>&#x0003e;<italic>K</italic><sub><italic>s</italic></sub>. Note that the method does not stop as soon as a solution is found, but evaluates all possible solutions for <italic>K</italic><sub><italic>s</italic></sub>. The failure rate (percentage of genes for which no solution was found for <italic>K </italic>&#x02264; 4) never exceeded 3% of the genes in any single network for which reconstruction was attempted.</p></sec><sec><title>Global perturbations and the perturbation intensity measure</title><p>The control time series <italic>s</italic><sup>0</sup>(<italic>t</italic>) is generated by setting <italic>s</italic><sup>0</sup>(0) = <italic>&#x003b8;</italic>. The other time series <italic>s</italic><sup><italic>r</italic></sup>(<italic>t</italic>), <italic>r </italic>&#x0003e; 0 are obtained from initial conditions which are perturbations of <italic>&#x003b8;</italic>, and correspond to standard experiments such as stress conditions, or chemical treatments. Since, experimental perturbations can usually be modulated in intensity (for example, a temperature shift), this was represented using modulated artificial perturbations. Perturbed initial states <italic>s</italic><sup><italic>r</italic></sup>(0) were generated by randomly changing each state <italic>s</italic><sup>0</sup>(0) with probability <italic>q</italic>. This means that, on average, there will be <italic>qN </italic>random state differences between each perturbed initial state <italic>s</italic><sup><italic>r</italic></sup>(0), and <italic>&#x003b8;</italic>.</p></sec><sec><title>Measuring inference accuracy</title><p>Assuming one or more solutions <italic>y</italic><sub>1</sub>(<italic>i</italic>), <italic>y</italic><sub>2</sub>(<italic>i</italic>), ... are found for gene <italic>i</italic>, these are consolidated into a solution set, <italic>Y</italic><sub><italic>i </italic></sub>= &#x0222a;<sub><italic>l</italic></sub>{<italic>y</italic><sub><italic>l</italic></sub>(<italic>i</italic>)}. Note that some information about the solutions has been lost using this approach. For example, a solution set <inline-graphic xlink:href="1471-2105-6-11-i6.gif"/> obtained from a single two-input (<italic>K </italic>= 2) solution: <inline-graphic xlink:href="1471-2105-6-11-i7.gif"/>, may be equal to another solution set <inline-graphic xlink:href="1471-2105-6-11-i8.gif"/> resulting from two single-input (<italic>K </italic>= 1) solutions: <inline-graphic xlink:href="1471-2105-6-11-i9.gif"/> with <inline-graphic xlink:href="1471-2105-6-11-i10.gif"/> and <inline-graphic xlink:href="1471-2105-6-11-i11.gif"/>.</p><p>However, this consolidation is convenient in that the solution set is easily compared with the known network structures using standard accuracy measures such as <italic>sensitivity </italic>and <italic>specificity</italic>. Here, accuracy was measured using <italic>sensitivity</italic>, defined as true positives / (true positives + false negatives). The relatively large number of true negatives, makes <italic>specificity</italic>, defined as true negatives / (true negatives + false positives), an uninformative statistic. Here, <italic>true positives </italic>are members of the solution set <italic>Y</italic><sub><italic>i </italic></sub>which are also true inputs (since the networks will be generated artificially, true inputs are known), and <italic>false negatives </italic>are those true inputs which are not members of the solution set <italic>Y</italic><sub><italic>i</italic></sub>.</p><p>Accuracy statistics were gathered from inferences performed on a large number of medium-sized random networks (20 &#x02264; <italic>N </italic>&#x02264; 70). Inferences on <italic>R </italic>random networks (each with <italic>N </italic>genes), will produce approximately <italic>RN sensitivity </italic>measurements (slightly fewer due to the nonzero failure rate).</p></sec><sec><title>Artificial gene network generation</title><p>It appears to be the case in gene networks that indegree follows an exponential distribution, whereas outdegree appears to follow a scale-free distribution. More specifically, for the yeast network, the probability distribution for indegree <italic>k </italic>follows <italic>p</italic><sub><italic>k </italic></sub>~ <italic>C</italic><sub><italic>in</italic></sub><italic>e</italic><sup>-<italic>&#x003b2;k </italic></sup>with <italic>&#x003b2; </italic>~ 0.45, whereas the distribution for outdegree follows <italic>p</italic><sub><italic>k </italic></sub>~ <italic>C</italic><sub><italic>out</italic></sub><italic>k</italic><sup>-<italic>&#x003c4;</italic></sup>, with <italic>&#x003c4; </italic>~ 1 (<italic>C</italic><sub><italic>in</italic></sub>, <italic>C</italic><sub><italic>out </italic></sub>constants) [<xref ref-type="bibr" rid="B14">14</xref>]. Here, artificial gene networks [<xref ref-type="bibr" rid="B19">19</xref>] were created using the algorithm for generating directed graphs with arbitrary in/out degree distributions described in [<xref ref-type="bibr" rid="B20">20</xref>]. The exponential probability distribution for indegree <italic>k </italic>is given by:</p><p><italic>p</italic><sub><italic>k </italic></sub>= (1 - <italic>e</italic><sup>-<italic>&#x003b2;</italic></sup>)<italic>e</italic><sup>-<italic>&#x003b2;k</italic></sup>,</p><p>where <italic>&#x003b2; </italic>= 0.45 is a constant. Similarly, the power law distribution (including an exponential cutoff term which is both biologically realistic and necessary analytically when <italic>&#x003c4; </italic>&#x0003c; 2 [<xref ref-type="bibr" rid="B20">20</xref>]) for outdegree <italic>k </italic>is described by:</p><p><italic>p</italic><sub><italic>k </italic></sub>= <italic>Ck</italic><sup>-<italic>&#x003c4; </italic></sup><italic>e</italic><sup>-<italic>&#x003b3;k</italic></sup>,</p><p>where <italic>C</italic>, <italic>&#x003b3;</italic>, and <italic>&#x003c4; </italic>= 1 are constants. Since the algorithm begins by generating in/out-degree pairs for each node, we require equal means for both indegree (&#x0003c;<italic>k</italic><sub><italic>in </italic></sub>&#x0003e;) and outdegree (&#x0003c;<italic>k</italic><sub><italic>out </italic></sub>&#x0003e;). Following [<xref ref-type="bibr" rid="B20">20</xref>], we obtain expressions for the mean in/out degree:</p><p><inline-graphic xlink:href="1471-2105-6-11-i12.gif"/></p><p>Since <italic>&#x003b2; </italic>is given, we obtain a value &#x0003c;<italic>k</italic><sub><italic>in </italic></sub>&#x0003e; = 1.76, and fit the free parameter <italic>&#x003b3; </italic>= 0.436 to obtain &#x0003c;<italic>k</italic><sub><italic>out </italic></sub>&#x0003e; = &#x0003c;<italic>k</italic><sub><italic>in </italic></sub>&#x0003e; Since the resulting networks are unweighted, non-zero weights (<italic>C</italic><sub><italic>ij </italic></sub>&#x02208; {-1, +1}) are assigned at random with probability 0.5, as in [<xref ref-type="bibr" rid="B19">19</xref>]. It should be noted that autoregulatory interactions can be (and indeed were) generated, and that these present no particular problem for the inference method. An example of a network which was used in the analysis is shown in figure <xref ref-type="fig" rid="F5">5</xref>.</p></sec></sec><sec><title>Authors' contributions</title><p>TM devised and implemented the experiments and drafted the manuscript. RS and AP supervised the project. All authors read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>TM was supported by a grant from the UK Medical Research Council (MRC).</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Cho</surname><given-names>R</given-names></name><name><surname>Campbell</surname><given-names>M</given-names></name><name><surname>Winzeler</surname><given-names>E</given-names></name><name><surname>Steinmetz</surname><given-names>L</given-names></name><name><surname>Conway</surname><given-names>A</given-names></name><name><surname>Wodicka</surname><given-names>L</given-names></name><name><surname>Wolfsberg</surname><given-names>T</given-names></name><name><surname>Gabrielian</surname><given-names>A</given-names></name><name><surname>Landsman</surname><given-names>D</given-names></name><name><surname>Lockhart</surname><given-names>D</given-names></name><name><surname>Davis</surname><given-names>R</given-names></name></person-group><article-title>A genome-wide transcriptional analysis of the mitotic cell cycle</article-title><source>Mol Cell</source><year>1998</year><volume>2</volume><fpage>65</fpage><lpage>73</lpage><pub-id pub-id-type="pmid">9702192</pub-id><pub-id pub-id-type="doi">10.1016/S1097-2765(00)80114-8</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Spellman</surname><given-names>P</given-names></name><name><surname>Sherlock</surname><given-names>G</given-names></name><name><surname>Zhang</surname><given-names>M</given-names></name><name><surname>Iyer</surname><given-names>V</given-names></name><name><surname>Anders</surname><given-names>K</given-names></name><name><surname>Eisen</surname><given-names>M</given-names></name><name><surname>Brown</surname><given-names>P</given-names></name><name><surname>Botstein</surname><given-names>D</given-names></name><name><surname>Futcher</surname><given-names>B</given-names></name></person-group><article-title>Comprehensive identification of cell cycle-regulated genes of the yeast Saccharomyces cerevisiae by microarray hybridization</article-title><source>Mol Biol Cell</source><year>1998</year><volume>9</volume><fpage>3273</fpage><lpage>3297</lpage><pub-id pub-id-type="pmid">9843569</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Tegner</surname><given-names>J</given-names></name><name><surname>Yeung</surname><given-names>M</given-names></name><name><surname>Hasty</surname><given-names>J</given-names></name><name><surname>Collins</surname><given-names>J</given-names></name></person-group><article-title>Reverse engineering gene networks: integrating genetic perturbations with dynamical modeling</article-title><source>Proc Natl Acad Sci U S A</source><year>2003</year><volume>100</volume><fpage>5944</fpage><lpage>5949</lpage><pub-id pub-id-type="pmid">12730377</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0933416100</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gardner</surname><given-names>T</given-names></name><name><surname>di Bernardo</surname><given-names>D</given-names></name><name><surname>Lorenz</surname><given-names>D</given-names></name><name><surname>Collins</surname><given-names>J</given-names></name></person-group><article-title>Inferring genetic networks and identifying compound mode of action via expression profiling</article-title><source>Science</source><year>2003</year><volume>301</volume><fpage>102</fpage><lpage>105</lpage><pub-id pub-id-type="pmid">12843395</pub-id><pub-id pub-id-type="doi">10.1126/science.1081900</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Tringe</surname><given-names>S</given-names></name><name><surname>Wagner</surname><given-names>A</given-names></name><name><surname>Ruby</surname><given-names>S</given-names></name></person-group><article-title>Enriching for direct regulatory targets in perturbed gene-expression profiles</article-title><source>Genome Biol</source><year>2004</year><volume>5</volume><fpage>60</fpage><pub-id pub-id-type="doi">10.1186/gb-2004-5-4-r29</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wagner</surname><given-names>A</given-names></name></person-group><article-title>Reconstructing pathways in large genetic networks from genetic perturbations</article-title><source>J Comput Biol</source><year>2004</year><volume>11</volume><fpage>53</fpage><lpage>60</lpage><pub-id pub-id-type="pmid">15072688</pub-id><pub-id pub-id-type="doi">10.1089/106652704773416885</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kholodenko</surname><given-names>B</given-names></name><name><surname>Kiyatkin</surname><given-names>A</given-names></name><name><surname>Bruggeman</surname><given-names>F</given-names></name><name><surname>Sontag</surname><given-names>E</given-names></name><name><surname>Westerhoff</surname><given-names>H</given-names></name><name><surname>Hoek</surname><given-names>J</given-names></name></person-group><article-title>Untangling the wires: a strategy to trace functional interactions in signaling and gene networks</article-title><source>Proc Natl Acad Sci U S A</source><year>2002</year><volume>99</volume><fpage>12841</fpage><lpage>12846</lpage><pub-id pub-id-type="pmid">12242336</pub-id><pub-id pub-id-type="doi">10.1073/pnas.192442699</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Akutsu</surname><given-names>T</given-names></name><name><surname>Miyano</surname><given-names>S</given-names></name><name><surname>Kuhara</surname><given-names>S</given-names></name></person-group><article-title>Identification of genetic networks from a small number of gene expression patterns under the Boolean network model</article-title><source>Pac Symp Biocomput</source><year>1999</year><fpage>17</fpage><lpage>28</lpage><pub-id pub-id-type="pmid">10380182</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>F</given-names></name><name><surname>Long</surname><given-names>T</given-names></name><name><surname>Lu</surname><given-names>Y</given-names></name><name><surname>Ouyang</surname><given-names>Q</given-names></name><name><surname>Tang</surname><given-names>C</given-names></name></person-group><article-title>The yeast cell-cycle network is robustly designed</article-title><source>Proc Natl Acad Sci U S A</source><year>2004</year><volume>101</volume><fpage>4781</fpage><lpage>4786</lpage><pub-id pub-id-type="pmid">15037758</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0305937101</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Serra</surname><given-names>R</given-names></name><name><surname>Villani</surname><given-names>M</given-names></name><name><surname>Semeria</surname><given-names>A</given-names></name></person-group><article-title>Genetic network models and statistical properties of gene expression data in knock-out experiments</article-title><source>J Theor Biol</source><year>2004</year><volume>227</volume><fpage>149</fpage><lpage>157</lpage><pub-id pub-id-type="pmid">14969713</pub-id><pub-id pub-id-type="doi">10.1016/j.jtbi.2003.10.018</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>MacCarthy</surname><given-names>T</given-names></name><name><surname>Seymour</surname><given-names>R</given-names></name><name><surname>Pomiankowski</surname><given-names>A</given-names></name></person-group><article-title>The evolutionary potential of the Drosophila sex determination gene network</article-title><source>J Theor Biol</source><year>2003</year><volume>225</volume><fpage>461</fpage><lpage>468</lpage><pub-id pub-id-type="pmid">14615204</pub-id><pub-id pub-id-type="doi">10.1016/S0022-5193(03)00282-0</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Liang</surname><given-names>S</given-names></name><name><surname>Fuhrman</surname><given-names>S</given-names></name><name><surname>Somogyi</surname><given-names>R</given-names></name></person-group><article-title>Reveal, a general reverse engineering algorithm for inference of genetic network architectures</article-title><source>Pac Symp Biocomput</source><year>1998</year><fpage>18</fpage><lpage>29</lpage><pub-id pub-id-type="pmid">9697168</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yeung</surname><given-names>M</given-names></name><name><surname>Tegn&#x000e9;r</surname><given-names>J</given-names></name><name><surname>Collins</surname><given-names>J</given-names></name></person-group><article-title>Reverse engineering gene networks using singular value decomposition and robust regression</article-title><source>Proc Natl Acad Sci U S A</source><year>2002</year><volume>99</volume><fpage>6163</fpage><lpage>6168</lpage><pub-id pub-id-type="pmid">11983907</pub-id><pub-id pub-id-type="doi">10.1073/pnas.092576199</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Guelzim</surname><given-names>N</given-names></name><name><surname>Bottani</surname><given-names>S</given-names></name><name><surname>Bourgine</surname><given-names>P</given-names></name><name><surname>K&#x000e9;p&#x000e8;s</surname><given-names>F</given-names></name></person-group><article-title>Topological and causal structure of the yeast transcriptional regulatory network</article-title><source>Nat Genet</source><year>2002</year><volume>31</volume><fpage>60</fpage><lpage>63</lpage><pub-id pub-id-type="pmid">11967534</pub-id><pub-id pub-id-type="doi">10.1038/ng873</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Stark</surname><given-names>J</given-names></name><name><surname>Brewer</surname><given-names>D</given-names></name><name><surname>Barenco</surname><given-names>M</given-names></name><name><surname>Tomescu</surname><given-names>D</given-names></name><name><surname>Callard</surname><given-names>R</given-names></name><name><surname>Hubank</surname><given-names>M</given-names></name></person-group><article-title>Reconstructing gene networks: what are the limits</article-title><source>Biochem Soc Trans</source><year>2003</year><volume>31</volume><fpage>1519</fpage><lpage>1525</lpage><pub-id pub-id-type="pmid">14641103</pub-id></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yu</surname><given-names>H</given-names></name><name><surname>Luscombe</surname><given-names>N</given-names></name><name><surname>Qian</surname><given-names>J</given-names></name><name><surname>Gerstein</surname><given-names>M</given-names></name></person-group><article-title>Genomic analysis of gene expression relationships in transcriptional regulatory networks</article-title><source>Trends Genet</source><year>2003</year><volume>19</volume><fpage>422</fpage><lpage>427</lpage><pub-id pub-id-type="pmid">12902159</pub-id><pub-id pub-id-type="doi">10.1016/S0168-9525(03)00175-6</pub-id></citation></ref><ref id="B17"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sudarsanam</surname><given-names>P</given-names></name><name><surname>Pilpel</surname><given-names>Y</given-names></name><name><surname>Church</surname><given-names>G</given-names></name></person-group><article-title>Genome-wide co-occurrence of promoter elements reveals a cis-regulatory cassette of rRNA transcription motifs in Saccharomyces cerevisiae</article-title><source>Genome Res</source><year>2002</year><volume>12</volume><fpage>1723</fpage><lpage>1731</lpage><pub-id pub-id-type="pmid">12421759</pub-id><pub-id pub-id-type="doi">10.1101/gr.301202</pub-id></citation></ref><ref id="B18"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Covert</surname><given-names>M</given-names></name><name><surname>Knight</surname><given-names>E</given-names></name><name><surname>Reed</surname><given-names>J</given-names></name><name><surname>Herrgard</surname><given-names>M</given-names></name><name><surname>Palsson</surname><given-names>B</given-names></name></person-group><article-title>Integrating high-throughput and computational data elucidates bacterial networks</article-title><source>Nature</source><year>2004</year><volume>429</volume><fpage>92</fpage><lpage>96</lpage><pub-id pub-id-type="pmid">15129285</pub-id><pub-id pub-id-type="doi">10.1038/nature02456</pub-id></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mendes</surname><given-names>P</given-names></name><name><surname>Sha</surname><given-names>W</given-names></name><name><surname>Ye</surname><given-names>K</given-names></name></person-group><article-title>Artificial gene networks for objective comparison of analysis algorithms</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>122</fpage><lpage>129</lpage><pub-id pub-id-type="pmid">14534181</pub-id></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Newman</surname><given-names>M</given-names></name><name><surname>Strogatz</surname><given-names>S</given-names></name><name><surname>Watts</surname><given-names>D</given-names></name></person-group><article-title>Random graphs with arbitrary degree distributions and their applications</article-title><source>Phys Rev E Stat Nonlin Soft Matter Phys</source><year>2001</year><volume>64</volume><fpage>026118</fpage><lpage>026118</lpage><pub-id pub-id-type="pmid">11497662</pub-id></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Sensitivity vs. <italic>P. </italic></bold>(a) Sensitivity vs. number of additional perturbations used. (b) The corresponding standard deviation is shown here separately for clarity. The curves represent results for overall (i.e. all solutions) sensitivity, and specific sensitivity for (predicted) one and two-input solutions. Sensitivity is generally lower for higher order of inputs. Accuracy increases significantly with the number of additional perturbations used. The results shown are average values for 250 random networks at each data point. The remaining parameters are fixed: network size <italic>N </italic>= 50, perturbation intensity <italic>q </italic>= 0.5.</p></caption><graphic xlink:href="1471-2105-6-11-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold><italic>M </italic>vs. <italic>P. </italic></bold>M (the number of distinct "concatenated" vectors <italic>S</italic><sub><italic>i </italic></sub>divided by N, the number of genes) increases in value, as the number of perturbations (<italic>P</italic>) is increased. The graph shows curves for three values of perturbation intensity <italic>q</italic>.</p></caption><graphic xlink:href="1471-2105-6-11-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Perturbations required for high accuracy </bold>The minimum number of perturbations (<italic>P</italic>*) required to reach the high accuracy criterion (average sensitivity = 0.95) for different values of the network size <italic>N</italic>. Each point represents the average value for 250 random networks inferred. This is equivalent to finding the value of <italic>P </italic>for which sensitivity = 0.95 on the one-input curve of figure 1(a) for different values of <italic>N </italic>(figure 1(a) shows <italic>N </italic>= 50). A linear fit is also shown.</p></caption><graphic xlink:href="1471-2105-6-11-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p><bold>Sensitivity vs. <italic>q. </italic></bold>(a) Average inference sensitivity vs. perturbation intensity <italic>q</italic>. (b) The variance (one standard deviation) is shown here separately for clarity. The results show sensitivity for (predicted) one and two-input solutions being generally higher than the overall case. The results shown are average values for 250 random networks inferred. The remaining parameters are fixed: network size <italic>N </italic>= 50 and <italic>P </italic>= 12.</p></caption><graphic xlink:href="1471-2105-6-11-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p><bold>Example network. </bold>Example of an artificial gene network with <italic>N </italic>= 50. Positive interactions are shown in black, negative interactions in grey. Note the autoregulatory interaction on the upper right hand side. This diagram was generated using Pajek <ext-link ext-link-type="uri" xlink:href="http://vlado.fmf.uni-lj.si/pub/networks/pajek/"/>.</p></caption><graphic xlink:href="1471-2105-6-11-5"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Solution set sizes Distribution for the inferred solution set sizes, compared to the distribution of indegree in the actual network for the simulations. These statistics were produced from 250 random networks run using the following parameter values: <italic>N </italic>= 50, <italic>P </italic>= 12, and <italic>q </italic>= 0.5. The table illustrates how the algorithm overestimates the number of solutions with zero inputs.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">|<italic>Y</italic><sub><italic>i</italic></sub>|</td><td align="right">0</td><td align="right">1</td><td align="right">2</td><td align="right">3</td><td align="right">&#x02265; 4</td></tr></thead><tbody><tr><td align="left">inferred</td><td align="right">0.57</td><td align="right">0.12</td><td align="right">0.07</td><td align="right">0.05</td><td align="right">0.19</td></tr><tr><td align="left">actual</td><td align="right">0.37</td><td align="right">0.24</td><td align="right">0.15</td><td align="right">0.10</td><td align="right">0.14</td></tr></tbody></table></table-wrap></sec></back></article>



