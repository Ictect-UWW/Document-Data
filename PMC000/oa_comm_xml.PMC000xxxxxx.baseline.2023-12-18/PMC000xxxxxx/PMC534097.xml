<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15507142</article-id><article-id pub-id-type="pmc">PMC534097</article-id><article-id pub-id-type="publisher-id">1471-2105-5-166</article-id><article-id pub-id-type="doi">10.1186/1471-2105-5-166</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>A probabilistic model for the evolution of RNA structure</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Holmes</surname><given-names>Ian</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>ihh@berkeley.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Department of Bioengineering, University of California, Berkeley CA 94720-1762, USA</aff><aff id="I2"><label>2</label>Department of Statistics, 1 South Parks Road, Oxford OX1 3TG, UK</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>26</day><month>10</month><year>2004</year></pub-date><volume>5</volume><fpage>166</fpage><lpage>166</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/5/166"/><history><date date-type="received"><day>27</day><month>7</month><year>2004</year></date><date date-type="accepted"><day>26</day><month>10</month><year>2004</year></date></history><copyright-statement>Copyright &#x000a9; 2004 Holmes; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>For the purposes of finding and aligning noncoding RNA gene- and <italic>cis</italic>-regulatory elements in multiple-genome datasets, it is useful to be able to derive multi-sequence stochastic grammars (and hence multiple alignment algorithms) systematically, starting from hypotheses about the various kinds of random mutation event and their rates.</p></sec><sec><title>Results</title><p>Here, we consider a highly simplified evolutionary model for RNA, called "The TKF91 Structure Tree" (following Thorne, Kishino and Felsenstein's 1991 model of sequence evolution with indels), which we have implemented for pairwise alignment as proof of principle for such an approach. The model, its strengths and its weaknesses are discussed with reference to four examples of functional ncRNA sequences: a riboswitch (guanine), a zipcode (nanos), a splicing factor (U4) and a ribozyme (RNase P). As shown by our visualisations of posterior probability matrices, the selected examples illustrate three different signatures of natural selection that are highly characteristic of ncRNA: (i) co-ordinated basepair substitutions, (ii) co-ordinated basepair indels and (iii) whole-stem indels.</p></sec><sec><title>Conclusions</title><p>Although all three types of mutation "event" are built into our model, events of type (i) and (ii) are found to be better modeled than events of type (iii). Nevertheless, we hypothesise from the model's performance on pairwise alignments that it would form an adequate basis for a prototype multiple alignment and genefinding tool.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>One of the promises of comparative genomics is to annotate previously undetectable functional signals in genomic sequence, by identifying and characterising evolutionarily conserved elements. A principled way to extract such signals is by fitting the data to probabilistic models of the molecular evolutionary process. The logic runs as follows: suppose there are various kinds of conserved element <italic>x, y, z</italic>... (e.g. exons, bits of RNA, promoters, <italic>etc</italic>) that <italic>might </italic>explain an observed sequence homology. For each of these scenarios, we can construct a probabilistic model <italic>M</italic><sub><italic>x</italic></sub>, <italic>M</italic><sub><italic>y</italic></sub>, <italic>M</italic><sub><italic>z</italic></sub>... and compare the likelihood of the observed data under each of these models. The model with the best fit indicates the type of functional element present in the sequence.</p><p>A groundbreaking example of how this probabilistic approach can be used is the QRNA program, designed as a comparative RNA gene predictor [<xref ref-type="bibr" rid="B1">1</xref>]. The three types of element considered by QRNA are noncoding RNA (called <bold>RNA</bold>), protein-coding exons (called <bold>COD </bold>for codon), and unidentified DNA homology (called <bold>OTH </bold>for other). The former (<bold>RNA</bold>) was modeled using a Pairwise Stochastic Context-Free Grammar (Pair SCFG); the latter two (<bold>COD </bold>and <bold>OTH</bold>) using Pairwise Hidden Markov Models (Pair HMMs). The noncoding RNA predictions generated a high yield of experimental hits, and offered an information-theoretic glimpse into a modern-day RNA world [<xref ref-type="bibr" rid="B2">2</xref>].</p><p>It is natural to consider how such an approach might be applied to a pairwise comparison where the evolutionary "distance" between the two sequences can vary. One approach, analogous to the BLOSUM series of BLAST matrices for proteins [<xref ref-type="bibr" rid="B3">3</xref>], is to partition a set of training alignments into an <italic>ad hoc </italic>number of bins based on the percentage sequence identity. Alignments in the same bin (i.e. having comparable sequence identity) then represent pairs of sequences at approximately equivalent distances. For example, the BLOSUM62 substitution matrix was estimated from pairwise alignments with at least 62% identity. This sort of approach is used by the RIBOSUM basepair substitution matrices developed for RSEARCH [<xref ref-type="bibr" rid="B4">4</xref>], recent versions of QRNA, and the stemloc program in the author's DART software package.</p><p>An alternative approach, analogous to the PAM series of BLAST matrices [<xref ref-type="bibr" rid="B5">5</xref>], is to treat the "distance" as a <italic>time </italic>measurement, by postulating an underlying evolutionary stochastic process or <italic>continuous-time Markov chain </italic>whose mutation rate parameters are constant over time (called <italic>stationarity </italic>in stochastic process theory). This evolutionary rate approach uses fewer parameters &#x02013; and makes fuller use of the data &#x02013; than the dividing-into-bins approach, since it postulates an infinitesimal generator for all time-scales of the process. For the PAM series, this generator takes the form of an instantaneous <italic>substitution rate matrix</italic>; for a primary-sequence model, the generator is a conditionally-normalized Pair HMM or <italic>transducer </italic>[<xref ref-type="bibr" rid="B6">6</xref>]; for an RNA secondary-structure model, we will see that the generator is a Pair SCFG; and so on. Furthermore, the evolutionary rate model is supremely compatible with likelihood-based phylogenetic methods [<xref ref-type="bibr" rid="B7">7</xref>]. It's therefore worth considering such <italic>evolutionary rate-based models</italic>, although (since they're trickier to analyse mathematically) they're less suited to quick software prototyping than the "bin-by-percent-ID" approach.</p><p>With this in mind, we can consider the evolutionary rate-based equivalents of the three pairwise grammars used in QRNA. The <bold>OTH </bold>model, for noncoding DNA sequence, is a Pair HMM with affine gaps; the closest evolutionary equivalent is the "long indel" model [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9">9</xref>]. The long indel model incorporates multi-residue indels and single-residue (point) substitutions; it is based on the TKF91 model, which only allows single-residue indels [<xref ref-type="bibr" rid="B10">10</xref>]. In contrast, the current best evolutionary versions of the <bold>COD </bold>[<xref ref-type="bibr" rid="B11">11</xref>] and <bold>RNA </bold>[<xref ref-type="bibr" rid="B12">12</xref>] models do not attempt to model indels, changes in exon/intron structure or changes in RNA secondary structure. These are deficiencies which must eventually be addressed; ultimately they will limit the usefulness of the models. For example, the lack of a treatment of indels means that these models can only be used on a pre-generated alignment; they cannot, by themselves, be used to align sequences. In this report we present a simple but improved model of RNA structure evolution, called the TKF91 Structure Tree (Figure <xref ref-type="fig" rid="F1">1</xref>). This model allows not just covariant point substitutions of nucleotides, but also covariant insertions and deletions of bases, base-pairs, whole stems and multi-stem structures (Figure <xref ref-type="fig" rid="F2">2</xref>). Although we have not, in this paper, applied the Structure Tree to multiple alignment, or adapted it to include "long indels", the similarity to existing models [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B13">13</xref>] suggests very natural forms for such adaptations of our model. Furthermore, the TKF91 Structure Tree is algebraically tractable, yielding SCFG-based scoring schemes for simultaneous RNA alignment and structure prediction (from which alignment algorithms naturally follow). To our knowledge, this is the first such model for the evolution of RNA <italic>structure </italic>to be described within an evolutionary rate framework.</p><p>A computer program for simultaneous pairwise alignment and secondary structure prediction using the TKF91 Structure Tree has been developed in C++. The potential of the model for RNA sequence alignment has been demonstrated by testing the pairwise aligner on four functional elements from the RFAM database [<xref ref-type="bibr" rid="B14">14</xref>]: the purine riboswitch, the nanos translational control element, the U2 splicing factor and the bacterial nuclear RNase P gene. The TKF91 Structure Tree is a very simple evolutionary model lacking some "obvious" features, such as natural selection to favour the thermodynamically stable overlap of <italic>&#x003c0;</italic>-orbitals between adjacent stacked bases in RNA double helices. The fact that the model appears to work reasonably well, despite the exclusion of such features, suggests that very simple models of RNA evolution may turn out to be sufficient to uncover a surprisingly large proportion of RNA sequence homology.</p></sec><sec sec-type="methods"><title>Methods</title><p>We begin by reviewing the TKF91 model [<xref ref-type="bibr" rid="B10">10</xref>]. This model describes the evolution of a single sequence under the action of two kinds of mutation event: (i) point substitution events, which act on a single residue only; and (ii) single-residue indel events, which insert or delete a single residue. The rates of both types of event are independent of the neighboring sequence.</p><p>The TKF91 model, as defined by Thorne <italic>et al</italic>, is time-reversible. This has the implication, called the <italic>pulley principle </italic>by Felsenstein, that the position of an ancestral node in a phylogenetic tree can be slid around like a pulley without changing the likelihood of the observed data [<xref ref-type="bibr" rid="B7">7</xref>]. Aligning a pair of observed present-day sequences is therefore identical to aligning an ancestral sequence with its descendant, and we can talk about ancestor-descendant alignment without loss of generality.</p><p>The TKF91 model can be analysed algebraically [<xref ref-type="bibr" rid="B10">10</xref>], and the probability distribution function (PDF) over ancestor-descendant alignments can be expressed as a Pair HMM [<xref ref-type="bibr" rid="B13">13</xref>] and extended to multiple sequences (using a "Multiple HMM") [<xref ref-type="bibr" rid="B13">13</xref>]. While it is straightforward to define a more general "long indel" model allowing multi-residue deletions and insertions [<xref ref-type="bibr" rid="B8">8</xref>], the only Pair HMMs for this general model that have been described to date are approximations, inspired by the form of the TKF91 model: so far there is no exact Pair HMM solution of the long indel model [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B15">15</xref>,<xref ref-type="bibr" rid="B16">16</xref>]. In this paper, we will not be considering such long-indel models.</p><sec><title>Definition of the TKF91 model</title><p>The state of the TKF91 process is described by a <italic>TKF91 link sequence</italic>: a permanent <italic>immortal link </italic>at the left end of the sequence, followed by zero or more <italic>mortal links</italic>. Over time, mortal links can be deleted, and new mortal links can be inserted to the right of either immortal or mortal links. This can be treated as a birth-death process (<italic>&#x003bb;</italic><sub>0</sub>, <italic>&#x003bc;</italic><sub>0</sub>) with constant immigration (<italic>&#x003bb;</italic><sub>0</sub>), where "births" are identified with single-link insertions occuring to the immediate right of the parent mortal link. and "immigration" with insertions immediately right of the immortal link.</p><p>A further site-independent labeling is introduced on mortal links using the <italic>singlet nucleotide alphabet</italic>, &#x003a9; = {<italic>A, C, G, U</italic>}. Each site's alphabet label evolves as an independent four-state <italic>reversible continuous-time Markov chain </italic>(RCTMC) with substitution rate <bold>R</bold><sub>0</sub>(<italic>i, j</italic>) from state <italic>i </italic>to state <italic>j</italic>. Labels for newly inserted mortal links are drawn from the equilibrium distribution <italic>p</italic><sub>0</sub>(<italic>i</italic>) of this substitution process. By reading off the labels of mortal links, the state of the TKF91 process can be equated to a sequence in &#x003a9;*.</p></sec><sec><title>Analysis of the TKF91 model</title><p>The following functions of (<italic>&#x003bb;</italic><sub><italic>n</italic></sub>, <italic>&#x003bc;</italic><sub><italic>n</italic></sub>) arise in analyses of equilibrium and transition probabilities in the TKF91 model [<xref ref-type="bibr" rid="B10">10</xref>]. Here <italic>t </italic>is a time parameter.</p><p><inline-graphic xlink:href="1471-2105-5-166-i1.gif"/></p><p>Here exp(<bold>R</bold><sub><bold>n</bold></sub><italic>t</italic>) &#x02261; exp(<bold>A</bold>) is the exponential of the matrix with elements <italic>A</italic><sub><italic>ij </italic></sub>= <italic>R</italic><sub><italic>n</italic></sub>(<italic>i, j</italic>)<italic>t</italic>.</p><p>The meaning of the above functions is as follows. <italic>&#x003b1;</italic><sub><italic>n </italic></sub>is the probability of non-deletion; <italic>&#x003b2;</italic><sub><italic>n</italic></sub>, <italic>&#x003b3;</italic><sub><italic>n </italic></sub>are the probabilities of insertion, following (respectively) an insertion and a deletion; <italic>&#x003ba;</italic><sub><italic>n </italic></sub>is the probability of continuing the ancestral sequence; and <italic>M</italic><sub><italic>n</italic></sub>(<italic>i, j</italic>) is the conditional substitution probability from <italic>i </italic>to <italic>j</italic>. Note (1 - <italic>&#x003b3;</italic><sub><italic>n</italic></sub>)<italic>&#x003ba;</italic><sub><italic>n</italic></sub>(1 - <italic>&#x003b1;</italic><sub><italic>n</italic></sub>) = <italic>&#x003b2;</italic><sub><italic>n </italic></sub>(delete &#x02192; delete and insert &#x02192; insert transition probabilities are equal). Note also lim<sub><italic>t</italic>&#x02192;&#x0221e; </sub><italic>&#x003b2;</italic><sub><italic>n </italic></sub>= <italic>&#x003ba;</italic><sub><italic>n</italic></sub>.</p><p>The equilibrium probability distribution over sequences in the TKF91 model is a geometric distribution with parameter <italic>&#x003ba;</italic><sub>0</sub>. The residues at individual positions of the sequence are independently, identically distributed at equilibrium and are sampled from the equilibrum distribution of the point substitution process.</p><p>The TKF91 singlet grammar is shown in Figure <xref ref-type="fig" rid="F3">3</xref>. The TKF91 pair grammar is shown in Figure <xref ref-type="fig" rid="F4">4</xref>. Note that two alternate sets of rule probabilities, jointly and conditionally normalised, can be read off from Figure <xref ref-type="fig" rid="F4">4</xref>: the conditional probabilities can be read off from column <italic>P</italic>(<italic>d</italic>|<italic>a</italic>), while the joint probabilities can be found by multiplying the expressions in columns <italic>P</italic>(<italic>a</italic>) and <italic>P</italic>(<italic>d</italic>|<italic>a</italic>) to obtain <italic>P</italic>(<italic>a, d</italic>).</p></sec><sec><title>Extending the TKF91 model</title><p>Various extensions to TKF91 have been proposed [<xref ref-type="bibr" rid="B8">8</xref>,<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B15">15</xref>]. The most tractable kind of extension changes the meaning of a "link" but leaves the indel process on links intact [<xref ref-type="bibr" rid="B15">15</xref>]. Our RNA model is one such extension, allowing two different kinds of TKF91 model that can be mutually nested to form loop and stem regions.</p><p>Consider the following extension to the TKF91 model, which we call the <italic>TKF91 Structure Tree</italic>, and which is shown in Figures <xref ref-type="fig" rid="F1">1</xref> and <xref ref-type="fig" rid="F2">2</xref>. This model uses the fact that an RNA secondary structure (excluding pseudoknots, kissing loops and other "tertiary" interactions) can be identified with a tree. The state of our stochastic process can thus be described by a rooted tree: every node in this tree is either a <italic>singlet</italic>, <italic>paired</italic>, <italic>loop </italic>or <italic>stem </italic>node. The tree can be broken into overlapping <italic>loop sequences </italic>and <italic>stem sequences</italic>, which correspond to strands of unpaired RNA (loops) or double helices of basepaired RNA (stems). Loops are allowed to contain unpaired nucleotides, and can also serve as a branching-off point for nested stems. Stems, on the other hand, are allowed to contain paired nucleotides, and are terminated by a loop (this reflects the smallest unit of RNA structure, which is a stem terminated by a loop). The tree is rooted by a loop sequence. The above description will now be made more precise.</p></sec><sec><title>Definition of the TKF91 Structure Tree</title><p>The state of the TKF91 Structure Tree is described by a rooted tree where each node has degree &#x02264; 3.</p><p>There are four basic kinds of node in the tree: singlet, paired, loop and stem.</p><p>Singlet and paired nodes correspond to observable nucleotides. Singlet nodes (labeled from &#x003a9;) represent independently evolving nucleotides, as in TKF91. Paired nodes (labeled from &#x003a9;<sup>2</sup>) represent covariant basepairs.</p><p>Loop and stem nodes determine the tree structure (Figure <xref ref-type="fig" rid="F1">1</xref>). Loop nodes (labeled <italic>L</italic>), of which the root node is one, are present at the beginning of loop sequences, which contain singlet and stem nodes and are written horizontally. Stem nodes (labeled <italic>S</italic>) are present at the beginning of stem sequences, which contain paired nodes, are terminated by a loop node, and are written vertically.</p><p>The set of loop and stem node labels is written &#x003a6;. The full set of node labels is &#x003a9; &#x0222a; &#x003a9;<sup>2 </sup>&#x0222a; &#x003a6;.</p><p>&#x003a6; = {<italic>L, S</italic>}</p><p>&#x003a9; = {<italic>A, C, G, U</italic>}</p><p>&#x003a9;<sup>2 </sup>= {<italic>AA, AC, AG, AU, CA, CC, CG, CU, GA, GC, GG, GU, UA, UC, UG, UU</italic>}</p><sec><title>Loop sequences</title><p>A loop sequence is very similar to a TKF91 link sequence: as with TKF91, we have a leftmost <italic>immortal loop link </italic>followed by zero or more <italic>mortal loop links</italic>. The mortal links are inserted and deleted with rates <italic>&#x003bb;</italic><sub>1 </sub>and <italic>&#x003bc;</italic><sub>1</sub>, in the style of TKF91. Each link is also a node in the Structure Tree.</p><p>Links are labeled from &#x003a9; &#x0222a; &#x003a6;: the immortal loop link is labeled <italic>L</italic>, while the mortal loop links are labeled from {<italic>A, C, G, U, S</italic>}. As with the TKF91 model, the alphabet labeling of each mortal link evolves as an independent five-state RCTMC with substitution rate <bold>R</bold><sub>1</sub>(<italic>i, j</italic>) from <italic>i </italic>to <italic>j </italic>and equilibrium probability <italic>p</italic><sub>1</sub>(<italic>i</italic>) of being in state <italic>i</italic>, plus the additional restriction that <italic>R</italic><sub>1</sub>(<italic>X, S</italic>) = <italic>R</italic><sub>1</sub>(<italic>S, X</italic>) = 0 for all <italic>X </italic>&#x02208; &#x003a9;: in other words, embedded stems can't interconvert with singlet nucleotides. See step 1 &#x02192; 2 of Figure <xref ref-type="fig" rid="F2">2</xref> for examples of single-nucleotide substitution in loop sequences, and steps 3 &#x02192; 4 and 4 &#x02192; 5 for single-nucleotide insertion and deletion.</p><p>The <italic>S</italic>-labeled links possess an independently evolving <italic>embedded stem </italic>sequence that can be considered to "nest" inside the loop sequence. If the <italic>S</italic>-link is deleted, then the embedded stem (and all its children) is deleted with it. Conversely, when a new <italic>S</italic>-link is inserted, it is inserted with a complete subtree that is sampled from the equilibrium distribution over Structure Trees. See steps 6 &#x02192; 7 and 7 &#x02192; 8 of Figure <xref ref-type="fig" rid="F2">2</xref> for examples of substructure insertion and deletion.</p><p>Since a loop sequence is effectively a TKF91 sequence with a special "fifth nucleotide" character representing an embedded stem (the <italic>S </italic>link), it obeys the same statistics as a TKF91 sequence. In particular, the probability distribution over loop lengths at equilibrium is a geometric distribution with parameter <italic>&#x003ba;</italic><sub>1</sub>.</p></sec><sec><title>Stem sequences</title><p>A stem sequence is also derived from a TKF91 link sequence. Unlike the TKF91 link sequence or the loop sequence, however, it is written vertically (rather than horizontally) in Figure <xref ref-type="fig" rid="F1">1</xref>. It consists of a topmost <italic>immortal stem link</italic>, zero or more <italic>mortal stem links</italic>, and a bottommost, <italic>terminating loop </italic>link. Again, each link is also a node in the Structure Tree.</p><p>Links are labeled from &#x003a9;<sup>2 </sup>&#x0222a; &#x003a6;: the immortal stem link is labeled <italic>S </italic>(this is the node in the parent loop sequence), the mortal links are labeled with the paired nucleotide alphabet &#x003a9;<sup>2 </sup>(each with an independent sixteen-state RCTMC modeling covariant pair substitution along RNA stems, with substitution rate matrix <bold>R</bold><sub>2</sub>(<italic>i, j</italic>) and equilibrium <italic>p</italic><sub>2</sub>(<italic>i</italic>)), and the terminating loop link is labeled <italic>L</italic>. The mortal stem links experience TKF91-style insertion and deletion with rates <italic>&#x003bb;</italic><sub>2 </sub>and <italic>&#x003bc;</italic><sub>2 </sub>(although, in the diagrammatic form of Figure <xref ref-type="fig" rid="F1">1</xref>, newly inserted links are placed immediately under their parent link, rather than immediately to the right). The terminating loop link <italic>L </italic>does not contribute to insertion or deletion (so is effectively immortal but inert) but possesses an independently evolving loop sequence. See step 2 &#x02192; 3 of Figure <xref ref-type="fig" rid="F2">2</xref> for examples of covariant basepair substitution in stem sequences, and step 5 &#x02192; 6 for covariant basepair insertion and deletion.</p><p>Note that the immortal stem link, <italic>S</italic>, is only immortal from the point of view of the stem sequence beneath it. The <italic>S </italic>is itself a mortal link in a parent loop sequence, and may be deleted as that sequence evolves. In this event, the loop link <italic>L </italic>will also be deleted, along with all its children (step 7 &#x02192; 8, Figure <xref ref-type="fig" rid="F2">2</xref>). Thus, the only truly immortal link is the loop node at the root of the Structure Tree, which has no parents to deal death from above.</p><p>As with the loop sequence, a stem sequence is effectively a TKF91 sequence with minor modifications, and it obeys the same statistics as a TKF91 sequence. The probability distribution over stem lengths at equilibrium is a geometric distribution with parameter <italic>&#x003ba;</italic><sub>2</sub>.</p></sec></sec><sec><title>Analysis of the TKF91 Structure Tree</title><p>Figure <xref ref-type="fig" rid="F5">5</xref> shows the SCFG for generating the TKF91 Structure Tree at equilibrium. There are two nonterminals, &#x003a6;, and four terminals, &#x003a9;.</p><p>Figure <xref ref-type="fig" rid="F6">6</xref> shows the pair stochastic context-free grammar for an ancestor and descendant sequence separated by evolutionary time <italic>t</italic>. Again, conditional and joint probabilities can both be read from the figure. Nonterminals are &#x003a6;<sub>1234</sub>; terminals are &#x003a9;<sub><italic>a </italic></sub>for the ancestor and &#x003a9;<sub><italic>d </italic></sub>for the descendant.</p><p>&#x003a6;<sub>1234 </sub>= {<italic>L</italic><sub>1</sub>, <italic>L</italic><sub>2</sub>, <italic>L</italic><sub>3</sub>, <italic>L</italic><sub>4</sub>, <italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2</sub>, <italic>S</italic><sub>3</sub>, <italic>S</italic><sub>4</sub>}</p><p>&#x003a9;<sub><italic>a </italic></sub>= {<italic>A</italic><sub><italic>a</italic></sub>, <italic>C</italic><sub><italic>a</italic></sub>, <italic>G</italic><sub><italic>a</italic></sub>, <italic>U</italic><sub><italic>a</italic></sub>}</p><p>&#x003a9;<sub><italic>d </italic></sub>= {<italic>A</italic><sub><italic>d</italic></sub>, <italic>C</italic><sub><italic>d</italic></sub>, <italic>G</italic><sub><italic>d</italic></sub>, <italic>U</italic><sub><italic>d</italic></sub>}</p><p>Dynamic programming alignment of sequences to these grammars has the typical complexity for single-sequence [<xref ref-type="bibr" rid="B17">17</xref>] and pairwise [<xref ref-type="bibr" rid="B18">18</xref>] SCFGs. That is, for Figure <xref ref-type="fig" rid="F5">5</xref>, the time complexity is <italic>O</italic>(<italic>L</italic><sup>3</sup>) and the memory complexity <italic>O</italic>(<italic>L</italic><sup>2</sup>), while for Figure <xref ref-type="fig" rid="F6">6</xref>, the time complexity is <italic>O</italic>(<italic>L</italic><sup>3</sup><italic>M</italic><sup>3</sup>) and the memory complexity <italic>O</italic>(<italic>L</italic><sup>2</sup><italic>M</italic><sup>2</sup>), where <italic>L </italic>and <italic>M </italic>are sequence lengths. This is also the complexity of the single-sequence and two-sequence Sankoff algorithm [<xref ref-type="bibr" rid="B19">19</xref>], for which SCFGs may be regarded as a probabilistic scoring scheme. The time and memory complexity may be reduced by the use of "banding" techniques [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>], that restrict the dynamic programming computation to the (typically) highest-scoring central diagonal band of the dynamic programming matrix, or by more flexible constraints on the DP iteration [<xref ref-type="bibr" rid="B18">18</xref>].</p></sec><sec><title>Grammar transformations</title><p>We now describe some transformations of Figures <xref ref-type="fig" rid="F5">5</xref>,<xref ref-type="fig" rid="F6">6</xref> performed before implementing the grammar parsers.</p><sec><title>Null cycles</title><p>The presence in a grammar of "null cycles" &#x02013; sequences of production rules which cause no net change &#x02013; complicates the parsing algorithms for that grammar. Generally, null cycles are avoided by programmers designing SCFGs or HMMs for sequence analysis [<xref ref-type="bibr" rid="B17">17</xref>]. However, in the grammars derived automatically for the TKF91 Structure Tree, null cycles arise naturally due to the possibility of zero-length loop or stem sequences in the model.</p><p>There are several classes of null cycle in the grammars for the Structure Tree model, shown in Table <xref ref-type="table" rid="T1">1</xref>.</p></sec><sec><title>Degeneracies</title><p>As well as null cycles, there are other undesirable degeneracies in the Structure Tree grammars. Grammatical degeneracy occurs when more than one parse has the same meaning, so parses are <italic>degenerate </italic>rather than <italic>unique</italic>. Most stochastic grammars useful for bioinformatics are degenerate in the sense that there are always many folds or alignments consistent with the observed sequence data; this sort of degeneracy is technically called <italic>ambiguity</italic>. We are more concerned with other forms of degeneracy, such as <italic>structural degeneracy </italic>(multiple parses denote a single pattern of basepairing) and <italic>alignment degeneracy </italic>(multiple parses denote a single alignment).</p><p>TKF91, in effect, skirts alignment degeneracy by assigning meaning to the ordering of deletions and insertions in an alignment, but alignment degeneracies arise in the Structure Tree model because there are multiple ways to delete and insert things (e.g. deleting a whole stem, versus deleting all its elements individually). There are also structural degeneracies arising from "silent" (i.e. non-emitting) loops or stems. In addition to the null cycles described above, these include (for the singlet grammar) the undesirable "loop bifurcation" <italic>L </italic>&#x02192; <italic>LL </italic>and the "silent bulge" <italic>S </italic>&#x02192; <italic>S </italic>(a null cycle). A full list of degeneracies for the singlet and pair grammars is shown in Table <xref ref-type="table" rid="T1">1</xref>.</p></sec><sec><title>Prevention of zero-length stems</title><p>The null cycles all involve zero-length stems and can be broken (NB not marginalised; the likelihood is discarded) by adding extra nonterminals <inline-graphic xlink:href="1471-2105-5-166-i2.gif"/> before the corresponding <italic>S</italic><sub><italic>k</italic></sub>, copying all outgoing rules except the nonemitting <italic>S</italic><sub><italic>k </italic></sub>&#x02192; <italic>L</italic><sub><italic>k</italic></sub>. This also removes the loop bifurcations, but leaves silent bulges of the form <italic>S</italic><sub><italic>k </italic></sub>&#x02192; <inline-graphic xlink:href="1471-2105-5-166-i2.gif"/>. The silent bulges can be removed by adding nonterminals <inline-graphic xlink:href="1471-2105-5-166-i3.gif"/> before <italic>L</italic><sub><italic>k</italic></sub>, copying all outgoing rules except <italic>L</italic><sub><italic>k </italic></sub>&#x02192; <italic>&#x003b5;</italic>, changing <inline-graphic xlink:href="1471-2105-5-166-i4.gif"/> to <inline-graphic xlink:href="1471-2105-5-166-i5.gif"/> so as to prevent escape from <inline-graphic xlink:href="1471-2105-5-166-i3.gif"/> without an unpaired emission, and adding new rules of the form <inline-graphic xlink:href="1471-2105-5-166-i6.gif"/> to allow escape if there is a genuine bifurcation.</p><p>A more careful analysis, marginalising null cycles and silent bulges rather than simply ignoring them, is almost certainly possible.</p></sec><sec><title>Transformation to canonical form</title><p>Figures <xref ref-type="fig" rid="F7">7</xref> and <xref ref-type="fig" rid="F8">8</xref> show the singlet and pairwise grammars with null cycles and silent bulges removed, in the canonical form used by the DART software package [<xref ref-type="bibr" rid="B18">18</xref>]. As well as the new sets of nonterminals described above (&#x003a6;' for singlet, <inline-graphic xlink:href="1471-2105-5-166-i7.gif"/> for pair) the grammar includes nonterminals dedicated to bifurcations (<inline-graphic xlink:href="1471-2105-5-166-i8.gif"/> for singlet, <inline-graphic xlink:href="1471-2105-5-166-i9.gif"/> for pair) and emissions (<inline-graphic xlink:href="1471-2105-5-166-i10.gif"/> for singlet, <inline-graphic xlink:href="1471-2105-5-166-i11.gif"/> for pair). The separation of the nonterminals into null, bifurcation and singlet/pair emission sets puts the grammar in the form understood by the DART library [<xref ref-type="bibr" rid="B18">18</xref>]. The full nonterminal alphabets are &#x003a8; for singlet states and &#x003a8;<sub>1234 </sub>for pair states.</p><p><inline-graphic xlink:href="1471-2105-5-166-i12.gif"/></p><p>The asymptotic complexity of the dynamic programming recursions implied by these grammars is unchanged by the transformation to DART form. For Figure <xref ref-type="fig" rid="F7">7</xref>, the time complexity is <italic>O</italic>(<italic>L</italic><sup>3</sup>) and the memory complexity <italic>O</italic>(<italic>L</italic><sup>2</sup>), while for Figure <xref ref-type="fig" rid="F8">8</xref>, the time complexity is <italic>O</italic>(<italic>L</italic><sup>3</sup><italic>M</italic><sup>3</sup>) and the memory complexity <italic>O</italic>(<italic>L</italic><sup>2</sup><italic>M</italic><sup>2</sup>), where <italic>L </italic>and <italic>M </italic>are sequence lengths. Again, the complexity may be reduced by the use of "banding" [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>] or other [<xref ref-type="bibr" rid="B18">18</xref>] constraints.</p></sec></sec><sec><title>Parameterisation of the TKF91 Structure Tree</title><p>The Expectation Maximisation (EM) algorithm is often used for training BLOSUM-like models, e.g. estimating emission and transition probabilities for Pair HMMs [<xref ref-type="bibr" rid="B17">17</xref>] or Pair SCFGs [<xref ref-type="bibr" rid="B1">1</xref>]. It is also useful for training evolutionary rate models, which have roughly the same number of parameters and can make use of larger training sets (since the training data don't have to be "binned" by percent identity).</p><p>The EM algorithm for the TKF91 Structure Tree can be separated into two parts, one for the substitution process and one for the indel process. Earlier work [<xref ref-type="bibr" rid="B22">22</xref>] showed how to estimate the maximum-likelihood substitution rate matrix <bold>R</bold><sub><italic>n </italic></sub>using the EM algorithm, given the following sufficient statistics:</p><p><inline-graphic xlink:href="1471-2105-5-166-i13.gif"/>, the expected number of insertions of state <italic>d</italic>;</p><p><inline-graphic xlink:href="1471-2105-5-166-i14.gif"/>, the expected number of aligned sites with ancestral state <italic>a </italic>and descendant state <italic>d</italic>.</p><p>A forthcoming paper describes how to estimate the maximum-likelihood indel rates <italic>&#x003bb;</italic><sub><italic>n</italic></sub>, <italic>&#x003bc;</italic><sub><italic>n </italic></sub>for a TKF91 model using the EM algorithm, given the following sufficient statistics:</p><p><inline-graphic xlink:href="1471-2105-5-166-i15.gif"/>, the expected number of deleted links not followed by an insertion;</p><p><inline-graphic xlink:href="1471-2105-5-166-i16.gif"/>, the expected number of surviving links not followed by an insertion;</p><p><inline-graphic xlink:href="1471-2105-5-166-i17.gif"/>, the expected number of deleted links followed by an insertion;</p><p><inline-graphic xlink:href="1471-2105-5-166-i18.gif"/>, the expected number of surviving links followed by an insertion.</p><p>We can calculate all the above update statistics simultaneously from data (the E-step) using a constrained version of the Inside-Outside algorithm [<xref ref-type="bibr" rid="B18">18</xref>] for the grammar in Figure <xref ref-type="fig" rid="F8">8</xref>, as follows. Assume the joint normalisation, <italic>P</italic>(<italic>d</italic>, <italic>a</italic>), and suppose that <inline-graphic xlink:href="1471-2105-5-166-i19.gif"/> is the posterior expectation of the number of times rule <italic>m </italic>of Figure <xref ref-type="fig" rid="F8">8</xref> was applied, as returned by the Inside-Outside algorithm. For emit rules, let <inline-graphic xlink:href="1471-2105-5-166-i20.gif"/> be the expected number of times rule <italic>m </italic>was used to emit the specific nonterminals <italic>X</italic>, <italic>Y </italic>... &#x02208; &#x003a9;. Then</p><p><inline-graphic xlink:href="1471-2105-5-166-i21.gif"/></p><p>The terms in parentheses are to be omitted if the conditional normalisation, <italic>P</italic>(<italic>d</italic>|<italic>a</italic>), is used.</p><p>The relationship between the expected insert and match usage <inline-graphic xlink:href="1471-2105-5-166-i22.gif"/>, <inline-graphic xlink:href="1471-2105-5-166-i14.gif"/> and the expected start, wait and transition usage <inline-graphic xlink:href="1471-2105-5-166-i23.gif"/> of the previous work [<xref ref-type="bibr" rid="B22">22</xref>] is as follows</p><p><inline-graphic xlink:href="1471-2105-5-166-i24.gif"/></p><p>where <inline-graphic xlink:href="1471-2105-5-166-i25.gif"/> is defined as in the previous work [<xref ref-type="bibr" rid="B22">22</xref>]</p><p><inline-graphic xlink:href="1471-2105-5-166-i26.gif"/></p></sec></sec><sec><title>Results</title><p>The pairwise aligner for the TKF91 Structure Tree is distributed as part of the DART package at the following URL:</p><p><ext-link ext-link-type="uri" xlink:href="http://www.biowiki.org/"/></p><p>The aligner is based on the Stochastic Context-Free Grammars (SCFGs) shown in Figures <xref ref-type="fig" rid="F7">7</xref> and <xref ref-type="fig" rid="F8">8</xref>, as explained in the Methods section. The specific implementation uses a general Pair SCFG dynamic programming (DP) engine with accelerating heuristics, to be described in a later paper (manuscript in preparation).</p><p>To test the performance of the model at aligning and predicting structure of RNA sequence, we considered pairs of RNA sequences from four different families, with varying degrees of homology at the level of secondary structure. The four families were the purine riboswitch (Figure <xref ref-type="fig" rid="F9">9</xref>), the nanos translational control element (TCE) from <italic>Drosophila </italic>(Figure <xref ref-type="fig" rid="F10">10</xref>), the U2 spliceosomal factor (Figure <xref ref-type="fig" rid="F11">11</xref>) and bacterial nuclear RNase P (Figure <xref ref-type="fig" rid="F12">12</xref>).</p><p>For a given family, denote the two sequences in the family by <italic>A, B</italic>. The following computations were performed:</p><p><bold>(1A)</bold>, <bold>(1B) </bold>For each of the two sequences (<italic>A, B</italic>) taken individually, the secondary structure was predicted without the aid of comparative information from the other sequence, using the single-sequence SCFG of Figure <xref ref-type="fig" rid="F7">7</xref>.</p><p><bold>(2) </bold>The two sequences (<italic>A, B</italic>) were then aligned using the TKF91 model, without making use of any model of RNA structure, using the Pair HMM of Figure <xref ref-type="fig" rid="F4">4</xref>.</p><p><bold>(3) </bold>Finally, the two sequences (<italic>A, B</italic>) were aligned using the TKF91 Structure Tree model introduced in this paper, using the Pair SCFG of Figure <xref ref-type="fig" rid="F8">8</xref>.</p><p>These computations allow a comparison between the TKF91 model, the single-sequence SCFG of Figure <xref ref-type="fig" rid="F7">7</xref> and the TKF Structure Tree. The results, including structure and alignment predictions, are illustrated in a compact visual representation that we call a "fold/alignment dotplot". The key to interpreting the fold/alignment dotplot is shown in Figure <xref ref-type="fig" rid="F13">13</xref>. The subregions labeled a-f have the following meaning:</p><p><bold>(a) </bold>This triangular dotplot illustrates the single-sequence structure prediction for sequence <italic>A </italic>of computation (1A). The pixel color at co-ordinates (<italic>x, y</italic>) represents the posterior probability that residues <italic>x </italic>and <italic>y </italic>of <italic>A </italic>are base-paired, in the absence of any information from sequence <italic>B</italic>.</p><p><bold>(b) </bold>This triangular dotplot illustrates the single-sequence structure prediction for sequence <italic>B </italic>of computation (1B). The pixel color at co-ordinates (<italic>x, y</italic>) represents the posterior probability that residues <italic>x </italic>and <italic>y </italic>of <italic>B </italic>are base-paired, in the absence of any information from sequence <italic>A</italic>.</p><p><bold>(c) </bold>This rectangular dotplot illustrates the structure-free pairwise alignment of computation (2). The pixel color at co-ordinates (<italic>x, y</italic>) represents the posterior probability that residue <italic>x </italic>of <italic>A </italic>is homologous to residue <italic>y </italic>of <italic>B</italic>, in the absence of any structural information from the two sequences.</p><p><bold>(d) </bold>This triangular dotplot illustrates the comparative structure prediction for sequence <italic>A </italic>of computation (3). The pixel color at co-ordinates (<italic>x, y</italic>) represents the marginal posterior probability that residues <italic>x </italic>and <italic>y </italic>of <italic>A </italic>are base-paired, summed over all alignments to sequence <italic>B</italic>.</p><p><bold>(e) </bold>This triangular dotplot illustrates the comparative structure prediction for sequence <italic>B </italic>of computation (3). The pixel color at co-ordinates (<italic>x, y</italic>) represents the marginal posterior probability that residues <italic>x </italic>and <italic>y </italic>of <italic>B </italic>are base-paired, summed over all alignments to sequence <italic>A</italic>.</p><p><bold>(f) </bold>This rectangular dotplot illustrates the structural pairwise alignment of computation (3). The pixel color at co-ordinates (<italic>x, y</italic>) represents the marginal posterior probability that residue <italic>x </italic>of <italic>B </italic>is homologous to residue <italic>y </italic>of <italic>A</italic>, summed over all secondary structures of sequences <italic>A </italic>and <italic>B</italic>. Note that the orientation of this plot is flipped (reflected about the diagonal axis) relative to (c).</p><p>In addition, the "true" (published) structures and alignments are overlaid on the computational results as blue squares (or blue dots, on the larger images).</p><p>The rate parameters used for the TKF91 Structure Tree were obtained by maximum likelihood training from a random selection of structurally-annotated RFAM alignments, as follows:</p><p><italic>&#x003bb;</italic><sub>1 </sub>= 0.027, <italic>&#x003bc;</italic><sub>1 </sub>= 0.03; <italic>&#x003bb;</italic><sub>2 </sub>= 0.007, <italic>&#x003bc;</italic><sub>2 </sub>= 0.01; <italic>p</italic><sub>1</sub>(<italic>S</italic>) = 0.01. The substitution rate parameters were taken from the PFOLD program [<xref ref-type="bibr" rid="B12">12</xref>]. The evolutionary "time" between the two sequences was set to 1 in each case. In the case of the RNase P and U2 genes, the DP algorithms were constrained to a band along the main diagonal of the DP matrix; this constraint was imposed due to limited memory. No such constraint was imposed for the purine riboswitch computations.</p><p>The posterior probabilities of folding and alignment (dotplots a-f) obtained by DP on these three classes of element are shown in Figure <xref ref-type="fig" rid="F14">14</xref> (for the purine riboswitches), Figure <xref ref-type="fig" rid="F15">15</xref> (for the nanos TCEs), Figure <xref ref-type="fig" rid="F16">16</xref> (for the U2 snRNAs) and Figure <xref ref-type="fig" rid="F17">17</xref> (for the bacterial nuclear RNase P genes). In all cases, the Pair SCFG sharply resolves the most probable stems in the sequences; for the nanos, U2 and RNase P sequences, it also resolves the pairwise alignment.</p><sec><title>Purine riboswitch</title><p>The purine riboswitches are a class of <italic>cis</italic>-acting regulatory elements that specifically bind adenine or guanine and are involved in the post-translational regulation of purine transport and biosynthesis [<xref ref-type="bibr" rid="B23">23</xref>]. Figure <xref ref-type="fig" rid="F9">9</xref> shows the alignment of the two riboswitch sequences, from <italic>Bacillus halodurans </italic>and <italic>Streptococcus pneumoniae</italic>, which was taken from the RFAM database [<xref ref-type="bibr" rid="B14">14</xref>]. The two secondary structures of this pair are exactly identical, although the primary sequences are considerably diverged.</p><p>Figure <xref ref-type="fig" rid="F14">14</xref> shows the posterior dotplots for the purine riboswitches. This is an easy case for the model, with a strong signal and few gaps. The TKF91 Structure Tree grammar (Figure <xref ref-type="fig" rid="F8">8</xref>) is able to identify all stems correctly, with some slight uncertainty over the alignment. The primary-sequence TKF91 grammar (Figure <xref ref-type="fig" rid="F4">4</xref>) is similarly able to find the correct alignment, although the singlet folding grammar (Figure <xref ref-type="fig" rid="F7">7</xref>) has difficulty resolving the stems (note that this grammar does not model basepair stacking effects).</p></sec><sec><title>Nanos translational control element</title><p>The translational control element (TCE) is a regulatory sequence from the 3' untranslated region of the <italic>Drosophila </italic>nanos gene, involved in post-translational degradation and transport of nanos mRNA, which localises to the posterior of oocytes and other cell lines [<xref ref-type="bibr" rid="B24">24</xref>]. Figure <xref ref-type="fig" rid="F10">10</xref> shows the alignment of the two TCE sequences, from <italic>Drosophila virilis </italic>and <italic>Drosophila melanogaster</italic>, which was curated by hand from the description by Gavis <italic>et al </italic>[<xref ref-type="bibr" rid="B24">24</xref>]. The two secondary structures of this pair share the same overall bifurcating-stem structure, but with some changes in stem length.</p><p>Figure <xref ref-type="fig" rid="F15">15</xref> shows the posterior dotplots for the nanos TCEs. This time the TKF91 Structure Tree grammar (Figure <xref ref-type="fig" rid="F8">8</xref>) does considerably better than the primary-sequence TKF91 grammar (Figure <xref ref-type="fig" rid="F4">4</xref>) at finding the correct alignment, probably due to the gaps at the end (the TKF91 grammar in Figure <xref ref-type="fig" rid="F4">4</xref> is effectively a global aligner with linear gaps, so that the alignments it produces tend to form a continuous line from corner to corner of the DP matrix, without major discontinuities, as can be seen in region (c) of Figure <xref ref-type="fig" rid="F15">15</xref>). Again, the Structure Tree does much better than the singlet folding grammar (Figure <xref ref-type="fig" rid="F7">7</xref>) at distinguishing real stems from background noise, since it is able to use covariation of basepaired residues as a clue.</p></sec><sec><title>U2 snRNA</title><p>The U2 small nuclear RNA recognizes and binds the branch point region of introns in pre-mRNA [<xref ref-type="bibr" rid="B25">25</xref>]. Figure <xref ref-type="fig" rid="F11">11</xref> shows the alignment of the two splicing factors, from <italic>Tetrahymena thermophila </italic>and <italic>Leptomonas collosoma</italic>, was taken from the RFAM database [<xref ref-type="bibr" rid="B14">14</xref>]. The secondary structures of the two sequences are quite similar, but the <italic>Leptomonas </italic>U2 has a deletion of roughly 35 bp that eliminates an entire stem (stems 4&#x02013;6 on Figure <xref ref-type="fig" rid="F11">11</xref>).</p><p>Figure <xref ref-type="fig" rid="F16">16</xref> shows the posterior dotplots for the U2 snRNAs. As before, the Structure Tree's stem predictions (regions (d) and (e), above the main diagonal of Figure <xref ref-type="fig" rid="F16">16</xref>) are far more specific than the singlet grammar's predictions (regions (a) and (b), below the main diagonal). The primary-sequence TKF91 grammar (Figure <xref ref-type="fig" rid="F4">4</xref>) is, again, hampered by its global alignment and linear gap penalty, and the alignment in region (c) is stretched and also uncertain. However, the Pair SCFG (Figure <xref ref-type="fig" rid="F8">8</xref>) manages to identify the 35-bp deletion and correctly finds stem 4 of Figure <xref ref-type="fig" rid="F11">11</xref>, though stems 5&#x02013;6 have a lower probability (when predicting the structure of this deleted region, the Pair SCFG is unable to use covariation and must rely on basepairing information alone).</p></sec><sec><title>Bacterial nuclear RNase P</title><p>Nuclear RNase P is a class of endoribonuclease ribozyme involved in the production of mature 5' ends of transfer RNAs during tRNA biosynthesis [<xref ref-type="bibr" rid="B26">26</xref>]. Figure <xref ref-type="fig" rid="F12">12</xref> shows the alignment of the two ribozyme sequences, from <italic>Pichia canadensis </italic>and <italic>Clavispora opuntiae</italic>, which was taken from the RFAM database [<xref ref-type="bibr" rid="B14">14</xref>]. The secondary structures of the two sequences are quite different, with major change in stem length and deletion of whole stem structures, characteristic of this gene family (stems 0&#x02013;2 and 8&#x02013;9 of Figure <xref ref-type="fig" rid="F12">12</xref>). Figure <xref ref-type="fig" rid="F17">17</xref> shows the posterior dotplots for the RNase P genes. This family is one of the most mutable in RFAM, and the TKF91 Structure Tree performs poorly on this case. Both the Pair HMM (Figure <xref ref-type="fig" rid="F4">4</xref>; region (c) of Figure <xref ref-type="fig" rid="F17">17</xref>) and the Pair SCFG (Figure <xref ref-type="fig" rid="F8">8</xref>; region (f) of Figure <xref ref-type="fig" rid="F17">17</xref>) get the alignment almost entirely wrong, except for a region toward the 3' end that doesn't contain any stems (the region just before stem 8 of Figure <xref ref-type="fig" rid="F12">12</xref>). As a consequence, the Pair SCFG also fails to predict any stems correctly; the singlet SCFG (Figure <xref ref-type="fig" rid="F7">7</xref>) does no better. Region (f) of Figure <xref ref-type="fig" rid="F17">17</xref> displays the continuous-line alignment from corner-to-corner, that is characteristic of global aligners with linear gaps: unlike the case of the U2 alignment, the structural signal here is insufficient to compensate for the indel-modeling deficiencies of the TKF91 Structure Tree.</p><p>The log-odds score of the "true" alignment (Figure <xref ref-type="fig" rid="F12">12</xref>) under the Structure Tree model is highly negative (-547 bits), suggesting that the model is poorly adapted for this example. Compare this with the scores for the previous examples: Figure <xref ref-type="fig" rid="F9">9</xref> scored 2 bits, Figure <xref ref-type="fig" rid="F10">10</xref> scored -82 bits and Figure <xref ref-type="fig" rid="F11">11</xref> scored 35 bits. The low score for the nanos TCEs (Figure <xref ref-type="fig" rid="F10">10</xref>) was due primarily to the deletions in the outermost stem; the score rose to -5 bits with judicious trimming and careful choice of the "time" parameter.</p></sec></sec><sec><title>Discussion</title><p>We have described a reversible continuous-time Markov chain, called the "TKF91 Structure Tree", that describes both (i) covariant substitutions and indels in RNA sequence contingent upon a particular secondary structure, and (ii) changes in the underlying RNA secondary structure, corresponding to gain and loss of substructures. A pairwise alignment algorithm based on the model has been implemented in C++ and tested on four homologous pairs of RNA functional element from RFAM [<xref ref-type="bibr" rid="B14">14</xref>]. As with the TKF91 model on which the TKF91 Structure Tree is based [<xref ref-type="bibr" rid="B10">10</xref>], it should be possible, systematically, to design corresponding algorithms for multiple sequences, using either exhaustive dynamic programming [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B27">27</xref>] or Markov Chain Monte Carlo [<xref ref-type="bibr" rid="B13">13</xref>].</p><p>It should be noted that the present implementation of the TKF91 Structure Tree is not designed to be a direct competitor to programs like FOLDALIGN [<xref ref-type="bibr" rid="B20">20</xref>], DYNALIGN [<xref ref-type="bibr" rid="B21">21</xref>] or CARNAC [<xref ref-type="bibr" rid="B28">28</xref>]. Such pairwise alignment programs are optimized for criteria like alignment accuracy and sensitivity. The TKF91 Structure Tree, on the other hand, was designed as an expository evolutionary model, ultimately aimed at phylogenetic analysis of multiple RNA sequences in an evolutionary likelihood context. The pairwise alignment program reported in this paper was implemented to demonstrate the potential of this evolutionary model, rather than for use as a practical alignment tool. The author's STEMLOC program, which is similarly based on Pair SCFGs, has been optimized for practical applications (preferring short-term performance advantages over long-term design considerations) and may be freely downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.biowiki.org/"/>.</p><p>The results of our tests on pairwise alignments from RFAM reveal the strengths and weaknesses of our model. When RNA structure is very strongly conserved and indels are few, as with the purine riboswitches selected for this comparison (Figure <xref ref-type="fig" rid="F14">14</xref>), the TKF91 Structure Tree performs well at both structure prediction and alignment. On such alignments, the model is expected to be similar to PFOLD [<xref ref-type="bibr" rid="B12">12</xref>], which uses an SCFG and an evolutionary substitution model but lacks an evolutionary treatment of gaps. When the alignment has numerous indels in loops and stems, as in the selected nanos TCEs (15), or even minor rearrangements of structure, as in the selected U2 splice factors (16), the Structure Tree still seems to work well. However, beyond a certain level of structural change, as in the selected RNase P alignment (17), the model performs poorly and leaves considerable room for improvement.</p><p>In view of the room for improvement, we can identify a number of weaknesses of the TKF91 Structure Tree that could be improved in future models:</p><p>&#x02022; Sources of degeneracy such as zero-length stems and loops were removed "by hand" from the Pair SCFG (Table <xref ref-type="table" rid="T1">1</xref>). These degeneracies could have beeen specifically excluded from the evolutionary model, but with the apparent cost of making an exact solution much harder to find. One might expect the nondegenerate grammars of Figures <xref ref-type="fig" rid="F7">7</xref> and <xref ref-type="fig" rid="F8">8</xref> to approximate the transition probabilities of such a nondegenerate model.</p><p>&#x02022; Indel rates for whole stems/multistems are same as for unpaired residues. In nature, stem gain and loss is much slower than unpaired residue insertion/deletion, since the former is a structural change while the latter is not.</p><p>&#x02022; Multiple-residue indel events, and hence affine gap penalties, are not allowed. Again, the poor performance on the RNase P alignment may in part be due to this: the alignment generated has many small gaps scattered throughout, whereas the "true" alignment has fewer, longer gaps. This is a characteristic artefact of using a point indel model (linear gap penalty) where a multi-residue indel model (affine penalty) would be more appropriate.</p><p>&#x02022; Stems cannot be deleted without deleting all their "children" as well (i.e. all stems nested inside). Empirical inspection of alignments in RFAM, however, reveals many structures where an outer stem has been deleted or truncated, while inner stems are preserved. Again, perhaps an affine gap penalty for covariant indels (i.e. indels in stems) would address this. Alternatively, one might contrive some kind of "ragged-end" local alignment model, e.g. by embedding the finite TKF91 Structure Tree in an infinite, unobserved Structure Tree (c.f. [<xref ref-type="bibr" rid="B8">8</xref>]), though this may not be the ideal way to model such effects.</p><p>&#x02022; The equilibrium distribution over structures is highly simplified. For example, there is currently no modeling of fine-scale energetics such as basepair stacking propensities due to <italic>&#x003c0;</italic>-orbital conjugation. Mathematically, the complexities of modeling such effects are somewhat similar to those involved in modeling nearest-neighbor substitution biases in DNA (such as methylation-induced CpG deamination). Since recent progress has been made with such models [<xref ref-type="bibr" rid="B29">29</xref>,<xref ref-type="bibr" rid="B30">30</xref>] we might eventually expect inclusion of stacking effects in models of covariant RNA substitution, as well.</p><p>&#x02022; Bulges cannot be inserted into stems, except via the following awkward mechanism: the insertion of a bulge into a stem requires the pre-existence of a null <italic>S </italic>&#x02192; <italic>L </italic>&#x02192; <italic>S </italic>transition, where the <italic>L </italic>is empty. To fix this, <italic>L </italic>nodes could be allowed in stem sequences, just as <italic>S </italic>nodes are allowed in loop sequences (in fact, one should probably introduce "left" and "right" <italic>L</italic>-nodes, corresponding to left &#x00026; right bulges). However, this would increase the potential for degeneracies.</p><p>&#x02022; We have assumed that all stems and loops evolve at the same rate, whereas empirical inspection of RFAM of suggests otherwise. It is known that the analogous assumption in proteins (that all sites evolve at the same rate) can skew phylogenetic distance estimation [<xref ref-type="bibr" rid="B31">31</xref>], and perhaps a similar correction to the discretized gamma priors used in proteins could be applied here [<xref ref-type="bibr" rid="B32">32</xref>].</p><p>&#x02022; There is no special treatment of structural features such as triloops, tetraloops, triple-A platforms, U-turns and the like. Such features are often observed to be evolutionary conserved [<xref ref-type="bibr" rid="B33">33</xref>,<xref ref-type="bibr" rid="B34">34</xref>] and seem likely to be involved in intermolecular interactions [<xref ref-type="bibr" rid="B35">35</xref>,<xref ref-type="bibr" rid="B36">36</xref>]. It would be relatively easy to incorporate such features into the TKF91 Structure Tree, as special classes of <italic>L</italic>- or <italic>S</italic>-branch.</p><p>&#x02022; While the lengths of stem sequences are geometrically distributed in the TKF91 Structure Tree, due to their roots in the TKF91 model, empirical observations of real RNA structures suggest that real stem lengths follow a fairly tight length distribution. Such approximations in modeling stem lengths could conceivably contribute to poorer performance of the model. (In practise, we have not observed unnaturally long stems in the output of the TKF91 Structure Tree aligner, but the existence of a long, perfect inverted repeat in the sequence could conceivably bring out this problem.)</p><p>Despite these drawbacks, the results of our preliminary benchmark suggest that the TKF91 Structure Tree may be useful for aligning (at least the better-conserved) RNA functional elements. Given the recent growth of RNA sequence and structure databases such as RFAM [<xref ref-type="bibr" rid="B14">14</xref>] and SCOR [<xref ref-type="bibr" rid="B34">34</xref>], it would be interesting to carry out a broad-scale, empirical study of the mutations of RNA structures. This could then be used as a starting point for systematically designing and benchmarking an improved evolutionary model for RNA. In the meantime, the results presented here suggest new ways of designing evolutionary grammars that recognise higher-level structural change as well as point substitutions and indels, offering new ways of using high-throughput comparative sequencing to interpret the contents of genomes.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>This manuscript has evolved over the course of discussions with Sam Griffiths-Jones, Alex Bateman, Sean Eddy, Elena Rivas, Eric Westhof, Bjarne Knudsen, Kushal Chakrabarti, Jotun Hein, Gerton Lunter and David Haussler. The author thanks two anonymous reviewers for helpful criticism. The work was partly developed during a workshop in Benasque, Spain organised by Elena Rivas and Eric Westhof in 2003. The work was partially supported by grants from the UK's EPSRC (code HAMJW) and MRC (code HAMKA).</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rivas</surname><given-names>E</given-names></name><name><surname>Eddy</surname><given-names>SR</given-names></name></person-group><article-title>Noncoding RNA gene detection using comparative sequence analysis</article-title><source>BMC Bioinformatics</source><year>2001</year><volume>2</volume><fpage>8</fpage><pub-id pub-id-type="pmid">11801179</pub-id><pub-id pub-id-type="doi">10.1186/1471-2105-2-8</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rivas</surname><given-names>E</given-names></name><name><surname>Klein</surname><given-names>RJ</given-names></name><name><surname>Jones</surname><given-names>TA</given-names></name><name><surname>Eddy</surname><given-names>SR</given-names></name></person-group><article-title>Computational identification of noncoding RNAs in E. coli by comparative genomics</article-title><source>Current Biology</source><year>2001</year><volume>11</volume><fpage>1369</fpage><lpage>1373</lpage><pub-id pub-id-type="pmid">11553332</pub-id><pub-id pub-id-type="doi">10.1016/S0960-9822(01)00401-8</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Henikoff</surname><given-names>S</given-names></name><name><surname>Henikoff</surname><given-names>JG</given-names></name></person-group><article-title>Amino acid substitution matrices from protein blocks</article-title><source>Proceedings of the National Academy of Sciences of the USA</source><year>1992</year><volume>89</volume><fpage>10915</fpage><lpage>10919</lpage><pub-id pub-id-type="pmid">1438297</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Klein</surname><given-names>RJ</given-names></name><name><surname>Eddy</surname><given-names>SR</given-names></name></person-group><article-title>RESEARCH: Finding homologs of single structured RNA sequences</article-title><source>BMC Bioinformatics</source><year>2003</year><volume>4</volume><fpage>44</fpage><pub-id pub-id-type="pmid">14499004</pub-id><pub-id pub-id-type="doi">10.1186/1471-2105-4-44</pub-id></citation></ref><ref id="B5"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Dayhoff</surname><given-names>MO</given-names></name><name><surname>Schwartz</surname><given-names>RM</given-names></name><name><surname>Orcutt</surname><given-names>BC</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Dayhoff MO</surname></name></person-group><article-title>A Model of Evolutionary Change in Proteins</article-title><source>In Atlas of Protein Sequence and Structure</source><year>1978</year><volume>5</volume><publisher-name>Washington, DC: National Biomedical Research Foundation</publisher-name><fpage>345</fpage><lpage>352</lpage></citation></ref><ref id="B6"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Holmes</surname><given-names>I</given-names></name></person-group><article-title>Using guide trees to construct multiple-sequence evolutionary HMMs</article-title><source>In Proceedings of the Eleventh International Conference on Intelligent Systems for Molecular Biology</source><year>2003</year><publisher-name>Menlo Park, CA: AAAI Press</publisher-name><fpage>147</fpage><lpage>157</lpage></citation></ref><ref id="B7"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Felsenstein</surname><given-names>J</given-names></name></person-group><source>Inferring Phylogenies</source><year>2003</year><publisher-name>Sinauer Associates, Inc</publisher-name><comment>[ISBN 0878931775]</comment></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mikl&#x000f3;s</surname><given-names>I</given-names></name><name><surname>Lunter</surname><given-names>G</given-names></name><name><surname>Holmes</surname><given-names>I</given-names></name></person-group><article-title>A long indel model for evolutionary sequence alignment</article-title><source>Molecular Biology and Evolution</source><year>2004</year><volume>21</volume><fpage>529</fpage><lpage>540</lpage><pub-id pub-id-type="pmid">14694074</pub-id><pub-id pub-id-type="doi">10.1093/molbev/msh043</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Knudsen</surname><given-names>B</given-names></name><name><surname>Miyamoto</surname><given-names>M</given-names></name></person-group><article-title>Sequence Alignments and Pair Hidden Markov Models Using Evolutionary History</article-title><source>Journal of Molecular Biology</source><year>2003</year><volume>333</volume><fpage>453</fpage><lpage>460</lpage><pub-id pub-id-type="pmid">14529629</pub-id><pub-id pub-id-type="doi">10.1016/j.jmb.2003.08.015</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Thorne</surname><given-names>JL</given-names></name><name><surname>Kishino</surname><given-names>H</given-names></name><name><surname>Felsenstein</surname><given-names>J</given-names></name></person-group><article-title>An Evolutionary Model for Maximum Likelihood Alignment of DNA Sequences</article-title><source>Journal of Molecular Evolution</source><year>1991</year><volume>33</volume><fpage>114</fpage><lpage>124</lpage><pub-id pub-id-type="pmid">1920447</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pedersen</surname><given-names>JS</given-names></name><name><surname>Hein</surname><given-names>J</given-names></name></person-group><article-title>Gene finding with a hidden Markov model of genome structure and evolution</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>219</fpage><lpage>227</lpage><pub-id pub-id-type="pmid">12538242</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/19.2.219</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Knudsen</surname><given-names>B</given-names></name><name><surname>Hein</surname><given-names>J</given-names></name></person-group><article-title>RNA secondary structure prediction using stochastic context-free grammars and evolutionary history</article-title><source>Bioinformatics</source><year>1999</year><volume>15</volume><fpage>446</fpage><lpage>454</lpage><pub-id pub-id-type="pmid">10383470</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/15.6.446</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Holmes</surname><given-names>I</given-names></name><name><surname>Bruno</surname><given-names>WJ</given-names></name></person-group><article-title>Evolutionary HMMs: a Bayesian approach to multiple alignment</article-title><source>Bioinformatics</source><year>2001</year><volume>17</volume><fpage>803</fpage><lpage>820</lpage><pub-id pub-id-type="pmid">11590097</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/17.9.803</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Griffiths-Jones</surname><given-names>S</given-names></name><name><surname>Bateman</surname><given-names>A</given-names></name><name><surname>Marshall</surname><given-names>M</given-names></name><name><surname>Khanna</surname><given-names>A</given-names></name><name><surname>Eddy</surname><given-names>SR</given-names></name></person-group><article-title>Rfam: an RNA family database</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>439</fpage><lpage>441</lpage><pub-id pub-id-type="pmid">12520045</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg006</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Thorne</surname><given-names>JL</given-names></name><name><surname>Kishino</surname><given-names>H</given-names></name><name><surname>Felsenstein</surname><given-names>J</given-names></name></person-group><article-title>Inching Toward Reality: an Improved Likelihood Model of Sequence Evolution</article-title><source>Journal of Molecular Evolution</source><year>1992</year><volume>34</volume><fpage>3</fpage><lpage>16</lpage><pub-id pub-id-type="pmid">1556741</pub-id><pub-id pub-id-type="doi">10.1007/BF00163848</pub-id></citation></ref><ref id="B16"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Mikl&#x000f3;s</surname><given-names>I</given-names></name><name><surname>Toroczkai</surname><given-names>Z</given-names></name></person-group><article-title>An Improved Model for Statistical Alignment</article-title><source>In First Workshop on Algorithms in Bioinformatics</source><year>2001</year><publisher-name>Berlin, Heidelberg: Springer-Verlag</publisher-name></citation></ref><ref id="B17"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Eddy</surname><given-names>S</given-names></name><name><surname>Krogh</surname><given-names>A</given-names></name><name><surname>Mitchison</surname><given-names>G</given-names></name></person-group><source>Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids</source><year>1998</year><publisher-name>Cambridge, UK: Cambridge University Press</publisher-name></citation></ref><ref id="B18"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Holmes</surname><given-names>I</given-names></name><name><surname>Rubin</surname><given-names>GM</given-names></name></person-group><article-title>Pairwise RNA structure comparison using stochastic context-free grammars</article-title><source>Pacific Symposium on Biocomputing</source><year>2002</year></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sankoff</surname><given-names>D</given-names></name></person-group><article-title>Simultaneous solution of the RNA folding, alignment, and protosequence problems</article-title><source>SIAM Journal of Applied Mathematics</source><year>1985</year><volume>45</volume><fpage>810</fpage><lpage>825</lpage></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gorodkin</surname><given-names>J</given-names></name><name><surname>Heyer</surname><given-names>LJ</given-names></name><name><surname>Stormo</surname><given-names>GD</given-names></name></person-group><article-title>Finding the most significant common sequence and structure motifs in a set of RNA sequences</article-title><source>Nucleic Acids Research</source><year>1997</year><volume>25</volume><fpage>3724</fpage><lpage>3732</lpage><pub-id pub-id-type="pmid">9278497</pub-id><pub-id pub-id-type="doi">10.1093/nar/25.18.3724</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mathews</surname><given-names>DH</given-names></name><name><surname>Turner</surname><given-names>DH</given-names></name></person-group><article-title>Dynalign: an algorithm for finding the secondary structure common to two RNA sequences</article-title><source>Journal of Molecular Biology</source><year>2002</year><volume>317</volume><fpage>191</fpage><lpage>203</lpage><pub-id pub-id-type="pmid">11902836</pub-id><pub-id pub-id-type="doi">10.1006/jmbi.2001.5351</pub-id></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Holmes</surname><given-names>I</given-names></name><name><surname>Rubin</surname><given-names>GM</given-names></name></person-group><article-title>Expectation Maximization algorithm for training hidden substitution models</article-title><source>J Mol Biol</source><year>2002</year><volume>317</volume><fpage>757</fpage><lpage>768</lpage><pub-id pub-id-type="doi">10.1006/jmbi.2002.5405</pub-id></citation></ref><ref id="B23"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Mandal</surname><given-names>M</given-names></name><name><surname>Boese</surname><given-names>B</given-names></name><name><surname>Barrick</surname><given-names>JE</given-names></name><name><surname>Winkler</surname><given-names>WC</given-names></name><name><surname>Breaker</surname><given-names>RR</given-names></name></person-group><article-title>Riboswitches Control Fundamental Biochemical Pathways in Bacillus subtilis and Other Bacteria</article-title><source>Cell</source><year>2003</year><volume>113</volume><fpage>577</fpage><lpage>586</lpage><pub-id pub-id-type="pmid">12787499</pub-id><pub-id pub-id-type="doi">10.1016/S0092-8674(03)00391-X</pub-id></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Crucs</surname><given-names>S</given-names></name><name><surname>Chatterjee</surname><given-names>S</given-names></name><name><surname>Gavis</surname><given-names>ER</given-names></name></person-group><article-title>Overlapping but distinct RNA elements control repression and activation of nanos translation</article-title><source>Molecular cell</source><year>2000</year><volume>5</volume><fpage>457</fpage><lpage>467</lpage><pub-id pub-id-type="pmid">10882131</pub-id><pub-id pub-id-type="doi">10.1016/S1097-2765(00)80440-2</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Berglund</surname><given-names>JA</given-names></name><name><surname>Rosbash</surname><given-names>M</given-names></name><name><surname>Schultz</surname><given-names>SC</given-names></name></person-group><article-title>Crystal structure of a model branchpoint-U2 snRNA duplex containing bulged adenosines</article-title><source>RNA</source><year>2001</year><volume>7</volume><fpage>682</fpage><lpage>691</lpage><pub-id pub-id-type="pmid">11350032</pub-id><pub-id pub-id-type="doi">10.1017/S1355838201002187</pub-id></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Frank</surname><given-names>DN</given-names></name><name><surname>Adamidi</surname><given-names>C</given-names></name><name><surname>Ehringer</surname><given-names>MA</given-names></name><name><surname>Pitulle</surname><given-names>C</given-names></name><name><surname>Pace</surname><given-names>NR</given-names></name></person-group><article-title>Phylogenetic-comparative analysis of the eukaryal ribonuclease P RNA</article-title><source>RNA</source><year>2000</year><volume>6</volume><fpage>1895</fpage><lpage>1904</lpage><pub-id pub-id-type="pmid">11142387</pub-id><pub-id pub-id-type="doi">10.1017/S1355838200001461</pub-id></citation></ref><ref id="B27"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Hein</surname><given-names>J</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Altman RB, Dunker AK, Hunter L, Lauderdale K, Klein TE</surname></name></person-group><article-title>An Algorithm for Statistical Alignment of Sequences Related by a Binary Tree</article-title><source>In Pacific Symposium on Biocomputing</source><year>2001</year><publisher-name>Singapore: World Scientific</publisher-name><fpage>179</fpage><lpage>190</lpage></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Perriquet</surname><given-names>O</given-names></name><name><surname>Touzet</surname><given-names>H</given-names></name><name><surname>Dauchet</surname><given-names>M</given-names></name></person-group><article-title>Finding the common structure shared by two homologous RNAs</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>108</fpage><lpage>116</lpage><pub-id pub-id-type="pmid">12499300</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/19.1.108</pub-id></citation></ref><ref id="B29"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Lunter</surname><given-names>G</given-names></name><name><surname>Hein</surname><given-names>J</given-names></name></person-group><article-title>A nucleotide substitution model with nearest-neighbour interactions</article-title><source>Bioinformatics</source><year>2004</year><comment>[To appear]</comment></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Siepel</surname><given-names>A</given-names></name><name><surname>Haussler</surname><given-names>D</given-names></name></person-group><article-title>Phylogenetic estimation of context-dependent substitution rates by maximum likelihood</article-title><source>Molecular Biology and Evolution</source><year>2004</year><volume>21</volume><fpage>468</fpage><lpage>488</lpage><pub-id pub-id-type="pmid">14660683</pub-id><pub-id pub-id-type="doi">10.1093/molbev/msh039</pub-id></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bruno</surname><given-names>WJ</given-names></name><name><surname>Halpern</surname><given-names>AL</given-names></name></person-group><article-title>Topological bias and inconsistency of maximum likelihood using wrong models</article-title><source>Molecular Biology and Evolution</source><year>1999</year><volume>16</volume><fpage>564</fpage><lpage>566</lpage><pub-id pub-id-type="pmid">10331281</pub-id></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Yang</surname><given-names>Z</given-names></name></person-group><article-title>Maximum-likelihood estimation of phylogeny from DNA sequences when substitution rates differ over sites</article-title><source>Molecular Biology and Evolution</source><year>1993</year><volume>10</volume><fpage>1396</fpage><lpage>1401</lpage><pub-id pub-id-type="pmid">8277861</pub-id></citation></ref><ref id="B33"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Klosterman</surname><given-names>PS</given-names></name><name><surname>Tamura</surname><given-names>M</given-names></name><name><surname>Holbrook</surname><given-names>SR</given-names></name><name><surname>Brenner</surname><given-names>SE</given-names></name></person-group><article-title>SCOR: a structural classification of RNA database</article-title><source>Nucleic Acids Research</source><year>2002</year><volume>30</volume><fpage>392</fpage><lpage>394</lpage><pub-id pub-id-type="pmid">11752346</pub-id><pub-id pub-id-type="doi">10.1093/nar/30.1.392</pub-id></citation></ref><ref id="B34"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Klosterman</surname><given-names>PS</given-names></name><name><surname>Hendrix</surname><given-names>DK</given-names></name><name><surname>Tamura</surname><given-names>M</given-names></name><name><surname>Holbrook</surname><given-names>SR</given-names></name><name><surname>Brenner</surname><given-names>SE</given-names></name></person-group><article-title>Three-dimensional motifs from the SCOR, structural classification of RNA database: extruded strands, base triples, tetraloops and U-turns</article-title><source>Nucleic Acids Research</source><year>2004</year><volume>32</volume><fpage>2342</fpage><lpage>2352</lpage><pub-id pub-id-type="pmid">15121895</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkh537</pub-id></citation></ref><ref id="B35"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Varani</surname><given-names>G</given-names></name></person-group><article-title>RNA-protein intermolecular recognition</article-title><source>Accounts of chemical research</source><year>1997</year><volume>30</volume><fpage>190</fpage><lpage>195</lpage><pub-id pub-id-type="doi">10.1021/ar960035x</pub-id></citation></ref><ref id="B36"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>H</given-names></name><name><surname>Henras</surname><given-names>A</given-names></name><name><surname>Chanfreau</surname><given-names>G</given-names></name><name><surname>Feigon</surname><given-names>J</given-names></name></person-group><article-title>Structural basis for recognition of the AGNN tetraloop RNA fold by the double-stranded RNA-binding domain of Rnt1p RNase III</article-title><source>Proceedings of the National Academy of Sciences of the USA</source><year>2004</year><volume>101</volume><fpage>8307</fpage><lpage>8312</lpage><pub-id pub-id-type="pmid">15150409</pub-id><pub-id pub-id-type="doi">10.1073/pnas.0402627101</pub-id></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p>A TKF91 Structure Tree, and the corresponding RNA secondary structure (inset).</p></caption><graphic xlink:href="1471-2105-5-166-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p>An example mutation path for a TKF91 Structure Tree, illustrating the instantaneous transitions of the process. In each figure (<italic>N</italic>), gray arrows indicate the sites of past mutations in step (<italic>N </italic>- 1) &#x02192; (<italic>N</italic>), while black arrows indicate the sites of upcoming mutations in step (<italic>N</italic>) &#x02192; (<italic>N </italic>+ 1). The types of mutation are as follows. (1) &#x02192; (2): Point substitution of unpaired nucleotides in loop sequences. (2) &#x02192; (3): Point and/or covariant substitution of paired nucleotides in stem sequences. (3) &#x02192; (4): Insertions of single unpaired nucleotides in loop sequences. (4) &#x02192; (5): Deletions of single unpaired nucleotides in loop sequences. (5) &#x02192; (6): Insertion and deletion of paired nucleotides in stem sequences. (6) &#x02192; (7): Insertion of stems into loop sequences. (7) &#x02192; (8): Deletion of stems from loop sequences.</p></caption><graphic xlink:href="1471-2105-5-166-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p>An SCFG with nonterminals {<italic>L</italic>} and terminals &#x003a9; for generating the equilibrium distribution over TKF91 sequences. Here <italic>X </italic>&#x02208; &#x003a9; is a generic terminal symbol.</p></caption><graphic xlink:href="1471-2105-5-166-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p>A Pair SCFG with nonterminals {<italic>L</italic><sub>1</sub>, <italic>L</italic><sub>2</sub>} and terminals &#x003a9;<sub><italic>a </italic></sub>&#x0222a; &#x003a9;<sub><italic>d </italic></sub>for generating pairwise alignments of TKF91 sequences for an ancestor and a descendant. Here <italic>X, Y </italic>&#x02208; &#x003a9; are generic terminal symbols.</p></caption><graphic xlink:href="1471-2105-5-166-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p>An SCFG with nonterminals &#x003a6; and terminals &#x003a9; for generating the equilibrium distribution over Structure Trees. Here <italic>W, X </italic>&#x02208; &#x003a9; are generic terminal symbols.</p></caption><graphic xlink:href="1471-2105-5-166-5"/></fig><fig position="float" id="F6"><label>Figure 6</label><caption><p>A Pair SCFG with nonterminals &#x003a6;<sub>1234 </sub>and terminals &#x003a9;<sub><italic>a </italic></sub>&#x0222a; &#x003a9;<sub><italic>d </italic></sub>for generating pairwise alignments of Structure Trees for an ancestor and a descendant. Here <italic>W, X, Y, Z </italic>&#x02208; &#x003a9; are generic terminal symbols.</p></caption><graphic xlink:href="1471-2105-5-166-6"/></fig><fig position="float" id="F7"><label>Figure 7</label><caption><p>A DART-form SCFG with nonterminals &#x003a8; and terminals &#x003a9; for generating ancestral Structure Trees. Here <italic>W, X, Y, Z </italic>&#x02208; &#x003a9; are generic terminal symbols.</p></caption><graphic xlink:href="1471-2105-5-166-7"/></fig><fig position="float" id="F8"><label>Figure 8</label><caption><p>A DART-form Pair SCFG with nonterminals &#x003a8;<sub>1234 </sub>and terminals &#x003a9;<sub><italic>a </italic></sub>&#x0222a; &#x003a9;<sub><italic>d </italic></sub>for generating pairwise alignments of Structure Trees for an ancestor and a descendant. Here <italic>W, X, Y, Z </italic>&#x02208; &#x003a9; are generic terminal symbols.</p></caption><graphic xlink:href="1471-2105-5-166-8"/></fig><fig position="float" id="F9"><label>Figure 9</label><caption><p>Alignment of purine riboswitches from <italic>Bacillus halodurans </italic>(AP001509.1) and <italic>Streptococcus pneumoniae </italic>(AE007476.1).</p></caption><graphic xlink:href="1471-2105-5-166-9"/></fig><fig position="float" id="F10"><label>Figure 10</label><caption><p>Alignment of nanos TCEs from <italic>Drosophila virilis </italic>(DVU24695) and <italic>Drosophila melanogaster </italic>(DRONANOS).</p></caption><graphic xlink:href="1471-2105-5-166-10"/></fig><fig position="float" id="F11"><label>Figure 11</label><caption><p>Alignment of U2 splicing factors from <italic>Tetrahymena thermophila </italic>(X63784.1) and <italic>Leptomonas collosoma </italic>(X56455.1).</p></caption><graphic xlink:href="1471-2105-5-166-11"/></fig><fig position="float" id="F12"><label>Figure 12</label><caption><p>Alignment of nuclear RNase P genes from <italic>Pichia canadensis </italic>(AF186219.1) and <italic>Clavispora opuntiae </italic>(AF186216.1).</p></caption><graphic xlink:href="1471-2105-5-166-12"/></fig><fig position="float" id="F13"><label>Figure 13</label><caption><p>Fold-alignment dotplot key. These plots compare separate and integrated methods for RNA alignment and folding. Regions (a) and (b) use the single-sequence SCFG of Figure 7; region (c) use the TKF91 pair HMM of Figure 4; and regions (d), (e) and (f) use the pair SCFG of Figure 8, which is based on the TKF91 Structure Tree (see Results section).</p></caption><graphic xlink:href="1471-2105-5-166-13"/></fig><fig position="float" id="F14"><label>Figure 14</label><caption><p>Fold-alignment dotplot of purine riboswitches (see Figure 13 for key). From a wide range of potential stems (faint red diagonal lines, plots a-b), the Pair SCFG clearly resolves the three strongest (sharp white diagonal lines, plots d-e). In this case, the primary sequence alignment is relatively clear (plot c) and so little alignment clarity is gained by including structural information (plot f).</p></caption><graphic xlink:href="1471-2105-5-166-14"/></fig><fig position="float" id="F15"><label>Figure 15</label><caption><p>Fold-alignment dotplot of nanos translational control elements (see Figure 13 for key). From a range of potential stems (faint red diagonal lines, plots a-b), the Pair SCFG resolves the three true stems sharply using the comparative signal (white diagonal lines, plots d-e). Some uncertainty in the primary sequence alignment (parallel blurred red lines, plot c) is resolved by including structural information, including a deletion in the outermost stem (broken diagonal line, plot f).</p></caption><graphic xlink:href="1471-2105-5-166-15"/></fig><fig position="float" id="F16"><label>Figure 16</label><caption><p>Fold-alignment dotplot of U2 splicing factors (see Figure 13 for key). From a range of potential stems (faint red diagonal lines, plots a-b), the Pair SCFG resolves the true stems sharply using the comparative signal (white diagonal lines, plots d-e). The primary sequence alignment is highly uncertain (blurred red lines, plot c) but this uncertainty, including the deletion of a whole stem, is resolved by including structural information (broken diagonal line, plot f).</p></caption><graphic xlink:href="1471-2105-5-166-16"/></fig><fig position="float" id="F17"><label>Figure 17</label><caption><p>Fold-alignment dotplot of nuclear RNase P genes (see Figure 13 for key). From a wide range of potential stems (faint red diagonal lines, plots a-b), the Pair SCFG resolves several sharply using the comparative signal (sharp white diagonal lines, plots d-e). Uncertainty in the primary sequence alignment (wide red lines, plot c) ?? is also resolved by including structural information (arrow white line, plot f).</p></caption><graphic xlink:href="1471-2105-5-166-17"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Classes of degeneracy in the Structure Tree grammars. Permutations and combinations of these cycles are also possible.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">Degeneracy</td><td align="left">Figure</td><td align="left">Nonterminal sequence</td><td align="left">Rule sequence</td><td align="left">Comment</td></tr></thead><tbody><tr><td align="left">Null cycle</td><td align="left">5</td><td align="left"><italic>L </italic>&#x02192; <italic>S </italic>&#x02192; <italic>L</italic></td><td align="left">2,3,5</td><td></td></tr><tr><td></td><td align="left">6</td><td align="left"><italic>L</italic><sub>1 </sub>&#x02192; ... &#x02192; <italic>L</italic><sub>1</sub></td><td align="left">4,7,11</td><td align="left">via <italic>S</italic><sub>1</sub><italic>L</italic><sub>1</sub></td></tr><tr><td></td><td></td><td></td><td align="left">5,32,30</td><td align="left">via <italic>S</italic><sub>4</sub><italic>L</italic><sub>1</sub></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>2 </sub>&#x02192; ... &#x02192; <italic>L</italic><sub>2</sub></td><td align="left">17,27,25</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>1 </sub>&#x02192; <italic>L</italic><sub>2 </sub>...</td><td align="left">6,27,25</td><td></td></tr><tr><td></td><td></td><td align="left">...<italic>L</italic><sub>2 </sub>&#x02192; <italic>L</italic><sub>1</sub></td><td align="left">15,11,7</td><td align="left">via <italic>S</italic><sub>1</sub><italic>L</italic><sub>1</sub></td></tr><tr><td></td><td></td><td></td><td align="left">16,32,30</td><td align="left">via <italic>S</italic><sub>4</sub><italic>L</italic><sub>1</sub></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>3 </sub>&#x02192; <italic>S</italic><sub>3 </sub>&#x02192; <italic>L</italic><sub>3</sub></td><td align="left">24,25,27</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>4 </sub>&#x02192; <italic>S</italic><sub>4 </sub>&#x02192; <italic>L</italic><sub>4</sub></td><td align="left">29,30,32</td><td></td></tr><tr><td align="left">Loop bifurcation</td><td align="left">5</td><td align="left"><italic>L </italic>&#x02192; <italic>LL</italic></td><td align="left">2,5</td><td></td></tr><tr><td></td><td align="left">6</td><td align="left"><italic>L</italic><sub>1 </sub>&#x02192; <italic>L</italic><sub>1</sub><italic>L</italic><sub>1</sub></td><td align="left">4,11</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>2 </sub>&#x02192; <italic>L</italic><sub>1</sub><italic>L</italic><sub>1</sub></td><td align="left">15,11</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>3 </sub>&#x02192; <italic>L</italic><sub>3</sub><italic>L</italic><sub>3</sub></td><td align="left">24,27</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>L</italic><sub>4 </sub>&#x02192; <italic>L</italic><sub>4</sub><italic>L</italic><sub>4</sub></td><td align="left">29,32</td><td></td></tr><tr><td align="left">Silent bulge</td><td align="left">5</td><td align="left"><italic>S </italic>&#x02192; <italic>L </italic>&#x02192; <italic>S</italic></td><td align="left">5,3,2</td><td align="left">Cyclic permutation of <italic>L </italic>&#x02192; <italic>S </italic>&#x02192; <italic>L</italic></td></tr><tr><td></td><td align="left">6</td><td align="left"><italic>S</italic><sub>2 </sub>&#x02192; <italic>L</italic><sub>1 </sub>&#x02192; <italic>S</italic><sub>1</sub></td><td align="left">22,4,7</td><td></td></tr><tr><td></td><td></td><td align="left"><italic>S</italic><sub>1 </sub>&#x02192; <italic>L</italic><sub>1 </sub>&#x02192; <italic>S</italic><sub>1</sub></td><td align="left">11,4,7</td><td align="left">Cyclic permutation of <italic>L</italic><sub>1 </sub>&#x02192; <italic>S</italic><sub>1 </sub>&#x02192; <italic>L</italic><sub>1</sub></td></tr><tr><td></td><td></td><td align="left"><italic>S</italic><sub>3 </sub>&#x02192; <italic>L</italic><sub>3 </sub>&#x02192; <italic>S</italic><sub>3</sub></td><td align="left">27,24,25</td><td align="left">Cyclic permutation of <italic>L</italic><sub>3 </sub>&#x02192; <italic>S</italic><sub>3 </sub>&#x02192; <italic>L</italic><sub>3</sub></td></tr><tr><td></td><td></td><td align="left"><italic>S</italic><sub>4 </sub>&#x02192; <italic>L</italic><sub>4 </sub>&#x02192; <italic>S</italic><sub>4</sub></td><td align="left">32,29,30</td><td align="left">Cyclic permutation of <italic>L</italic><sub>4 </sub>&#x02192; <italic>S</italic><sub>4 </sub>&#x02192; <italic>L</italic><sub>4</sub></td></tr></tbody></table></table-wrap></sec></back></article>



