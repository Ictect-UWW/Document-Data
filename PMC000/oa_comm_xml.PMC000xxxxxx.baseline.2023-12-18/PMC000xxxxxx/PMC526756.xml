<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15485572</article-id><article-id pub-id-type="pmc">PMC526756</article-id><article-id pub-id-type="publisher-id">1471-2105-5-149</article-id><article-id pub-id-type="doi">10.1186/1471-2105-5-149</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Improved hit criteria for DNA local alignment</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>No&#x000e9;</surname><given-names>Laurent</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>Laurent.Noe@loria.fr</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Kucherov</surname><given-names>Gregory</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>Gregory.Kucherov@loria.fr</email></contrib></contrib-group><aff id="I1"><label>1</label>LORIA/INRIA-Lorraine, 615, rue du Jardin Botanique, B.P. 101, 54602 Villers-l&#x000e8;s-Nancy France</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>14</day><month>10</month><year>2004</year></pub-date><volume>5</volume><fpage>149</fpage><lpage>149</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/5/149"/><history><date date-type="received"><day>26</day><month>7</month><year>2004</year></date><date date-type="accepted"><day>14</day><month>10</month><year>2004</year></date></history><copyright-statement>Copyright &#x000a9; 2004 No&#x000e9; and Kucherov; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>The hit criterion is a key component of heuristic local alignment algorithms. It specifies a class of patterns assumed to witness a potential similarity, and this choice is decisive for the selectivity and sensitivity of the whole method.</p></sec><sec><title>Results</title><p>In this paper, we propose two ways to improve the hit criterion. First, we define the <italic>group criterion </italic>combining the advantages of the single-seed and double-seed approaches used in existing algorithms. Second, we introduce <italic>transition-constrained seeds </italic>that extend spaced seeds by the possibility of distinguishing transition and transversion mismatches. We provide analytical data as well as experimental results, obtained with the YASS software, supporting both improvements.</p></sec><sec><title>Conclusions</title><p>Proposed algorithmic ideas allow to obtain a significant gain in sensitivity of similarity search without increase in execution time. The method has been implemented in YASS software available at <ext-link ext-link-type="uri" xlink:href="http://www.loria.fr/projects/YASS/"/>.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Sequence alignment is a fundamental problem in Bioinformatics. Despite of a big amount of efforts spent by researchers on designing efficient alignment methods, improving the alignment efficiency remains of primary importance. This is due to the continuously increasing amount of nucleotide sequence data, such as EST and newly sequenced genomic sequences, that need to be compared in order to detect similar regions occurring in them. Those comparisons are done routinely, and therefore need to be done very fast, preferably instantaneously on commonly used computers. On the other hand, they need to be precise, i.e. should report all, or at least a vast majority of interesting similarities that could be relevant in the underlying biological study. The latter requirement for the alignment method, called the <italic>sensitivity</italic>, counterweights the speed requirement, usually directly related to the <italic>selectivity </italic>(called also <italic>specificity</italic>) of the method. The central problem is therefore to improve the trade-off between those opposite requirements.</p><p>The Smith-Waterman algorithm [<xref ref-type="bibr" rid="B1">1</xref>] provides an exact algorithmic solution to the problem of computing optimal local alignments. However, its quadratic time complexity has motivated the creation of rapid heuristic local alignments tools. A basic idea behind all heuristic algorithms is to focus only on those regions which share some patterns, assumed to witness (or to <italic>hit</italic>) a potential similarity. Those patterns are formed by <italic>seeds </italic>which are small strings (usually up to 25 nucleotides) that appear in both sequences. FASTA [<xref ref-type="bibr" rid="B2">2</xref>] and BLAST [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>] are well-known examples of such methods. BLAST is currently the most commonly used sequence alignment tool, and is a kernel of higher-level search tools, such as PSI-BLAST [<xref ref-type="bibr" rid="B4">4</xref>] for instance.</p><p>More recently, several new alignment methods have been proposed, such as BLAT [<xref ref-type="bibr" rid="B5">5</xref>], PatternHunter [<xref ref-type="bibr" rid="B6">6</xref>], LAGAN [<xref ref-type="bibr" rid="B7">7</xref>], or BLASTZ [<xref ref-type="bibr" rid="B8">8</xref>], to name a few. The improvement brought by all those tools results from new more efficient <italic>hit criteria </italic>that define which pattern shared by two sequences is assumed to witness a potential alignment. Two types of improvements can be distinguished. On the one hand, using two or more closely located smaller seeds instead of one larger seed has been shown to improve the sensitivity/selectivity trade-off [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>], especially for detecting long similarities. On the other hand, new seed models have been proposed, such as spaced seeds [<xref ref-type="bibr" rid="B6">6</xref>], seeds with errors [<xref ref-type="bibr" rid="B5">5</xref>], or vector seeds [<xref ref-type="bibr" rid="B9">9</xref>].</p><p>In this paper, we propose further improvements in both those directions. In the first part (Section <italic>Group hit criterion</italic>), we propose a new flexible and efficiently computable hit criterion, called <italic>group criterion</italic>, combining the advantages of the single-seed ([<xref ref-type="bibr" rid="B3">3</xref>]) and multi-seed ([<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>]) criteria. In the second part (Section <italic>Generalized seed models</italic>), we propose a new more expressive seed model which extends the spaced seed model of PatternHunter [<xref ref-type="bibr" rid="B6">6</xref>] by the possibility of distinguishing transition and transversion mismatches. We show that this allows to obtain a further gain in sensitivity on real genomic sequences, usually rich in transition mutations. Both proposed improvements have been implemented in YASS software [<xref ref-type="bibr" rid="B10">10</xref>], used in the experimental part of this work.</p></sec><sec><title>Results</title><sec><title>Group hit criterion</title><p>The first preparatory step of most heuristic alignment algorithms consists of constructing a hash table of all <italic>seeds </italic>occurring in the input sequences. In this section, we assume that a seed of <italic>weight k </italic>is a word consisting of <italic>k </italic>contiguous nucleotides (<italic>k</italic>-word), more general notions of seed will be considered in the next Section.</p><p>In the simplest case, implemented in the early version of BLAST [<xref ref-type="bibr" rid="B3">3</xref>], an individual seed occurring in both sequences acts as a <italic>hit </italic>of a potential alignment. It triggers the <italic>X-drop </italic>algorithm trying to extend the seed to a so-called High-scoring Segment Pair (HSP), used then to obtain a larger final alignment. Gapped BLAST [<xref ref-type="bibr" rid="B4">4</xref>] proposes a <italic>double-seed </italic>criterion that defines a hit as two non-overlapping seeds occurring at the same dotplot diagonal within a fixed-size window. This allows to considerably increase the selectivity with respect to the single-seed approach, and at the same time to preserve, and even to improve, the sensitivity on large similarities. On the other hand, Gapped BLAST is less sensitive on short and middle-size similarities of weak score. (We will show this more formally at the end of this Section.) Most of the existing alignment programs [<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>] use either a single-seed or a double-seed hit criterion.</p><p>Here we propose a new flexible hit criterion defining a hit as a group containing an arbitrary number of possibly overlapping seeds, with an additional constraint on the minimal number of matching nucleotides. The seeds of the same group are assumed to belong to the same similarity, and therefore should be proximate to each other. In contrast to other multi-seed hit criteria [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B6">6</xref>], we don't require seeds to occur at the same dotplot diagonal but at close diagonals, to account for possible indels. The possible placement of seeds is controlled by parameters computed according to statistical models that we describe now.</p><sec><title>Group criterion</title><p>A hit criterion defines a pattern which is considered as an evidence of a potential similarity. Every time this pattern is found, its extension is triggered to compute a potential larger alignment. The extension is usually done via a dynamic programming algorithm and is a costly step. The hit criterion should be <italic>selective </italic>enough to avoid spurious extensions and, on the other hand, should be <italic>sensitive </italic>to detect as many relevant similarities as possible.</p><p>The hit criterion we propose is based on a <italic>group of seeds </italic>verifying conditions (1), (2) (see Section <italic>Methods</italic>). By the considered statistical analysis, this ensures a good sensitivity. However, many groups will contain a single seed or two strongly overlapping seeds, that either belong to a similarity with a low score, or do not belong to any similarity at all (i.e. don't belong to an alignment with a sufficiently high score). To cope with this problem, we introduce an additional criterion that selects groups that will be actually extended. The criterion, called <italic>group criterion</italic>, is based on the <italic>group size </italic>defined as the <italic>minimal number of matching individual nucleotides in all seeds of the group</italic>. The group size can be seen as a parameter specifying the maximal overlap of the seeds of a group. For example, if the group size is <italic>k </italic>+ 1, then no constraint on the overlap is imposed, i.e. any group containing two distinct seeds forms a hit. If the group size is 2<italic>k</italic>, then the group must contain at least two non-overlapping seeds, etc.</p><p>Allowing overlapping seeds is an important point that brings a flexibility to our method. Note that other popular multi-seed methods [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B5">5</xref>] consider only non-overlapped seeds. Allowing overlapped seeds and controlling the overlap with the group size parameter offers a trade-off between a single-seed and a multi-seed strategies. This increases the sensitivity of the usual multi-seed approach without provoking a tangible increase in the number of useless extensions. In the next section, we will provide quantitative measures comparing the sensitivity of the YASS group criterion with BLAST and Gapped BLAST.</p></sec><sec><title>Some comparative and experimental data</title><p>In this section, we adopt the following experimental setup to estimate the sensitivity of the YASS group criterion compared to other methods. We first set a match/mismatch scoring system, here fixed to +1/-3 (default NCBI-BLAST values). The main assumption is that the sensitivity is estimated as the probability of hitting a random <italic>gapless alignments of a fixed score</italic>. Moreover, to make this model yet more close to reality, only <italic>homogeneous alignments </italic>are considered, i.e. alignments that don't contain proper sub-alignments of bigger score (see [<xref ref-type="bibr" rid="B11">11</xref>]). For a given alignment length, all homogeneous alignments are assumed to have an equal probability to occur.</p><p>In this setting, we computed the hit probability of a single-seed criterion with seed weight 11 (default for BLAST) and compared it with multi-seed criteria of Gapped BLAST and YASS for seed weight 9 (default for Gapped BLAST). For YASS, the group size was set to 13. Figure <xref ref-type="fig" rid="F1">1</xref> shows the probability graphs for alignment score 25.</p><p>Comparing BLAST and Gapped BLAST, the former is more sensitive on short similarities (having higher identity rate), while the latter is more sensitive on longer similarities, in which two close non-overlapping runs of 9 matches are more likely to occur than one run of 11 matches. The YASS group criterion combines the advantages of both: it is more sensitive than the single-seed criterion even for short similarities, and than the non-overlapping double-seed criterion for large similarities (Figure <xref ref-type="fig" rid="F1">1</xref>).</p><p>Note, however, that for the chosen parameters, the YASS criterion is slightly less selective than that of Gapped BLAST as it includes any two non-overlapping seeds but also includes pairs of seeds overlapped by at most 5 bp. The selectivity can be estimated by the probability of a hit at a given position in a random uniform Bernoulli sequence (see [<xref ref-type="bibr" rid="B5">5</xref>]). For YASS, this probability is 2.1&#x000b7;10<sup>-8</sup>, which improves that of BLAST (2.4&#x000b7;10<sup>-7</sup>) by more than ten. For Gapped BLAST, this probability is 7.3&#x000b7;10<sup>-9</sup>. To make an accurate sensitivity comparaison of YASS and Gapped BLAST, parameters should be set so that both algorithms have the same selectivity level.</p><p>To compare the sensitivity of YASS and Gapped BLAST for an equal selectivity level, we chose a parameter configuration such that both algorithms have the same estimated selectivity (10<sup>-6</sup>). This is achieved with seed weight 8 for Gapped BLAST and group size 11 for YASS (while keeping seed weight 9). In this configuration, and for sequences of score 25, YASS turns out to be considerably more sensitive on sequences up to 80 bp and is practically as sensitive as Gapped BLAST on longer sequences (data not shown). At the same time, YASS is more time efficient in this case, as Gapped BLAST tends to compute more spurious individual seeds that are not followed by a second hit, which takes a considerable part of the execution time. This is because the YASS seed is larger by one nucleotide, and the number of spurious individual seeds computed at the first step is then divided by 4 on large sequences.</p><p>Compared to the single-seed criterion of BLAST, the YASS group criterion is both more selective (group size 13 vs single-seed size 11) and more sensitive <italic>for all alignment lengths</italic>, as soon as the alignment score is 25 or more. If the score becomes smaller, both criteria yield an unacceptably low sensitivity, and the seed weight has then to be decreased to detect those similarities.</p><p>Finally, we point out another experiment we made to bring more evidence that the group criterion captures a good sensitivity/selectivity trade-off. We monitored the partition of the execution time between the formation of groups and their extension by dynamic programming (data not shown). It appeared that YASS spends approximately equal time on each of the two stages, which gives a good indication that it provides an optimal distribution between the two complementary parts of the work.</p></sec></sec><sec><title>Generalized seed models</title><p>So far, we defined seeds as <italic>k</italic>-words, i.e. short strings of <italic>contiguous </italic>nucleotides. Recently, it has been understood that using <italic>spaced seeds </italic>allows to considerably improve the sensitivity. A spaced seed is formed by two words, one from each input sequence, that match at positions specified by a fixed <italic>pattern </italic>&#x02013; a word over symbols # and _ interpreted as a match and a don't care symbol respectively. For example, pattern ##_# specifies that the first, second and fourth positions must match and the third one may contain a mismatch.</p><p>PatternHunter [<xref ref-type="bibr" rid="B6">6</xref>] was the first method that used carefully designed spaced seeds to improve the sensitivity of DNA local alignment. In [<xref ref-type="bibr" rid="B12">12</xref>], spaced seeds have been shown to improve the efficiency of <italic>lossless </italic>filtration for approximate pattern matching, namely for the problem of detecting all matches of a string of length <italic>m </italic>with <italic>q </italic>possible substitution errors (an (<italic>m</italic>, <italic>q</italic>)-problem). The use of some specific spaced seeds for this problem was proposed earlier in [<xref ref-type="bibr" rid="B13">13</xref>]. Yet earlier, random spaced seeds were used in FLASH software [<xref ref-type="bibr" rid="B14">14</xref>] to cover sequence similarities, and the sensitivity of this approach was recently studied in [<xref ref-type="bibr" rid="B15">15</xref>].</p><p>The advent of spaced seeds raised new questions: How to choose a good seed for a local alignment algorithm? How to make a precise estimation of the seed goodness, or more generally, of a seed-based local alignment method? In [<xref ref-type="bibr" rid="B16">16</xref>], a dynamic programming algorithm was proposed to measure the hit probability of a seed on alignments modeled by a Bernoulli model. In the lossless case, an analogous algorithm that allows to test the seed completeness for an (<italic>m</italic>, <italic>q</italic>)-problem was proposed in [<xref ref-type="bibr" rid="B12">12</xref>]. The algorithm of [<xref ref-type="bibr" rid="B16">16</xref>] has been extended in [<xref ref-type="bibr" rid="B17">17</xref>] for hidden Markov models on order to design spaced seeds for comparing homologous coding regions. Another method based on finite automata was proposed in [<xref ref-type="bibr" rid="B18">18</xref>]. A complementary approach to estimate the seed sensitivity is proposed in [<xref ref-type="bibr" rid="B11">11</xref>]. Papers [<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>] present a probabilistic analysis of spaced seeds, as well as experimental results based on the Bernoulli alignment model.</p><p>Other extensions of the contiguous seed model have been proposed. BLAT [<xref ref-type="bibr" rid="B5">5</xref>] uses contiguous seeds but allows one error at any of its positions. This strategy is refined in BLASTZ [<xref ref-type="bibr" rid="B8">8</xref>] that uses spaced seeds and allows one transition substitution at any of match positions. An extension, proposed in [<xref ref-type="bibr" rid="B9">9</xref>], enriches the PatternHunter spaced seeds model with a scoring system to define a hit.</p><p>Here we propose a new <italic>transition-constrained seed </italic>model. Its idea is based on the well-known feature of genomic sequences that transition mutations (nucleotide substitutions between purins or between pyrimidins) occur relatively more often than transversions (other substitutions). While in the uniform Bernoulli sequence transitions are twice less frequent than transversions, in real genomic sequences this ratio is often inverted. For example, matrices computed in [<xref ref-type="bibr" rid="B21">21</xref>] on mouse and human sequences imply that the transition/transversion rate (hereafter <italic>ti/tv</italic>) is greater than one on average. Transitions are much more frequent than transversions in coding sequences, as most of silent mutations are transitions. <italic>ti/tv </italic>ratio is usually greater for related species, as well as for specific DNA (mitochondrial DNA for example).</p><p>Transition-constrained seeds are defined on the ternary alphabet {#, @, _}, where @ stands for a match or a transition mismatch (A &#x02194; G, C &#x02194; T), and # and _ have the same meaning as for spaced seeds. The <italic>weight of a transition-constrained seed </italic>is defined as the sum of the number of #'s plus half the number of @'s. This is because a transition carries one bit of information while a match carries two bits.</p><p>Note that using transition-constrained seeds is perfectly compatible with the group criterion described in Section <italic>Group criterion</italic>. The only non-trivial algorithmic issue raised by this combination is how to efficiently compute the group size during the formation of groups out of found seeds. In YASS, this is done via a special finite automaton resulting from the preprocessing of the input seed.</p><sec><title>Transition-constrained seeds for Bernoulli alignment model</title><p>To estimate the detection capacity of transition-constrained seeds, we first use the Bernoulli alignment model, as done in [<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B19">19</xref>,<xref ref-type="bibr" rid="B20">20</xref>]. We model a gapless alignment by a Bernoulli sequence over the ternary match/transition/transversion alphabet with the match probability 0.7 and the probabilities of transition/transversion varying according to the <italic>ti/tv </italic>ratio. The sequence length is set to 64, a typical length of a gapless fragment in DNA alignments. We are interested in seed weights between 9 and 11, as they represent a good sensitivity/selectivity compromise.</p><p>Table <xref ref-type="table" rid="T1">1</xref> compares the sensitivity of the best spaced seeds of weight 9, 10 and 11, reported in [<xref ref-type="bibr" rid="B20">20</xref>], with some transition-constrained seeds, assuming that transitions and transversions occur with equal probability 0.15. The transition-constrained seeds have been obtained using a stepwise Monte-Carlo search, and the probabilities have been computed with an algorithm equivalent to that of [<xref ref-type="bibr" rid="B16">16</xref>]. The table shows that transition-constrained seeds are more sensitive with respect to this model.</p><p>A natural question is the efficiency of transition-constrained seeds depending on the <italic>ti/tv </italic>ratio. This is shown in Figure <xref ref-type="fig" rid="F2">2</xref>. The left and right plots correspond to the seeds from Table <xref ref-type="table" rid="T1">1</xref> of weight 9 and 10 respectively. The plots show that the sensitivity of transition-constrained seeds greatly increases when the <italic>ti/tv </italic>ratio is over 1, which is typically the case for real genomic sequences.</p></sec><sec><title>Transition-constrained seeds for Markov alignment model</title><p>Homologous coding sequences, when aligned, usually show a regular distribution of errors due to protein coding constraints. In particular, transitions often occur at the third codon position, as these mutations are almost always silent for the resulting protein. Markov models provide a standard modeling tool to capture such local dependencies. In the context of seed design, papers [<xref ref-type="bibr" rid="B16">16</xref>-<xref ref-type="bibr" rid="B18">18</xref>] proposed methods to compute the hit probability of spaced seeds with respect to gapless alignments specified by (Hidden) Markov models. To test whether using transition-constrained seeds remains beneficial for alignments specified by Markov models, we constructed a Markov model of order 5 out of a large mixed sample of about 100 000 crossed alignments of genomic sequences of distantly related species (<italic>Neisseria Meningitidis, S. Cerevisiae, Human X chromosome, Drosophila</italic>). The alignments were computed with different seeds of small weight, to avoid a possible bias caused by a specific alignment method. We then designed optimal spaced and transition-constrained seeds of weight 9&#x02013;11 with respect to this Markov model. Table <xref ref-type="table" rid="T2">2</xref> shows the results of this computation providing evidence that transition-constrained seeds increase the sensitivity with respect to this Markov model too.</p></sec></sec><sec><title>Experiments</title><sec><title>Seed experiments</title><p>In order to test the detection performance of transition-constrained seeds on real genomic data, we made experiments on full chromosomic sequences of <italic>S. Cerevisiae </italic>(chromosomes IV, V, IX, XVI) and <italic>Neisseria meningitidis </italic>(strains MC58 and Z2491). The experiments were made with our YASS software [<xref ref-type="bibr" rid="B10">10</xref>] that admits user-defined transition-constrained seeds and implements the group criterion described in Section <italic>Group criterion</italic>. The experiments used seeds of weight 9 and 11, obtained on Bernoulli and Markov models (reported in Tables <xref ref-type="table" rid="T1">1</xref> and <xref ref-type="table" rid="T2">2</xref>). The search was done using group size 10 and 12 respectively for seed weight 9 and 11 (option -s of YASS). This means that at least two distinct seeds were required to trigger the extension, with no additional constraint on their overlap, which is equivalent to the double-seed criterion of PatternHunter. The scoring system used was +1/-1 for match/mismatch and -5/-1 for gap opening/extension. Both strands of input chromosomes has been processed in each experiment (-r 2 option of YASS).</p><p>For each comparison, we counted the number of computed alignments with E-value smaller than 10<sup>-3</sup>. Table <xref ref-type="table" rid="T3">3</xref> reports some typical results of this experiment. They confirm that using transition-constrained seeds does increase the search sensitivity. A side (non-surprising) observation is that, in all tests, the seed designed on the Markov model turns out to be more efficient than the one designed on the Bernoulli model. Note that the similarity search can be further improved by using transition-specific scoring matrices (for example, PAM Transition/Transversion matrices or matrices designed for specific comparisons [<xref ref-type="bibr" rid="B21">21</xref>]) rather than uniform matches/mismatch matrices, and transition-constrained spaced seeds are more likely to detect alignments highly scored by those matrices.</p><p>Another advantage of transition-constrained seeds comes from the fact that they are more robust with respect to the GC/AT composition bias of the genome. This is because purins and pyrimidins remain balanced in GC- or AT-rich genomes, and one match carries less information (is more likely to occur "by chance") than two match-or-transition pairs.</p></sec><sec><title>Program experiments</title><p>A series of comparative tests has been carried out to compare the sensitivity with traditional approaches. Several complete bacterial genomes ranging from 3 to 5 Mb have been processed against each other using both YASS and the b12seq programs (NCBI BLAST package 2.2.6.). The tests used the scoring system +1/-1 for match/mismatch and -5/-1 for gap opening/extension. The threshold E-value for the output was set to 10 (default BLAST value), and the sequence filtering was disabled. YASS was run with its default seed pattern #@#__##__#_##@# of weight 9 which provides a good compromise in detecting similarities of both coding and non-coding sequences.</p><p>For each test, the number of alignments with E-value less than 10<sup>-6 </sup>found by each program, and the number of exclusive alignments were reported. By "exclusive alignment", we mean every alignment of E-value less than 10<sup>-6 </sup>that does not share a common part (do not overlap on both sequences) with any alignment found by the other program. To take into account a possible bias caused by splitting alignments into smaller ones (X-drop effect), we also computed the total length of exclusive alignments, found by each program.</p><p>Experiments are summarized in Table <xref ref-type="table" rid="T4">4</xref> and show that within a generally smaller execution time, YASS detects more exclusive similarities that cover about twice the overall length of those found by b12seq. The gain in execution time increases when the sequence length gets larger.</p></sec></sec></sec><sec><title>Conclusions</title><p>In this paper, we introduced two independent improvements of hit criteria for DNA local alignment. The <italic>group criterion</italic>, based on statistical DNA sequence models, combines the advantages of both single-seed and double-seed criteria. <italic>Transition-constrained seeds </italic>account for specificities of real DNA sequences and allow to further increase the search sensitivity with respect to spaced seeds. Both options have been implemented in YASS software available at <ext-link ext-link-type="uri" xlink:href="http://www.loria.fr/projects/YASS/"/>.</p><p>Transition-constrained seeds could be further extended using the idea of vector seeds [<xref ref-type="bibr" rid="B9">9</xref>], i.e. by assigning weights to each seed position, but also to each type of mutation. This would give a more general mechanism to account for the information brought by different mutations. But the model is also more flexible, an thus involves a larger search space to design seeds.</p><p>Another new direction for further improving the efficiency is a simultaneous use of several seed patterns [<xref ref-type="bibr" rid="B22">22</xref>-<xref ref-type="bibr" rid="B24">24</xref>], complementing the sensitivity of each other. However, designing such families is also hard problem, due to the involved search space.</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Statistical analysis</title><p>We first introduce some notations used in this section. Let <italic>S</italic><sub>1 </sub>and <italic>S</italic><sub>2 </sub>be the input sequences of length <italic>m </italic>and <italic>n </italic>respectively. Each of them can be considered as a succession of <italic>m </italic>- <italic>k </italic>+ 1 (respectively <italic>n </italic>- <italic>k </italic>+ 1) substrings of length <italic>k</italic>, called <italic>k-words</italic>. If a <italic>k</italic>-word of <italic>S</italic><sub>1 </sub>matches another <italic>k</italic>-word of <italic>S</italic><sub>2</sub>, i.e. <italic>S</italic><sub>1</sub>[<italic>i</italic>..<italic>i </italic>+ <italic>k </italic>- 1] = <italic>S</italic><sub>2</sub>[<italic>j</italic>..<italic>j </italic>+ <italic>k </italic>- 1] for some <italic>i </italic>&#x02264; <italic>m </italic>and <italic>j </italic>&#x02264; <italic>n</italic>, then these two <italic>k-</italic>words form a <italic>seed </italic>denoted &#x0003c;<italic>i</italic>, <italic>j</italic>&#x0003e;. Two functions on seeds are considered: For a seed &#x0003c;<italic>i</italic>, <italic>j</italic>&#x0003e;, the <italic>seed diagonal d</italic>(&#x0003c;<italic>i</italic>, <italic>j</italic>&#x0003e;) is <italic>m </italic>+ <italic>j </italic>- <italic>i</italic>. It can be seen as the distance between the <italic>k</italic>-words <italic>S</italic><sub>1</sub>[<italic>i</italic>..<italic>i </italic>+ <italic>k </italic>- 1] and <italic>S</italic><sub>2</sub>[<italic>j</italic>..<italic>j </italic>+ <italic>k </italic>- 1] if <italic>S</italic><sub>2 </sub>is concatenated to <italic>S</italic><sub>1</sub>, For two seeds &#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e; and &#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e;, where <italic>i</italic><sub>1 </sub>&#x0003c;<italic>i</italic><sub>2 </sub>and <italic>j</italic><sub>1 </sub>&#x0003c;<italic>j</italic><sub>2</sub>, the <italic>inter-seed </italic>distance <italic>D</italic>(&#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e;, &#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e;) is the maximum between |<italic>i</italic><sub>2 </sub>- <italic>i</italic><sub>1</sub>| and |<italic>j</italic><sub>2 </sub>- <italic>j</italic><sub>1</sub>|. The problem considered in this Section is to derive conditions under which two seeds are likely to be a part of <italic>the same </italic>alignment, and therefore should be grouped together. More precisely, we want to be able to compute parameters <italic>&#x003c1; </italic>and <italic>&#x003b4; </italic>such that two <italic>seeds </italic>&#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e; and &#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e; have a probability (1 - <italic>&#x003b5;</italic>) to belong to the same similarity iff</p><p><italic>D</italic>(&#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e;, &#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e;) &#x02264; <italic>&#x003c1;</italic>, &#x000a0;&#x000a0;&#x000a0; (1)</p><p>|<italic>d</italic>(&#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e;) - <italic>d</italic>(&#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e;)| &#x02264; <italic>&#x003b4;</italic>. &#x000a0;&#x000a0;&#x000a0; (2)</p><p>The first inter-seed condition insures that the seeds are close enough to each other. The second seed diagonal condition requires that in both seeds, the two <italic>k</italic>-words occur at <italic>close diagonals</italic>.</p><p>We now describe statistical models used to compute parameters <italic>&#x003c1; </italic>and <italic>&#x003b4;</italic>.</p><sec><title>Bounding the inter-seed distance</title><p>Consider two homologous DNA sequences that stem from a duplication of a common ancestor sequence, followed by independent individual substitution events. Under this assumption, the two sequences have an equal length and their alignment is a sequence of matched and mismatched pairs of nucleotides. We model this alignment by a Bernoulli sequence with the probability <italic>p </italic>for a match and (1 - <italic>p</italic>) for a mismatch. To estimate the inter-seed shift <italic>D</italic><sub><italic>k</italic></sub>, we have to estimate the distance between the starts of two <italic>successive runs of at least k matches </italic>in the Bernoulli sequence. It obeys the geometric distribution of order <italic>k </italic>called the <italic>Waiting time distribution </italic>[<xref ref-type="bibr" rid="B25">25</xref>,<xref ref-type="bibr" rid="B26">26</xref>]:</p><p><inline-graphic xlink:href="1471-2105-5-149-i1.gif"/></p><p>Using this formula, we compute <italic>&#x003c1; </italic>such that the probability <inline-graphic xlink:href="1471-2105-5-149-i2.gif"/> is (1 - <italic>&#x003b5;</italic>) for some small <italic>&#x003b5;</italic>.</p><p>Note that the Waiting time distribution allows us to estimate another useful parameter: the number of runs of matches of length at least <italic>k </italic>inside a Bernoulli sequence of length <italic>x</italic>. In a Bernoulli sequence of length <italic>x</italic>, the probability of the event <italic>I</italic><sub><italic>p</italic>,<italic>x</italic>,<italic>r </italic></sub>of having exactly <italic>r non-overlapping </italic>runs of matches of length at least <italic>k </italic>is given by the following recursive formula:</p><p><inline-graphic xlink:href="1471-2105-5-149-i3.gif"/></p><p>This gives the probability of having exactly <italic>r non-overlapping </italic>seeds of length at least <italic>k </italic>inside a repeat of size <italic>x</italic>. The recurrence starts with <italic>r </italic>= 0, in which case <inline-graphic xlink:href="1471-2105-5-149-i4.gif"/> and is computed through the Waiting time distribution.</p><p>The distribution <inline-graphic xlink:href="1471-2105-5-149-i5.gif"/> allows us to infer a lower bound on the number of non-overlapping seeds expected to be found inside a similarity region. In particular, we will use this bound as a first estimate of the group criterion introduced later.</p></sec><sec><title>Bounding the seed diagonal variation</title><p><italic>Indels </italic>(nucleotide insertions/deletions) are responsible for a diagonal shift of seeds viewed on a dotplot matrix. In other words, they introduce a possible difference between <italic>d</italic>(&#x0003c;<italic>i</italic><sub>1</sub>, <italic>j</italic><sub>1</sub>&#x0003e;) and <italic>d</italic>(&#x0003c;<italic>i</italic><sub>2</sub>, <italic>j</italic><sub>2</sub>&#x0003e;). To estimate a typical shift size, we use a method similar to the one proposed in [<xref ref-type="bibr" rid="B26">26</xref>] for the search of tandem repeats.</p><p>Assume that an indel of an individual nucleotide occurs with an equal probability <italic>q </italic>at each of <italic>l </italic>nucleotides separating two consecutive seeds. Under this assumption, estimating the diagonal shift produced by indels is done through a discrete one-dimensional <italic>random walk </italic>model, where the probability of moving left or right is equal to <italic>q</italic>, and the probability of staying in place is 1 - 2<italic>q</italic>. Our goal is to bound, with a given probability, the deviation from the starting point.</p><p>The probability of ending the random walk at position <italic>i </italic>after <italic>l </italic>steps is given by the following sum:</p><p><inline-graphic xlink:href="1471-2105-5-149-i6.gif"/></p><p>A direct computation of multi-monomial coefficients quickly leads to a memory overflow, and to circumvent this, we use a technique based on generating functions. Consider the function <inline-graphic xlink:href="1471-2105-5-149-i7.gif"/> and consider the power <italic>P</italic><sup><italic>l</italic></sup>(<italic>x</italic>) = <italic>a</italic><sub><italic>l</italic></sub>.<italic>x</italic><sup><italic>l </italic></sup>+&#x02026;+ <italic>a</italic><sub>-<italic>l</italic></sub>.<italic>x</italic><sup>-<italic>l</italic></sup>. Then the coefficient <italic>a</italic><sub><italic>i </italic></sub>computes precisely the above formula, and therefore gives the probability of ending the random walk at position <italic>i </italic>after <italic>l </italic>steps. We then have to sum up coefficients <italic>a</italic><sub><italic>i </italic></sub>for <italic>i </italic>= 0,1, -1, 2, -2,..., <italic>l</italic>, -<italic>l </italic>until we reach a given threshold probability (1 - <italic>&#x003b5;</italic>). The obtained value <italic>l </italic>is then taken as the parameter <italic>&#x003b4; </italic>used to bound the maximal diagonal shift between two seeds.</p></sec></sec></sec></body><back><ack><sec><title>Acknowledgments</title><p>We are grateful to Mikhail Roytberg for enlightening discussions, and to Marie-Pierre Etienne, Roman Kolpakov, Gilles Schaeffer and Pierre Valois for their helpful comments at early stages of this work.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Smith</surname><given-names>T</given-names></name><name><surname>Waterman</surname><given-names>M</given-names></name></person-group><article-title>Identification of common molecular subsequences</article-title><source>Journal of Molecular Biology</source><year>1981</year><volume>147</volume><fpage>195</fpage><lpage>197</lpage><pub-id pub-id-type="pmid">7265238</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lipman</surname><given-names>D</given-names></name><name><surname>Pearson</surname><given-names>W</given-names></name></person-group><article-title>Improved tools for biological sequence comparison</article-title><source>Proc Natl Acad Sci USA</source><year>1988</year><volume>85</volume><fpage>2444</fpage><lpage>2448</lpage><pub-id pub-id-type="pmid">3162770</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S</given-names></name><name><surname>Gish</surname><given-names>W</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Myers</surname><given-names>E</given-names></name><name><surname>Lipman</surname><given-names>D</given-names></name></person-group><article-title>Basic Local Alignment Search Tool</article-title><source>Journal of Molecular Biology</source><year>1990</year><volume>215</volume><fpage>403</fpage><lpage>410</lpage><pub-id pub-id-type="pmid">2231712</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Altschul</surname><given-names>S</given-names></name><name><surname>Madden</surname><given-names>T</given-names></name><name><surname>Sch&#x000e4;ffer</surname><given-names>A</given-names></name><name><surname>Zhang</surname><given-names>J</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name><name><surname>Lipman</surname><given-names>D</given-names></name></person-group><article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title><source>Nucleic Acids Research</source><year>1997</year><volume>25</volume><fpage>3389</fpage><lpage>3402</lpage><pub-id pub-id-type="pmid">9254694</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kent</surname><given-names>WJ</given-names></name></person-group><article-title>BLAT &#x02013; The BLAST-Like Alignment Tool</article-title><source>Genome Research</source><year>2002</year><volume>12</volume><fpage>656</fpage><lpage>664</lpage><pub-id pub-id-type="pmid">11932250</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Ma</surname><given-names>B</given-names></name><name><surname>Tromp</surname><given-names>J</given-names></name><name><surname>Li</surname><given-names>M</given-names></name></person-group><article-title>PatternHunter: Faster and more sensitive homology search</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><fpage>440</fpage><lpage>445</lpage><pub-id pub-id-type="pmid">11934743</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brudno</surname><given-names>M</given-names></name><name><surname>Do</surname><given-names>C</given-names></name><name><surname>Cooper</surname><given-names>G</given-names></name><name><surname>Kim</surname><given-names>M</given-names></name><name><surname>Davydov</surname><given-names>E</given-names></name><name><surname>Green</surname><given-names>E</given-names></name><name><surname>Sidow</surname><given-names>A</given-names></name><name><surname>Batzoglou</surname><given-names>S</given-names></name></person-group><article-title>LAGAN and Multi-LAGAN: Efficient Tools for Large-Scale Multiple Alignment of Genomic DNA</article-title><source>Genome Research</source><year>2003</year><volume>13</volume><fpage>1</fpage><lpage>11</lpage><pub-id pub-id-type="pmid">12529301</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schwartz</surname><given-names>S</given-names></name><name><surname>Kent</surname><given-names>J</given-names></name><name><surname>Smit</surname><given-names>A</given-names></name><name><surname>Zhang</surname><given-names>Z</given-names></name><name><surname>Baertsch</surname><given-names>R</given-names></name><name><surname>Hardison</surname><given-names>R</given-names></name><name><surname>Haussler</surname><given-names>D</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name></person-group><article-title>Human&#x02013;Mouse Alignments with BLASTZ</article-title><source>Genome Research</source><year>2003</year><volume>13</volume><fpage>103</fpage><lpage>107</lpage><pub-id pub-id-type="pmid">12529312</pub-id></citation></ref><ref id="B9"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Brejova</surname><given-names>B</given-names></name><name><surname>Brown</surname><given-names>D</given-names></name><name><surname>Vinar</surname><given-names>T</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Benson G, Page R</surname></name></person-group><article-title>Vector seeds: an extension to spaced seeds allows substantial improvements in sensitivity and specificity</article-title><source>In Proceedings of the 3rd International Workshop in Algorithms in Bioinformatics (WABI), Budapest (Hungary), Volume 2812 of Lecture Notes in Computer Science</source><year>2003</year><publisher-name>Springer</publisher-name><fpage>39</fpage><lpage>54</lpage></citation></ref><ref id="B10"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Noe</surname><given-names>L</given-names></name><name><surname>Kucherov</surname><given-names>G</given-names></name></person-group><article-title>Similarity search in DNA sequences</article-title><source>Research Report RR-4852</source><year>2003</year><publisher-name>INRIA</publisher-name><ext-link ext-link-type="uri" xlink:href="http://www.inria.fr/rrrt/rr-4852.html"/></citation></ref><ref id="B11"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Kucherov</surname><given-names>G</given-names></name><name><surname>No&#x000e9;</surname><given-names>L</given-names></name><name><surname>Ponty</surname><given-names>Y</given-names></name></person-group><article-title>Estimating seed sensitivity on homogeneous alignments</article-title><source>In Proceedings of the IEEE 4th Symposium on Bioinformatics and Bioengineering (BIBE2004), May 19&#x02013;21, Taichung (Taiwan), the IEEE 4th Symposium on Bioinformatics and Bioengineering &#x02013; BIBE'2004</source><year>2004</year><publisher-name>IEEE Computer Society Press</publisher-name><fpage>387</fpage><lpage>394</lpage></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Burkhardt</surname><given-names>S</given-names></name><name><surname>K&#x000e4;rkk&#x000e4;inen</surname><given-names>J</given-names></name></person-group><article-title>Better Filtering with Gapped <italic>q</italic>-Grams</article-title><source>Fundamenta Informaticae</source><year>2003</year><volume>56</volume><fpage>51</fpage><lpage>70</lpage><comment>[Preliminary version in Combinatorial Pattern Matching 2001]</comment></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Pevzner</surname><given-names>P</given-names></name><name><surname>Waterman</surname><given-names>M</given-names></name></person-group><article-title>Multiple Filtration and Approximate Pattern Matching</article-title><source>Algorithmica</source><year>1995</year><volume>13</volume><fpage>135</fpage><lpage>154</lpage></citation></ref><ref id="B14"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Califano</surname><given-names>A</given-names></name><name><surname>Rigoutsos</surname><given-names>I</given-names></name></person-group><article-title>Flash: A fast look-up algorithm for string homology</article-title><source>In Proceedings of the 1st International Conference on Intelligent Systems for Molecular Biology</source><year>1993</year><fpage>56</fpage><lpage>64</lpage></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Buhler</surname><given-names>J</given-names></name></person-group><article-title>Efficient Large-Scale Sequence Comparison by Locality-Sensitive Hashing</article-title><source>Bioinformatics</source><year>2001</year><volume>17</volume><fpage>419</fpage><lpage>428</lpage><pub-id pub-id-type="pmid">11331236</pub-id></citation></ref><ref id="B16"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Keich</surname><given-names>U</given-names></name><name><surname>Li</surname><given-names>M</given-names></name><name><surname>Ma</surname><given-names>B</given-names></name><name><surname>Tromp</surname><given-names>J</given-names></name></person-group><article-title>On Spaced Seeds for Similarity Search</article-title><year>2002</year><comment>[Manuscript]</comment></citation></ref><ref id="B17"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Brejova</surname><given-names>B</given-names></name><name><surname>Brown</surname><given-names>D</given-names></name><name><surname>Vinar</surname><given-names>T</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Baeza-Yates R, E Chavez MC</surname></name></person-group><article-title>Optimal Spaced Seeds for Hidden Markov Models, with Application to Homologous Coding Regions</article-title><source>In Proceedings of the 14th Symposium on Combinatorial Pattern Matching, Volume 2676 of Lecture Notes in Computer Science</source><year>2003</year><publisher-name>Springer</publisher-name><fpage>42</fpage><lpage>54</lpage></citation></ref><ref id="B18"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Buhler</surname><given-names>J</given-names></name><name><surname>Keich</surname><given-names>U</given-names></name><name><surname>Sun</surname><given-names>Y</given-names></name></person-group><article-title>Designing seeds for similarity search in genomic DNA</article-title><source>In Proceedings of the 7th Annual International Conference on Computational Molecular Biology (RECOMB03), Berlin (Germany)</source><year>2003</year><publisher-name>ACM Press</publisher-name><fpage>67</fpage><lpage>75</lpage></citation></ref><ref id="B19"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Choi</surname><given-names>K</given-names></name><name><surname>Zhang</surname><given-names>L</given-names></name></person-group><article-title>Sensitivity Analysis and Efficient Method for Identifying Optimal Spaced Seeds</article-title><source>Journal of Computer and System Sciences</source><year>2004</year><volume>68</volume><fpage>22</fpage><lpage>40</lpage></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Choi</surname><given-names>KP</given-names></name><name><surname>Zeng</surname><given-names>F</given-names></name><name><surname>Zhang</surname><given-names>L</given-names></name></person-group><article-title>Good Spaced Seeds For Homology Search</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><fpage>1053</fpage><lpage>1059</lpage><pub-id pub-id-type="pmid">14764573</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Chiaromonte</surname><given-names>F</given-names></name><name><surname>Yap</surname><given-names>V</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name></person-group><article-title>Scoring Pairwise Genomic Sequence Alignments</article-title><source>Pac Symp Biocomput</source><year>2002</year><volume>7</volume><fpage>115</fpage><lpage>126</lpage></citation></ref><ref id="B22"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Li</surname><given-names>M</given-names></name><name><surname>Ma</surname><given-names>B</given-names></name><name><surname>Kisman</surname><given-names>D</given-names></name><name><surname>Tromp</surname><given-names>J</given-names></name></person-group><article-title>PatternHunter II: Highly Sensitive and Fast Homology Search</article-title><source>J Bioinform Comput Biol</source><year>2004</year><fpage>417</fpage><lpage>439</lpage><pub-id pub-id-type="pmid">15359419</pub-id></citation></ref><ref id="B23"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Sun</surname><given-names>Y</given-names></name><name><surname>Buhler</surname><given-names>J</given-names></name></person-group><article-title>Designing Multiple Simultaneous Seeds for DNA Similarity Search</article-title><source>In Proceedings of the 8th Annual International Conference on Research in Computational Molecular Biology (RECOMB 2004)</source><year>2004</year><publisher-name>ACM Press</publisher-name><fpage>76</fpage><lpage>84</lpage></citation></ref><ref id="B24"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Kucherov</surname><given-names>G</given-names></name><name><surname>No&#x000e9;</surname><given-names>L</given-names></name><name><surname>Roytberg</surname><given-names>M</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Sahinalp S, Muthukrishnan S, Dogrusoz U</surname></name></person-group><article-title>Multi-seed lossless filtration</article-title><source>In Proceedings of the 15th Annual Combinatorial Pattern Matching Symposium (CPM), Istanbul (Turkey), Volume 3109 of Lecture Notes in Computer Science</source><year>2004</year><publisher-name>Springer Verlag</publisher-name><fpage>297</fpage><lpage>310</lpage></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Aki</surname><given-names>S</given-names></name><name><surname>Kuboki</surname><given-names>H</given-names></name><name><surname>Hirano</surname><given-names>K</given-names></name></person-group><article-title>On discrete distributions of order <italic>k</italic></article-title><source>Annals of the Institute of Statistical Mathematics</source><year>1984</year><volume>36</volume><fpage>431</fpage><lpage>440</lpage></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Benson</surname><given-names>G</given-names></name></person-group><article-title>Tandem repeats finder: a program to analyse DNA sequences</article-title><source>Nucleic Acids Research</source><year>1999</year><volume>27</volume><fpage>573</fpage><lpage>580</lpage><pub-id pub-id-type="pmid">9862982</pub-id></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Hit Probability. </bold>Hit probability as a function of length of fixed-score alignments</p></caption><graphic xlink:href="1471-2105-5-149-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Seed Probability. </bold>Hit probability of seed models on Bernoulli sequences as a function on <italic>ti/tv </italic>ratio</p></caption><graphic xlink:href="1471-2105-5-149-2"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Bernouilli Model Hit probability of seeds on Bernoulli sequences of length 64 with match probability 0.7 and transition/transversion probabilities 0.15</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">weight</td><td align="left">spaced seed</td><td align="center">hit proba</td><td align="left">transition-constrained seed</td><td align="center">hit proba</td></tr></thead><tbody><tr><td align="center">9</td><td align="left"><italic>B</italic><sub>9 </sub>= ##_##_#_#___###</td><td align="center">0.7291</td><td align="left"><italic>B</italic><sub>9</sub><sup><italic>tr </italic></sup>= ##@_#@#__#_###</td><td align="center">0.7366</td></tr><tr><td align="center">10</td><td align="left">B<sub>10 </sub>= ##_##___##_#_###</td><td align="center">0.5957</td><td align="left"><italic>B</italic><sub>10</sub><sup><italic>tr </italic></sup>= #@#_#_@#_@#__@###</td><td align="center">0.6056</td></tr><tr><td align="center">11</td><td align="left"><italic>B</italic><sub>11 </sub>= ###_#__#_#__##_###</td><td align="center">0.4671</td><td align="left"><italic>B</italic><sub>11</sub><sup><italic>tr </italic></sup>= #@#_#@__##_#_@@##</td><td align="center">0.4784</td></tr></tbody></table></table-wrap><table-wrap position="float" id="T2"><label>Table 2</label><caption><p>Markov Model Hit probability of seeds on a Markov model of order 5 trained on a large mixed sample of cross-species alignments</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center">weight</td><td align="left">spaced seed</td><td align="center">hit proba</td><td align="left">transition-constrained seed</td><td align="center">hit proba</td></tr></thead><tbody><tr><td align="center">9</td><td align="left"><italic>M</italic><sub>9 </sub>= ##_##_##_###</td><td align="center">0.822</td><td align="left"><italic>M</italic><sub>9</sub><sup><italic>tr </italic></sup>= ##@##_##@##</td><td align="center">0.845</td></tr><tr><td align="center">10</td><td align="left"><italic>M</italic><sub>10 </sub>= ##_##_##___##_##</td><td align="center">0.716</td><td align="left"><italic>M</italic><sub>10</sub><sup><italic>tr </italic></sup>= #@@##_##_##@#@</td><td align="center">0.746</td></tr><tr><td align="center">11</td><td align="left"><italic>M</italic><sub>11 </sub>= ##_##_##_##_###</td><td align="center">0.603</td><td align="left"><italic>M</italic><sub>11</sub><sup><italic>tr </italic></sup>= ##@##_##_##@##</td><td align="center">0.632</td></tr></tbody></table></table-wrap><table-wrap position="float" id="T3"><label>Table 3</label><caption><p>Seed experiments. Number of high-scoring similarities found with different seed patterns</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">sequences</td><td align="right"><italic>B</italic><sub>9</sub></td><td align="right"><italic>B</italic><sub>9</sub><sup>
                                 <italic>tr</italic>
                              </sup></td><td align="right"><italic>B</italic><sub>11</sub></td><td align="right"><italic>B</italic><sub>11</sub><sup>
                                 <italic>tr</italic>
                              </sup></td><td align="right"><italic>M</italic><sub>9</sub></td><td align="right"><italic>M</italic><sub>9</sub><sup>
                                 <italic>tr</italic>
                              </sup></td><td align="right"><italic>M</italic><sub>11</sub></td><td align="right"><italic>M</italic><sub>11</sub><sup>
                                 <italic>tr</italic>
                              </sup></td></tr></thead><tbody><tr><td align="left">IX/V</td><td align="right">323</td><td align="right">336</td><td align="right">275</td><td align="right">279</td><td align="right">312</td><td align="right">325</td><td align="right">274</td><td align="right">293</td></tr><tr><td align="left">IX/XVI</td><td align="right">342</td><td align="right">354</td><td align="right">271</td><td align="right">280</td><td align="right">349</td><td align="right">357</td><td align="right">280</td><td align="right">295</td></tr><tr><td align="left">XVI/IV</td><td align="right">1314</td><td align="right">1361</td><td align="right">1124</td><td align="right">1172</td><td align="right">1309</td><td align="right">1348</td><td align="right">1180</td><td align="right">1235</td></tr><tr><td align="left">MC58/Z2491</td><td align="right">361896</td><td align="right">380028</td><td align="right">341113</td><td align="right">364792</td><td align="right">385444</td><td align="right">392164</td><td align="right">359348</td><td align="right">366759</td></tr></tbody></table></table-wrap><table-wrap position="float" id="T4"><label>Table 4</label><caption><p>Comparative Tests. Comparative tests of YASS vs b12seq (NCBI BLAST 2.2.6). Reported execution times have been obtained on a Pentium IV 2.4 GHz computer.</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center" colspan="2">sequence 1</td><td align="center" colspan="2">sequence 2</td><td align="center" colspan="2">time (sec)</td><td align="center" colspan="2"># align.</td><td align="center" colspan="2"># ex. align.</td><td align="center" colspan="2">ex. align. length</td></tr><tr><td align="left">name</td><td align="left">size</td><td align="left">name</td><td align="left">size</td><td align="right">Y.</td><td align="right">B.</td><td align="right">Y.</td><td align="right">B.</td><td align="right">Y.</td><td align="right">B.</td><td align="right">Y.</td><td align="right">B.</td></tr></thead><tbody><tr><td align="left"><italic>S.sp.</italic></td><td align="left">3.6</td><td align="left"><italic>M.t.</italic></td><td align="left">4.4</td><td align="right">122</td><td align="right">148</td><td align="right">494</td><td align="right">310</td><td align="right">130</td><td align="right">27</td><td align="right">29145</td><td align="right">7970</td></tr><tr><td align="left"><italic>S.sp.</italic></td><td align="left">3.6</td><td align="left"><italic>C.g.</italic></td><td align="left">3.3</td><td align="right">161</td><td align="right">163</td><td align="right">578</td><td align="right">369</td><td align="right">168</td><td align="right">63</td><td align="right">37310</td><td align="right">30138</td></tr><tr><td align="left"><italic>S.sp.</italic></td><td align="left">3.6</td><td align="left"><italic>Y.p.</italic></td><td align="left">4.6</td><td align="right">156</td><td align="right">253</td><td align="right">901</td><td align="right">617</td><td align="right">186</td><td align="right">54</td><td align="right">39354</td><td align="right">19994</td></tr><tr><td align="left"><italic>S.sp.</italic></td><td align="left">3.6</td><td align="left"><italic>V.p.</italic></td><td align="left">3.3</td><td align="right">164</td><td align="right">167</td><td align="right">940</td><td align="right">465</td><td align="right">349</td><td align="right">60</td><td align="right">65788</td><td align="right">28883</td></tr><tr><td align="left"><italic>M.t.</italic></td><td align="left">4.4</td><td align="left"><italic>C.g.</italic></td><td align="left">3.3</td><td align="right">211</td><td align="right">542</td><td align="right">1851</td><td align="right">1265</td><td align="right">397</td><td align="right">160</td><td align="right">102103</td><td align="right">80012</td></tr><tr><td align="left"><italic>M.t.</italic></td><td align="left">4.4</td><td align="left"><italic>Y.p.</italic></td><td align="left">4.6</td><td align="right">168</td><td align="right">255</td><td align="right">738</td><td align="right">515</td><td align="right">197</td><td align="right">86</td><td align="right">44348</td><td align="right">23361</td></tr><tr><td align="left"><italic>M.t.</italic></td><td align="left">4.4</td><td align="left"><italic>V.p.</italic></td><td align="left">3.3</td><td align="right">72</td><td align="right">69</td><td align="right">498</td><td align="right">295</td><td align="right">171</td><td align="right">30</td><td align="right">36474</td><td align="right">12021</td></tr><tr><td align="left"><italic>C.g.</italic></td><td align="left">3.3</td><td align="left"><italic>Y.p.</italic></td><td align="left">4.6</td><td align="right">130</td><td align="right">161</td><td align="right">962</td><td align="right">640</td><td align="right">186</td><td align="right">45</td><td align="right">34538</td><td align="right">11277</td></tr><tr><td align="left"><italic>C.g.</italic></td><td align="left">3.3</td><td align="left"><italic>V.p.</italic></td><td align="left">3.3</td><td align="right">95</td><td align="right">93</td><td align="right">1109</td><td align="right">687</td><td align="right">197</td><td align="right">72</td><td align="right">42009</td><td align="right">21575</td></tr><tr><td align="left"><italic>Y.p.</italic></td><td align="left">4.6</td><td align="left"><italic>V.p.</italic></td><td align="left">3.3</td><td align="right">149</td><td align="right">217</td><td align="right">2900</td><td align="right">1953</td><td align="right">622</td><td align="right">264</td><td align="right">186585</td><td align="right">110352</td></tr></tbody></table><table-wrap-foot><p><italic>C.g</italic>: <italic>Corynebacterium glutamicum ATCC 13032</italic>,</p><p><italic>M.t</italic>: <italic>Mycobacterium tuberculosis (CDC1551)</italic>,</p><p><italic>S.sp.</italic>: <italic>Synechocystis sp. PCC 6803</italic>,</p><p><italic>S.sp.</italic>: <italic>Vibrio parahaemolyticus RIMD 2210633 chr I</italic>,</p><p><italic>Y.p.</italic>: <italic>Yersinia pestis KIM</italic></p></table-wrap-foot></table-wrap></sec></back></article>



