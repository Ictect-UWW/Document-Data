<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15511292</article-id><article-id pub-id-type="pmc">PMC534098</article-id><article-id pub-id-type="publisher-id">1471-2105-5-170</article-id><article-id pub-id-type="doi">10.1186/1471-2105-5-170</article-id><article-categories><subj-group subj-group-type="heading"><subject>Research Article</subject></subj-group></article-categories><title-group><article-title>PhyME: A probabilistic algorithm for finding motifs in sets of orthologous sequences</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Sinha</surname><given-names>Saurabh</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>saurabh@lonnrot.rockefeller.edu</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Blanchette</surname><given-names>Mathieu</given-names></name><xref ref-type="aff" rid="I2">2</xref><email>blanchem@mcb.mcgill.ca</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Tompa</surname><given-names>Martin</given-names></name><xref ref-type="aff" rid="I3">3</xref><email>tompa@cs.washington.edu</email></contrib></contrib-group><aff id="I1"><label>1</label>Center for Studies in Physics and Biology, The Rockefeller University, New York, NY 10021, USA</aff><aff id="I2"><label>2</label>School of Computer Science, McGill University, 3480 University Street, Montreal, QC, H3A 2A7, CANADA</aff><aff id="I3"><label>3</label>Department of Computer Science and Engineering, University of Washington, Seattle, WA 98195-2350, USA</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>28</day><month>10</month><year>2004</year></pub-date><volume>5</volume><fpage>170</fpage><lpage>170</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/5/170"/><history><date date-type="received"><day>6</day><month>5</month><year>2004</year></date><date date-type="accepted"><day>28</day><month>10</month><year>2004</year></date></history><copyright-statement>Copyright &#x000a9; 2004 Sinha et al; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>This paper addresses the problem of discovering transcription factor binding sites in <italic>heterogeneous </italic>sequence data, which includes regulatory sequences of one or more genes, as well as their orthologs in other species.</p></sec><sec><title>Results</title><p>We propose an algorithm that integrates two important aspects of a motif's significance &#x02013; <italic>overrepresentation </italic>and <italic>cross-species conservation </italic>&#x02013; into one probabilistic score. The algorithm allows the input orthologous sequences to be related by any user-specified phylogenetic tree. It is based on the Expectation-Maximization technique, and scales well with the number of species and the length of input sequences. We evaluate the algorithm on synthetic data, and also present results for data sets from yeast, fly, and human.</p></sec><sec><title>Conclusions</title><p>The results demonstrate that the new approach improves motif discovery by exploiting multiple species information.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>The discovery of novel transcription factor binding sites in regulatory sequences of genes has been an important scientific challenge for some years now. Computational approaches to this problem have come in two flavors. One class of methods looks for overrepresented motifs in sequences that are believed to contain several binding sites for the same factor (such as promoters of co-regulated genes) [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B6">6</xref>]. The second class of methods identifies motifs that are significantly conserved in orthologous sequences, e.g., promoters of the same gene in different species [<xref ref-type="bibr" rid="B7">7</xref>,<xref ref-type="bibr" rid="B8">8</xref>]. These two approaches have been applied to their respective kinds of data sets, with moderate success. However, with new genomes being sequenced regularly, motif-finding applications today often present <italic>heterogeneous </italic>sequence data that includes promoters/enhancers of multiple co-regulated genes in one species, as well as their orthologs in other species. This paper presents a probabilistic algorithm, called "PhyME" (<bold>Phy</bold>logenetic <bold>M</bold>otif <bold>E</bold>licitation), for <italic>ab-initio </italic>detection of binding site motifs in such heterogeneous sequences.</p><p>PhyME integrates two different axes of information in evaluating a candidate motif's significance. One axis is that of <italic>overrepresentation</italic>, which depends on the number of occurrences of the motif in each species. The other axis is the level of <italic>conservation </italic>of each motif instance across the species. A real motif that is not sufficiently significant along any one axis may turn out to be significant when both axes are considered simultaneously, leading to increased sensitivity and specificity of the integrated approach. Given the regulatory regions of potentially co-regulated genes along with their orthologs from other species, PhyME uses an Expectation-Maximization (E-M) algorithm to search for the motif that best explains the data. When evaluating a motif, its orthologous occurrences are assumed related to each other by a probabilistic model of evolution that takes into account the varying phylogenetic distances among the species. (The species may be related by any user-specified phylogenetic tree.) Each E-M iteration scales linearly with the total length of the input sequences and also with the number of species. The algorithm can also handle cases where the heterogeneous data is <italic>incomplete</italic>, i.e., where the orthologous regulatory regions are missing from some species. This capability makes it particularly suitable for applications that include data from incomplete genomes, or where orthology information is incomplete.</p><p>An important feature of PhyME is that it allows motifs to occur in (evolutionarily) conserved as well as unconserved regions in orthologous promoters, treating the two kinds of occurrences differently when scoring a motif. It does not require each binding site occurrence in one promoter to have an orthologous occurrence in any or all other species. As a result, PhyME affords some flexibility in terms of the evolutionary distances spanned by the input sequences. For instance, using a distantly related ortholog will help pinpoint motifs located in conserved regions but will not hamper the discovery of motifs absent from that ortholog.</p><sec><title>Comparison with previous work</title><p>Traditionally, motif finding algorithms have treated input sequences as being independently generated, and searched for statistically overrepresented motifs in them. These algorithms [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B6">6</xref>] do not have the notion of sequence orthology built into them, and are therefore typically run on sequences from the same species. PhyME has an obvious advantage over them, since it takes motif conservation into account. (Henceforth, <italic>conservation </italic>of motifs will be assumed to mean conservation across species.)</p><p>Another class of motif-finding methods take as input sets of orthologous sequences, either aligned [<xref ref-type="bibr" rid="B8">8</xref>] or unaligned [<xref ref-type="bibr" rid="B7">7</xref>] and search for well-conserved motifs. These methods however, unlike PhyME, do not exploit the other important aspect of a motif's significance &#x02013; that of overrepresentation.</p><p>Some algorithms [<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B10">10</xref>] take as input a heterogeneous pool of co-regulated and orthologous promoters, and find overrepresented motifs after treating all sequences (including orthologous ones) as independent. However, this "homogenizing" strategy has its disadvantage, since it treats orthologous (and hence, directly related) motif occurrences as statistically independent observations. PhyME, on the other hand, respects the distinction between orthologous and co-regulated motif occurrences.</p><p>There are algorithms that attempt to handle the two axes of information by a two-step approach. For instance, Cliften <italic>et al</italic>. [<xref ref-type="bibr" rid="B11">11</xref>] and Kellis <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>] find a set of highly conserved motifs (in yeast promoters) in the first step, and then extract overrepresented ones from this set, in a second step. The algorithm CompareProspector [<xref ref-type="bibr" rid="B13">13</xref>] takes a Gibbs-sampling approach to find overrepresented motifs but biases the search in regions conserved across species. Conversely, one may identify overrepresented motifs in the first step, and then isolate evolutionarily conserved ones among these [<xref ref-type="bibr" rid="B14">14</xref>]. In either case, a motif that is relatively weak by either criterion alone, but strong when considering both, may be missed out. PhyME's integrated approach to the heterogeneous data problem addresses this issue. Admittedly, the methods of Cliften <italic>et al</italic>. and Kellis <italic>et al</italic>. have a broader range of applications, since these are genome-wide searches for motifs.</p><p>A recent algorithm called orthoMEME (Prakash <italic>et al</italic>. [<xref ref-type="bibr" rid="B15">15</xref>]) tackles the heterogeneous data problem by using Expectation-Maximization to search the space of motifs and the space of motif alignments (orthology) simultaneously. Each motif occurrence is assumed to have an orthologous copy in the other species, that could be located anywhere in the corresponding promoter. This is in contrast to PhyME's approach, where orthologous motif occurrences are restricted to pre-aligned regions of the promoters. This restriction comes with the advantage that PhyME scales better with the number of species than does orthoMEME. This is a significant advantage in practice, since the orthoMEME implementation is able to handle only two species data, whereas we have experimented with PhyME on orthologs from up to six species. Moreover, PhyME also allows non-conserved occurrences (those residing outside aligned regions), or occurrences that are conserved in some species and missing in others. Requiring that all motif occurrences come in orthologous sets may be justified for very closely related species, but for more diverged pairs of species (e.g., <italic>D. melanogaster </italic>and <italic>D. pseudoobscura</italic>) the promoters are known to have a mix of conserved and unconserved binding sites [<xref ref-type="bibr" rid="B16">16</xref>]. PhyME therefore gains an advantage by looking at both kinds of occurrences. However, orthoMEME's phylogenetic model is more powerful than that of PhyME and can handle a greater range of motif variation than PhyME can.</p><p>Our approach is most similar to the algorithm PhyloGibbs (Siddharthan <italic>et al</italic>. [<xref ref-type="bibr" rid="B17">17</xref>]), the main differences being that PhyloGibbs (i) uses a Gibbs-sampling approach and (ii) assumes a star topology for the phylogeny, whereas PhyME uses an E-M approach and can handle arbitrary tree topologies. Thus PhyME has a broader domain of applicability in terms of the phylogenetic relationships among input sequences. It may therefore be preferable over PhyloGibbs when the phylogeny is far removed from a star, e.g., in a scenario where a pair of close species is included along with another pair of closely-related species, but the two pairs are greatly diverged from each other. On the other hand, an advantage of using PhyloGibbs is that multiple motifs (for different transcription factors) may be searched in parallel.</p><p>The algorithm EMnEM (Moses <italic>et al</italic>. [<xref ref-type="bibr" rid="B18">18</xref>]) uses E-M and a phylogenetic model to find motifs, much like PhyME does, except that the former assumes that the input sequences are completely aligned. This assumption may be unsuitable for species at relatively large evolutionary distances, e.g., human and mouse, or <italic>D. melanogaster </italic>and <italic>D. pseudoobscura</italic>. Therefore, PhyME can handle a broader range of species divergence in its input. Another important difference between EMnEM and PhyME is the probabilistic model that each uses to model evolution. While EMnEM is implemented to use the Jukes-Cantor model [<xref ref-type="bibr" rid="B19">19</xref>], PhyME uses a more realistic model that incorporates binding site specificities. Thus, in calculating the joint likelihood of aligned motif occurrences, the EMnEM implementation does not use the fact that the effective mutation probability of an ancestral base to some base <italic>&#x003b2; </italic>depends on the fitness of a binding site with <italic>&#x003b2; </italic>at that position. The evolutionary model used in PhyME reflects this dependence, and the incorporation of the model into an Expectation-Maximization framework is one of the main technical contributions of our work. The Results section includes a preliminary comparison of PhyME's performance with that of EMnEM, orthoMEME and PhyloGibbs, on real data.</p><p>The algorithm PhyloCon (Wang and Stormo [<xref ref-type="bibr" rid="B20">20</xref>]) extends the greedy algorithm of CONSENSUS (Hertz <italic>et al</italic>. [<xref ref-type="bibr" rid="B2">2</xref>]) to incorporate multiple species data. However, it treats all orthologous sequences uniformly, ignoring the fact that different species may be at different relative distances from each other. As such, it may be more suitable to use PhyME in cases where the phylogeny is far removed from a star topology of uniform branch length. Also, the PhyloCon algorithm proceeds by first identifying several local multiple alignments in orthologous sequences and then searching for common patterns (motifs) among these multiple alignments. As a result, it may miss motif occurrences that are not well-conserved (or are completely missing) in orthologous sequences. An advantage of PhyloCon is that it does not require the motif length to be input, and instead reports motifs of varying lengths.</p></sec></sec><sec><title>Results</title><p>In this section, we first present the new algorithm, and then describe its evaluation on synthetic data, as well as biological data sets from various organisms.</p><sec><title>Algorithm</title><p>Suppose that the input includes <italic>n </italic>different promoters (e.g., from co-regulated genes), and for each promoter there are sequences for <italic>K </italic>species. (<italic>K </italic>may be different for different promoters.) PhyME requires that there be one designated "reference species" <italic>&#x003c3;</italic><sub><italic>r </italic></sub>in the input, for which there is sequence data corresponding to each of the <italic>n </italic>promoters. We shall describe PhyME's algorithm for the special case <italic>n </italic>= 1, though allowing multiple motif instances in this one sequence. The extension to <italic>n </italic>&#x0003e; 1 is trivial, and omitted here for simplicity. Thus, the input consists of a set of sequences <italic>S </italic>= {<italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2 </sub>,..., <italic>S</italic><sub><italic>K</italic></sub>}, where <italic>S</italic><sub><italic>i </italic></sub>is the orthologous sequence from species <italic>i</italic>, and one of the <italic>S</italic><sub><italic>i</italic></sub>'s comes from species <italic>&#x003c3;</italic><sub><italic>r</italic></sub>. The input also includes the motif length <italic>l</italic>, and the phylogenetic tree &#x003a8; over the <italic>K </italic>species, with neutral point mutation rates (probabilities) along each branch. The output is a position weight matrix (PWM) representing the discovered motif, and its score.</p><p>PhyME first partially aligns the input sequences and identifies contiguous regions ("blocks") in each <inline-graphic xlink:href="1471-2105-5-170-i1.gif"/> that are highly conserved in <inline-graphic xlink:href="1471-2105-5-170-i2.gif"/>. It then inputs all the sequences, along with the locations of the conserved blocks, to the core motif-finding algorithm.</p><sec><title>Alignment of sequences</title><p>In this pre-processing step, PhyME computes the regions of high local similarity between <inline-graphic xlink:href="1471-2105-5-170-i2.gif"/> and each of the other <italic>S</italic><sub><italic>i</italic></sub>. The assumption is that such regions are of common evolutionary origin, and any sequence outside them is independently evolved. PhyME runs the LAGAN alignment program of Brudno <italic>et al</italic>. [<xref ref-type="bibr" rid="B21">21</xref>] on each sequence pair (<inline-graphic xlink:href="1471-2105-5-170-i2.gif"/>, <italic>S</italic><sub><italic>i</italic></sub>|<italic>i </italic>&#x02260; <italic>&#x003c3;</italic><sub><italic>r</italic></sub>), and extracts all ungapped aligned blocks of a certain minimum size (of the order of the motif's length) and percent identity, to serve as the blocks of common origin. This is illustrated in Figure <xref ref-type="fig" rid="F1">1a</xref>, which shows orthologous promoters from three species, <italic>&#x003c3;</italic><sub>1 </sub>(the reference species), <italic>&#x003c3;</italic><sub>2 </sub>and <italic>&#x003c3;</italic><sub>3</sub>. An example of a block is region BC in <italic>&#x003c3;</italic><sub>1</sub>, aligned with region UV in <italic>&#x003c3;</italic><sub>3</sub>. Note how blocks can overlap in the reference species (BC overlaps with KL).</p><p>The input is now reorganized into two kinds of sequences:</p><p>1. The sequence from the reference species, with aligned blocks of the other species "hanging off" it. (In Figure <xref ref-type="fig" rid="F1">1b</xref>, this is shown as the sequence AJ, with blocks MN, OP, QR of <italic>&#x003c3;</italic><sub>2 </sub>and blocks UV, WX of <italic>&#x003c3;</italic><sub>3 </sub>aligned with corresponding blocks in <italic>&#x003c3;</italic><sub>1</sub>.) Thus, any position in this sequence either has a single base from the reference species, or has an alignment of bases from multiple species, one of which is the reference species. This entire construct is called the "reference sequence".</p><p>2. Any subsequence not from the reference species, and bracketed by blocks on both sides. (e.g., regions NO, PQ, VW in Figure <xref ref-type="fig" rid="F1">1b</xref>.) The terminal sequences in the non-reference species, which are to the left of the left-most block and to the right of the right-most block, may be optionally included, as per the user's specification.</p><p>PhyME fits the parameters of a probabilistic model on the reference and bracketed sequences simultaneously, and the desired motif comes out as a by-product of this training procedure, which is described next.</p></sec><sec><title>Hidden Markov Model</title><p>The probabilistic process that is assumed to generate sequences is described by a very simple <italic>Hidden Markov Model </italic>(HMM). For the moment, let us assume that the sequence <italic>S </italic>being generated is entirely from one species, with no aligned positions. The HMM parameters include a "motif weight matrix" <italic>W</italic><sub><italic>m </italic></sub>of length <italic>l</italic>, and a "background weight matrix" <italic>W</italic><sub><italic>b </italic></sub>of length 1. (The (<italic>k, j</italic>)<sup><italic>th </italic></sup>entry of a weight matrix is the probability of emitting the base <italic>j </italic>at position <italic>k </italic>of the sequence being sampled from the matrix.) At each step, the generative process of the HMM chooses either <italic>W</italic><sub><italic>m </italic></sub>or <italic>W</italic><sub><italic>b </italic></sub>according to their <italic>transition probabilities </italic><italic>p</italic><sub><italic>m </italic></sub>= <italic>p </italic>and <italic>p</italic><sub><italic>b </italic></sub>= 1 - <italic>p </italic>respectively, where <italic>p </italic>is a model parameter. A sequence is then sampled from the chosen weight matrix, and appended at the end of the sequence <italic>S </italic>created so far. The process then proceeds to the next step. It stops when the length of <italic>S </italic>reaches its known length <italic>L</italic>. The series of motifs chosen in the successive steps of the process is called a "parse" of the sequence. The model parameters <italic>&#x003b8;</italic>, which include <italic>W</italic><sub><italic>m</italic></sub>, <italic>W</italic><sub><italic>b</italic></sub>, and <italic>p</italic>, associate a well-defined probability <italic>Pr</italic>(<italic>S</italic>, <italic>T</italic>|<italic>&#x003b8;</italic>) with each parse <italic>T </italic>of the sequence <italic>S</italic>. The probability that <italic>S </italic>was generated by an HMM with parameters <italic>&#x003b8; </italic>is then given by <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>) = &#x003a3;<sub><italic>T</italic></sub><italic>Pr</italic>(<italic>S</italic>, <italic>T</italic>|<italic>&#x003b8;</italic>). Let <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic><sub><italic>b</italic></sub>) be the probability of generating <italic>S </italic>by using only <italic>W</italic><sub><italic>b</italic></sub>. For a given <italic>&#x003b8;</italic>, we define</p><p><inline-graphic xlink:href="1471-2105-5-170-i3.gif"/></p><p>This log-likelihood ratio is the function optimized by PhyME &#x02013; the parameters <italic>W</italic><sub><italic>m </italic></sub>and <italic>p </italic>are trained so as to maximize <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>). (The background weight matrix <italic>W</italic><sub><italic>b </italic></sub>is not trained during this maximization, rather it is pre-computed from <italic>S</italic>, or optionally from specified background sequence, by measuring nucleotide frequencies.) The value of the objective function for a set of independent sequences is the sum of its values for the sequences taken separately. This additive property allows easy extension of the parameter training procedure to the general case of multiple sequences (<italic>n </italic>&#x0003e; 1). The objective function maximized then is <inline-graphic xlink:href="1471-2105-5-170-i4.gif"/>, the set <italic>S </italic>now including, for each of the <italic>n </italic>input promoters, the "reference sequence" as well as all "bracketed sequences" (defined earlier) as separate elements.</p><p>An important aspect of computing <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>) is the <italic>subsequence probability </italic><italic>Pr</italic>(<italic>s</italic>|<italic>W</italic>). This is the probability of generating a subsequence <italic>s </italic>of length <italic>l</italic>, (length of <italic>W</italic>), when sampling from weight matrix <italic>W</italic>; so <inline-graphic xlink:href="1471-2105-5-170-i5.gif"/>, where <italic>s </italic>= <italic>s</italic><sub>1</sub><italic>s</italic><sub>2 </sub>... <italic>s</italic><sub><italic>l</italic></sub>, and <italic>W</italic><sub><italic>kj </italic></sub>is the probability of sampling base <italic>j </italic>at the <italic>k</italic><sup><italic>th </italic></sup>position of <italic>W</italic>. This formula applies when subsequence <italic>s </italic>has a single base at each position. However, we need to adapt this formula to the case where one or more positions in subsequence <italic>s </italic>may be an alignment of orthologous bases from multiple species. In this general case, we can write <italic>s </italic>as <italic>&#x003c8;</italic><sub>1</sub><italic>&#x003c8;</italic><sub>2 </sub>... <italic>&#x003c8;</italic><sub><italic>l</italic></sub>, where each <italic>&#x003c8;</italic><sub><italic>k </italic></sub>is either a single base, or an alignment of orthologous bases at a single position of the reference sequence. The subsequence probability <italic>Pr</italic>(<italic>s</italic>|<italic>W</italic>) can then be computed as <inline-graphic xlink:href="1471-2105-5-170-i6.gif"/>, where <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>) denotes the probability of observing <italic>&#x003c8; </italic>at position <italic>k </italic>when sampling from <italic>W</italic>. Let the vector <italic>&#x003c8; </italic>= (<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>2</sub>, ... <italic>s</italic><sub><italic>K</italic></sub>), where <italic>s</italic><sub><italic>&#x003c3; </italic></sub>is the nucleotide from species <italic>&#x003c3; </italic>in the single-base alignment <italic>&#x003c8;</italic>. If the <italic>s</italic><sub><italic>&#x003c3; </italic></sub>were <italic>independent</italic>, we could write <inline-graphic xlink:href="1471-2105-5-170-i7.gif"/>. However, the <italic>s</italic><sub><italic>&#x003c3;</italic></sub>'s occur in an alignment (<italic>&#x003c8;</italic>), meaning that this assumption of independence is obviously untenable. Thus we need an expression for <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>) that explicitly takes the phylogenetic relationships among the species (given by the phylogenetic tree &#x003a8;) into account. We present such an expression in the next section, and we shall thereafter return to the topic of maximizing the function <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>).</p></sec><sec><title>Evolutionary model</title><p>This section describes the probabilistic evolutionary model that PhyME uses to incorporate phylogenetic relationships in the computation of the term <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>) mentioned above. It was first proposed in Sinha <italic>et al</italic>. [<xref ref-type="bibr" rid="B22">22</xref>] to model binding site evolution, and applied successfully on the two fly genomes. The model makes the crucial assumption that all positions in a binding site evolve independently, at equal rates, and the probability of fixation of a mutation <italic>&#x003b1; </italic>&#x02192; <italic>&#x003b2; </italic>at position <italic>k </italic>is proportional to the weight matrix entry of <italic>&#x003b2; </italic>at that position. If we further assume, for simplicity of exposition, that the phylogenetic tree &#x003a8; has a star topology, then the model assumptions give us (from Sinha <italic>et al</italic>. [<xref ref-type="bibr" rid="B22">22</xref>]; also see Methods.)</p><p><inline-graphic xlink:href="1471-2105-5-170-i8.gif"/></p><p>where <italic>s</italic><sub><italic>&#x003c3; </italic></sub>is the nucleotide from species <italic>&#x003c3; </italic>in alignment <italic>&#x003c8;</italic>, <italic>&#x003b4;</italic><sub><italic>xy </italic></sub>= 1 if <italic>x </italic>= <italic>y </italic>and 0 otherwise, and <italic>&#x003bc;</italic><sub><italic>&#x003c3; </italic></sub>is the neutral mutation probability between the ancestor and the species <italic>&#x003c3;</italic>. For the position <italic>k</italic>, one "creates" a base <italic>&#x003b1; </italic>in the ancestor with frequency <italic>W</italic><sub><italic>k</italic><italic>&#x003c3;</italic></sub>, and each such base is either passed unchanged to the species <italic>&#x003c3; </italic>(probability 1 - <italic>&#x003bc;</italic><sub><italic>&#x003c3;</italic></sub>) or mutated in species <italic>&#x003c3; </italic>with probability <italic>&#x003bc;</italic><sub><italic>&#x003c3; </italic></sub>and a new base selected with a frequency defined again by <italic>W</italic>.</p><p>In the general case, when &#x003a8; does not have a star topology, Formula (1) can be written in a recursive manner. (See Methods.)</p></sec><sec><title>Expectation Maximization</title><p>The function <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>) that is maximized by PhyME measures how much more likely it is that <italic>S </italic>was generated using the motif weight matrix, than without it. Naturally, a PWM that maximizes this score is the motif that best explains the data. PhyME tries to find such a motif by training the parameters (<italic>W</italic><sub><italic>m</italic></sub>, <italic>p</italic>) of the HMM, using the Baum-Welch algorithm [<xref ref-type="bibr" rid="B23">23</xref>], which iteratively converges to a locally optimum <italic>&#x003b8; </italic>using Expectation Maximization (E-M).</p><p>Let <inline-graphic xlink:href="1471-2105-5-170-i9.gif"/>, for <italic>i </italic>&#x02208; {<italic>m</italic>, <italic>b</italic>} be the expected number of times the HMM plants motif <italic>W</italic><sub><italic>i </italic></sub>in generating the sequence(s), the expectation being over all parses. Similarly, let <inline-graphic xlink:href="1471-2105-5-170-i10.gif"/> be the expected number of times that the nucleotide alignment <italic>&#x003c8; </italic>is sampled at the <italic>k</italic><sup><italic>th </italic></sup>position of the motif <italic>W</italic><sub><italic>m</italic></sub>. <inline-graphic xlink:href="1471-2105-5-170-i9.gif"/> and <inline-graphic xlink:href="1471-2105-5-170-i10.gif"/> are expected values of <italic>hidden variables </italic>of the HMM. These averages are computed during the "E-step" in each iteration, using dynamic programming (the Forward-Backward algorithm, [<xref ref-type="bibr" rid="B23">23</xref>]).</p><p>In the "M-step", two kinds of updates are made, using the values of <inline-graphic xlink:href="1471-2105-5-170-i9.gif"/>, <inline-graphic xlink:href="1471-2105-5-170-i10.gif"/> computed in the E-step. The parameter <italic>p </italic>is updated according to <inline-graphic xlink:href="1471-2105-5-170-i11.gif"/>. The motif weight matrix <italic>W</italic><sub><italic>m </italic></sub>is updated by solving, for each column <italic>k </italic>of the matrix, the following set of five simultaneous equations, in variables <italic>u</italic><sub><italic>&#x003b2; </italic></sub>(<italic>&#x003b2; </italic>&#x02208; &#x003a3;) and <italic>&#x003bb;</italic>.</p><p><inline-graphic xlink:href="1471-2105-5-170-i12.gif"/></p><p><inline-graphic xlink:href="1471-2105-5-170-i13.gif"/></p><p>The derivation of the update formulas is somewhat involved, and is described in the Methods section. The equations are solved using Newton's method, and the solution value of <italic>u</italic><sub><italic>&#x003b2; </italic></sub>is used to update the (<italic>k</italic>, <italic>&#x003b2;</italic>)<sup><italic>th </italic></sup>entry of <italic>W</italic><sub><italic>m</italic></sub>, according to <italic>W</italic><sub><italic>mk&#x003b2; </italic></sub>= <italic>e</italic><sup><italic>u&#x003b2;</italic></sup>. Newton's method involves computation of the first and second partial derivatives of log <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic>, <italic>k</italic></sub>), as described in Methods. In practice, we found that Newton's method always converges from a single initial condition, and the convergence almost always happens within 3&#x02013;5 iterations.</p><p>The time complexity of (each E-M iteration in) PhyME is O(<italic>LKl</italic>), where <italic>L </italic>is the length of the sequences, <italic>K </italic>is the number of species, and <italic>l </italic>is the length of the motif desired. (See Methods for details.)</p></sec></sec><sec><title>Results on synthetic data</title><p>We first present the results of running PhyME on synthetic data. The experimental framework is largely borrowed from Wang and Stormo [<xref ref-type="bibr" rid="B20">20</xref>]. In each experiment, 5 "ancestral" sequences, each of length 600 bp, are created at random, and 20 "binding sites", each of length 8, are "planted" at randomly chosen locations in these sequences. The sites are chosen such that the weight matrix formed by them has a relative entropy of <italic>R</italic>. Each ancestral sequence is then "evolved" by point mutations to create <italic>K </italic>additional "orthologous" copies, assuming a star topology (with <italic>K </italic>leaves) and a common "background mutation rate" <italic>&#x003bc;</italic><sub><italic>b </italic></sub>along each branch. (No insertions or deletions were included in this simulated evolution, for simplicity.) The motif instances are subjected to a common "motif mutation rate" <italic>&#x003bc;</italic><sub><italic>m </italic></sub>, which is the probability of mutation of any position in a motif. The ancestral set of sequences is then removed and the remaining <italic>K </italic>orthologous sets are input to the motif discovery algorithm, with one arbitrarily designated the reference species. The algorithm is made to report 3 different motifs, thereby making some allowance for false positives, especially when <italic>R </italic>is low. For each reported motif, its 20 best occurrences in the reference species are compared with the planted occurrences, to give a score ranging between 0 and 1. (1 represents the best possible performance; see the Methods section for details.) The score for the best of the 3 reported motifs is the "performance score" of the algorithm. The three algorithms being compared are PhyME, MEME [<xref ref-type="bibr" rid="B1">1</xref>], and GIBBS (Wadsworth Gibbs sampler) [<xref ref-type="bibr" rid="B24">24</xref>]. PhyME was run with an evolutionary tree with a star topology, the mutation rate along each branch being <italic>&#x003bc;</italic><sub><italic>b</italic></sub>. MEME and GIBBS were run on the entire data set pooled together, ignoring the orthology of sequences.</p><p>Figure <xref ref-type="fig" rid="F2">2</xref> shows the effect of varying <italic>K </italic>on performance scores of the algorithms. Note that the performance of PhyME, while similar to MEME and GIBBS for <italic>K </italic>= 1, improves relative to them as <italic>K </italic>increases. The absolute performance score of GIBBS (and of MEME, to some extent) deteriorates with increasing <italic>K</italic>. With more orthologous sequences, conserved stretches of background sequence may distract the algorithm from the motif occurrences. PhyME, with the additional knowledge of orthology, is able to pick out the motif better.</p><p>Figure <xref ref-type="fig" rid="F3">3</xref> shows the effect of varying the mutation rates. The background mutation rate <italic>&#x003bc;</italic><sub><italic>b </italic></sub>was varied from 0.2 to 0.5 and the motif mutation rate <italic>&#x003bc;</italic><sub><italic>m </italic></sub>was varied between 0.1 and <italic>&#x003bc;</italic><sub><italic>b </italic></sub>- 0.1). As per expectation, the performance of each algorithm improved with decreasing <italic>&#x003bc;</italic><sub><italic>m </italic></sub>(for a fixed <italic>&#x003bc;</italic><sub><italic>b</italic></sub>). Interestingly, as <italic>&#x003bc;</italic><sub><italic>b </italic></sub>decreases, the performance of PhyME for <italic>&#x003bc;</italic><sub><italic>m </italic></sub>= 0.1 first improves and then falls down. The initial improvement is because the alignment step is able to find more conserved blocks with diminishing background mutation rate. However, when the latter approaches the motif mutation rate, the distinction (in cross-species conservation) between motif and background becomes weaker, hence performance goes down. In another set of experiments, we examined the effect of the alignment step on the performance. Sequences were created with <italic>K </italic>= 2, <italic>&#x003bc;</italic><sub><italic>b </italic></sub>= 0.3, <italic>&#x003bc;</italic><sub><italic>m </italic></sub>= 0.1 and <italic>R </italic>= 12. After the alignment step of PhyME (in which the entire sequence was aligned as one conserved block), we artificially "unpaired" some number <italic>n </italic>of the planted orthologous motif occurrences, i.e., the alignment was modified so that these <italic>n </italic>pairs fell outside conserved blocks. This was followed by the usual motif-finding step, and the entire procedure was repeated for various values of <italic>n</italic>. We find a gradual degradation in performance as PhyME moves from maximum utilization of motif orthology (<italic>n </italic>= 0, no unpaired motifs) to minimum (<italic>n </italic>= 20, no motif pairs considered orthologous). (Figure <xref ref-type="fig" rid="F4">4</xref>.)</p><p>We also evaluated the effect of mis-estimates of the neutral mutation rates on performance. PhyME was run on random sequences created with experiment parameters <italic>K </italic>= 3, <italic>&#x003bc;</italic><sub><italic>b </italic></sub>= 0.3, <italic>&#x003bc;</italic><sub><italic>m </italic></sub>= 0.1 and <italic>R </italic>&#x02208; {11, 12, 13}, and in different runs, the value of <italic>&#x003bc;</italic><sub><italic>b </italic></sub>input to PhyME ranged from 0.1 (underestimate) to 0.5 (overestimate). We observed that underestimates of <italic>&#x003bc;</italic><sub><italic>b </italic></sub>resulted in significantly greater performance degradation than overestimates of equal magnitude. (Data not shown.) For instance, using <italic>&#x003bc;</italic><sub><italic>b </italic></sub>= 0.4 instead of the true value of 0.3 made no difference to the performance, whereas using <italic>&#x003bc;</italic><sub><italic>b </italic></sub>= 0.2 resulted in 15 &#x02013; 50% decline.</p></sec><sec><title>Results on biological data</title><p>In the following sections, we present results of running PhyME on real data sets from yeast, fly and human. The results are compared to MEME (run by pooling orthologous sequences together), orthoMEME [<xref ref-type="bibr" rid="B15">15</xref>], PhyloGibbs [<xref ref-type="bibr" rid="B17">17</xref>], and EMnEM [<xref ref-type="bibr" rid="B18">18</xref>]. The latter three programs address the heterogeneous data problem directly, just as PhyME does. Another program that solves the same problem is PhyloCon [<xref ref-type="bibr" rid="B20">20</xref>]. PhyloCon was not evaluated in our study because we did not have a clear method to post-process its output to extract a specified number of top-scoring motifs that are non-redundant. (Our evaluations described below use the top three motifs reported by each program.)</p><sec><title>Yeast data sets</title><p>We first present some examples in yeast, where sequence data from four species, <italic>S. cerevisiae</italic>, <italic>S. mikatae</italic>, <italic>S. kudriavzevii </italic>and <italic>S. bayanus </italic>was used. We performed motif-finding (with PhyME, MEME, orthoMEME, PhyloGibbs and EMnEM) on some regulons from the SCPD [<xref ref-type="bibr" rid="B25">25</xref>] database, which catalogues sets of co-regulated genes. For each regulon, the top <italic>&#x003b7; </italic>motif occurrences in <italic>S. cerevisiae </italic>reported by the algorithm (<italic>&#x003b7; </italic>being the number of known sites in <italic>S. cerevisiae</italic>) were examined for "matches" to the known weight matrix for that regulon's motif. (See Methods for details.) The number of matches was the performance score of the algorithm. We counted matches to the weight matrix, rather than to known sites, so that a reported motif occurrence that is very similar to the known motif (but not annotated as a site by SCPD) will not be counted as a false positive. Each algorithm reported 3 motifs (with <italic>&#x003b7; </italic>occurrences for each motif), and the results are for the best scoring motif, thereby making some allowance for false positives, such as simple repeats. Even though PhyME is implemented to handle arbitrary phylogenies, for efficiency it was run with a phylogenetic tree with a star topology, having <italic>S. cerevisiae </italic>at the center and the mutation rate along the branches of <italic>S. mikatae</italic>, <italic>S. kudriavzevii</italic>, and <italic>S. bayanus </italic>being (0.25, 0.3, 0.35) respectively. These values are based on average substitution rate per base in the corresponding pairs of species. (A more accurate tree can be derived from the work of Kellis <italic>et al</italic>. [<xref ref-type="bibr" rid="B12">12</xref>].) For multiple species data, MEME was run by pooling all sequences together. OrthoMEME was run only for the case <italic>K </italic>= 2 (i.e., on sequence from the two species <italic>S. cerevisiae </italic>and <italic>S. mikatae</italic>), since its current implementation can only handle two species data. The other four programs were run for <italic>K </italic>= 1, 2, 3, 4, in separate executions.</p><p>See Methods for details on how orthoMEME, PhyloGibbs and EMnEM were run.</p><p>Figure <xref ref-type="fig" rid="F5">5</xref> plots the performance scores for regulons RAP1, MIG1, CAR1, PHO4 and MCM1, which show interesting results. Note how the performance of PhyME improves with <italic>K </italic>for RAP1 and MIG1. For CAR1, both PhyME and MEME improve from <italic>K </italic>= 1 to <italic>K </italic>= 2, and then deteriorate for higher <italic>K</italic>, but PhyME at <italic>K </italic>= 3 is still better than at <italic>K </italic>= 1. For PHO4, PhyME's performance first goes up (for <italic>K </italic>= 2) and then dips below the <italic>K </italic>= 1 level, whereas MEME shows best performance at <italic>K </italic>= 4. For MCM1, PhyME scores well (over 90% matches) for <italic>K </italic>&#x02208; {1,3,4}, whereas MEME's performance degrades for <italic>K </italic>&#x0003e; 1. Thus, these examples illustrate that PhyME's approach can lead to improved motif discovery in multiple species data, and also that there may be situations when more orthologous sequences distract either algorithm from the true motif. For regulons CSRE, GCN4, MAT<italic>&#x003b1;</italic>2, URS1H, REB1, and PDR3, the performance score was high (typically over 80% matches) and largely invariant of the number of species.</p><p>Figure <xref ref-type="fig" rid="F5">5</xref> also reports the scores of PhyloGibbs. This program has similar scores as PhyME on CAR1, PHO4 and MCM1. (It did not execute to completion for <italic>K </italic>= 3, 4 in MCM1.) PhyME has better scores on MIG1 and RAP1, though PhyloGibbs' scores on RAP1 with a different choice of parameters ("-G 0.7", see Methods) were similar to PhyME. (Data not shown.) We also report the scores of EMnEM in Figure <xref ref-type="fig" rid="F5">5</xref>. (The program did not execute to completion in CAR1.) This program performs well for <italic>K </italic>= 2 (comparable to the best scores in the data sets RAP1, PHO4 and MCM1). For <italic>K </italic>= 3, 4 also, EMnEM scores are comparable to PhyloGibbs. PhyME typically performs better than EMnEM (with <italic>K </italic>= 3, 4) for RAP1, MIG1, MCM1, and comparably for PHO4.</p><p>We find the scores of orthoMEME, as reported in Figure <xref ref-type="fig" rid="F5">5</xref>, to be lower than those of PhyME (for <italic>K </italic>= 2). However, we observed that in all five regulons reported, orthoMEME reported fewer than <italic>&#x003b7; </italic>occurrences in <italic>S. cerevisiae </italic>per motif. This is because orthoMEME was run in the "zoops" mode (zero or one motif occurrence per sequence), since the "tcm" mode (any number of occurrences per promoter) does not perform well. Thus, with the total number of predictions being fewer than <italic>&#x003b7;</italic>, orthoMEME's scores are expected to be lower than other programs even for the same level of specificity.</p><p>We suggest caution in comparing PhyME's scores directly with those of the other programs, since we lacked expertise in choosing optimal parameter settings for them. This is particularly true for EMnEM, which has several parameters for modeling the evolution of motifs, and we lacked experience in setting these parameters optimally. We clearly have more expertise at using PhyME than the other programs, and this makes the comparisons biased. Our goal in these experiments was to provide some examples of how multiple species data can be exploited to improve performance, rather than assessing the different motif finding programs available. A proper comparative assessment of these programs has to address several challenges not addressed here. Such a task was undertaken for several motif finding programs, in the work of Tompa <italic>et al</italic>. (unpublished). A similar assessment of the motif-finding programs in the context of the heterogeneous data problem is an important topic for future work.</p></sec><sec><title>Fly data sets</title><p>Next, we present results from fruitfly, where data from two species, <italic>D. melanogaster </italic>and <italic>D. pseudoobscura</italic>, is available. Nine different enhancers were chosen &#x02013; enhancers <italic>eve1</italic>, <italic>eve2</italic>, <italic>eve5</italic>, <italic>ftz3</italic>', <italic>gtposterior</italic>, <italic>hairy2</italic>, <italic>hairy34</italic>, <italic>and run1 </italic>have binding sites for the <italic>Kr </italic>transcription factor, and <italic>btdhead </italic>has <italic>Bcd </italic>sites.</p><p>Well-defined weight matrices are available for both <italic>Kr </italic>and <italic>Bcd </italic>[<xref ref-type="bibr" rid="B26">26</xref>]. For each enhancer, the top <italic>&#x003b7; </italic>motif occurrences (in <italic>D. melanogaster</italic>) reported by the algorithm (<italic>&#x003b7; </italic>being the number of "strong" occurrences of the known weight matrix in <italic>D. melanogaster </italic>&#x02013; see Methods) were examined, and the number of matches was the performance score of the algorithm. Six different motif-finding strategies were tested separately &#x02013; (i) MEME_1 (MEME on single species) (ii) MEME_2 (MEME on both species pooled together), (iii) PhyloGibbs, (iv) orthoMEME, (v) EMnEM and (vi) PHYME (PhyME on both species, with <italic>&#x003bc; </italic>= 0.5). Each strategy was required to report occurrences only in <italic>D. melanogaster</italic>. (See Methods for details of how orthoMEME, PhyloGibbs and EMnEM were run.)</p><p>Figure <xref ref-type="fig" rid="F6">6</xref> compares the scores of the different strategies for all nine enhancers. Note that either PHYME or MEME_2 performs better than MEME_1 for seven of the nine enhancers, and worse only for one (<italic>ftz3</italic>'), thereby making the case for using two species data. Moreover, on <italic>btdhead</italic>, <italic>gtposterior </italic>and <italic>hairy2</italic>, PhyME performs significantly better than MEME_2, demonstrating the advantage of using orthology information. Similarly, we find PhyME to perform better than PhyloGibbs on <italic>gtposterior</italic>, <italic>hairy2 </italic>and <italic>hairy34</italic>. EMnEM performs well in these data sets, scoring comparably to PhyME or PhyloGibbs, except on <italic>btdhead</italic>, <italic>eve2</italic>, and <italic>gtposterior</italic>, where both PhyME and PhyloGibbs perform better, and <italic>hairy2</italic>, where PhyME alone performs better. OrthoMEME was run in the "tcm" mode, since the "zoops" mode is not appropriate here, with several putative sites to be found in each promoter. However, orthoMEME tends not to perform well in the "tcm" mode in general, and in our tests also, its scores were poor on most of the enhancers. We thus find that PhyME is preferable to orthoMEME for cases where we expect several motif occurrences per sequence.</p><p>As in the yeast data sets, the comparison of scores between PhyME and the other programs should be interpreted with caution, since we lacked expertise in choosing optimal parameter settings for the other programs.</p></sec><sec><title>Human data sets</title><p>Finally, we present results of running PhyME on two data sets from human, where orthology with mouse and rat was utilized. These data sets were chosen because all of 15 different motif-finding programs tested in an assessment project (Tompa <italic>et al</italic>., unpublished) failed to report the correct motif in them. The first set corresponds to the transcription factor SP1, a zinc-finger protein. The heterogeneous sequence data included 35 human promoters (of length 2 Kbp each), of which four have orthologous promoters from mouse and rat, 20 from mouse only, 4 from rat only, and 7 have no orthologs. Each of the human promoters is known to have at least one functional Sp1 binding site, with a total of 76 known sites overall. Figure <xref ref-type="fig" rid="F7">7a</xref> shows a "sequence logo" representation [<xref ref-type="bibr" rid="B27">27</xref>] of an alignment of these known sites. PhyME was run to find motifs of length 7, using the phylogenetic tree shown in Figure <xref ref-type="fig" rid="F7">7c</xref>. The second motif reported by PhyME (Figure <xref ref-type="fig" rid="F7">7b</xref>) is almost identical to the known SP1 weight matrix. The top 27 instances (in human promoters) of this motif included 16 that overlapped with known binding sites. We also ran MEME on the heterogeneous data set (pooling orthologous sequences together), and the second motif reported was a good match to SP1. However, of its 41 instances reported in human promoters, only 9 were overlapping with known sites. Moreover, when MEME was run on human promoters alone, none of the top three motifs matched the SP1 motif. Thus, PhyME showed a clear performance improvement over MEME, both in the single species run, and when the orthologous sequences were pooled together.</p><p>The second data set used in our tests corresponds to the leucine zipper transcription factor c-Jun. The heterogeneous data set included 500 bp promoters for 11 human genes targeted by c-Jun, as well as orthologs from mouse and rat for 3 genes, from mouse only for 5 genes, and from rat only for the remaining three genes. PhyME was run exactly as in the previous data set. The known binding sites of c-Jun (in human) were aligned to produce a weight matrix that is shown in Figure <xref ref-type="fig" rid="F8">8a</xref>. The third ranked motif reported by PhyME is shown in Figure <xref ref-type="fig" rid="F8">8b</xref>, and we can see that its last five positions are similar to the first five positions of the known weight matrix. Of the top 13 instances of the discovered motif, 4 overlap with known binding sites of c-Jun, whereas a maximum of 9 could have been obtained. (Of the 11 known sites, 9 are in the 500 bp upstream regions used in our analysis.) We also ran MEME on the heterogeneous data set (using the pooling strategy), and none of the three best motifs reported by MEME matched the c-Jun motif. Thus, both the human data sets tested demonstrate how PhyME can improve motif discovery in typical motif finding scenarios by exploiting heterogeneous sequence data properly.</p></sec></sec></sec><sec><title>Discussion</title><sec><title>Issues in algorithm design</title><sec><title>Alignment step</title><p>In the alignment step, PhyME extracts blocks of high sequence similarity between the reference species and each of the other species. Motif occurrences in such locally conserved regions are deemed orthologous, an assumption well-justified by traditional interpretations of sequence alignment. Conversely, all orthologous motif occurrences are assumed to be aligned in such blocks. This assumption is not always true since there may be orthologous motif occurrences not aligned by the alignment program, but it heavily constrains the space of orthologous motif occurrences, implying greater efficiency of the search algorithm. Moreover, the assumption does not mean that "true" orthologous occurrences in unaligned regions are ignored &#x02013; they are merely treated as independent occurrences. Our experiments on synthetic data (see Results) demonstrate that the performance is not very sensitive to the correct alignment of all orthologous motif pairs. The blocks computed in the alignment step have to be with respect to the reference species, but the alignment itself need not be done in a pairwise manner. A multiple alignment of all sequences may be computed (e.g., with M-LAGAN [<xref ref-type="bibr" rid="B21">21</xref>], using the input phylogenetic tree &#x003a8;) and blocks between <inline-graphic xlink:href="1471-2105-5-170-i2.gif"/> and each of the other <italic>S</italic><sub><italic>i </italic></sub>may then be extracted. (The alignment step is implemented as a separate tool in PhyME, making it easy to switch to such alternative schemes.) Furthermore, the implementation may be modified in the future to drop the requirement of a reference species, since this requirement is not crucial to the motif finding step of PhyME. For instance, the alignment step may utilize the "Threaded Block Alignment" (TBA) program of Blanchette <italic>et al</italic>. [<xref ref-type="bibr" rid="B28">28</xref>], which completely circumvents the notion of a reference species in multiple alignments.</p><p>Once the blocks of high sequence conservation have been identified, a possible strategy is to restrict attention to motif occurrences in these blocks, assuming that all functional binding sites must be evolutionarily conserved. However, this assumption is not true even for as closely related species as <italic>D. melanogaster </italic>and <italic>D. pseudoobscura</italic>, separated by about 25&#x02013;30 Myrs. An empirical study [<xref ref-type="bibr" rid="B16">16</xref>] on these two species revealed that a good fraction (35&#x02013;40%) of occurrences of relevant motifs occur outside of locally conserved contexts, and should therefore be taken into account when discovering motifs.</p></sec><sec><title>Motif Finding</title><p>In the probabilistic process that is assumed to generate sequences, the transition probability does not depend on the previous choice(s) made during the process, meaning that the HMM is of zeroth order, nor on the position in the sequence, meaning that any information about spatial distribution of motifs is ignored. The model, unlike that of MEME, does not fragment the sequence into all <italic>l</italic>-length words to be treated independently. Rather, it parses the sequence into a series of non-overlapping occurrences of the motif and background.</p><p>The evolutionary model described by Formula 1 applies only to phylogenies having a star topology. The general case of arbitrary tree topology is described in Methods. In Formula 1, if <italic>&#x003bc;</italic><sub><italic>&#x003c3; </italic></sub>is small (as for very closely related species), then finding different bases in orthologous positions has low probability <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>), even if their frequency in <italic>W </italic>is the same. This mirrors the intuition that mutations in locally conserved regions of closely related species are evidence against a binding site residing there. For largely diverged species (i.e., if <italic>&#x003bc;</italic><sub><italic>&#x003c3;</italic></sub>~1, &#x02200; <italic>&#x003c3;</italic>), <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>) reduces to the product of the individual bases' probabilities. It is worth emphasizing here that the weight matrix <italic>W </italic>being searched by the algorithm is assumed to be unchanged over the entire phylogenetic tree (including the ancestor).</p><p>The neutral mutation rates (probabilities) along each branch of &#x003a8; are input by the user and not trained during E-M. Training them on input data may cause overfitting, producing values that are largely inconsistent with the known evolutionary distances. The work of Moses <italic>et al</italic>. [<xref ref-type="bibr" rid="B18">18</xref>] studies this issue, and finds that it is more important to use correct phylogenetic relationships, e.g., an appropriate evolutionary tree, than to use accurate mutation rates.</p><p>Note that the evolutionary model used by PhyME comes into play only in Equations 2 as the term <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic></sub>, <italic>k</italic>). Other models of evolution, e.g., F81 [<xref ref-type="bibr" rid="B29">29</xref>], can be incorporated into PhyME by simply using the appropriate formulation of this term, as long as the derivatives of log <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic></sub>, <italic>k</italic>) can be computed efficiently.</p></sec></sec></sec><sec><title>Conclusions</title><p>We have developed a new algorithm, PhyME, that detects motifs in heterogeneous sequence data by integrating two important aspects of a motif's significance &#x02013; overrepresentation and cross-species comparison &#x02013; into one probabilistic score. We have evaluated different aspects of the algorithm on synthetic data, and demonstrated on some biological data sets that the new approach improves motif detection.</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>The evolutionary model</title><p>The evolutionary model makes the following assumptions: (i) Nucleotides in an aligned position are evolved from a common ancestor. (ii) The weight matrix applies to the common ancestor and to all descendants, a reasonable assumption given the propensity of DNA binding domains of proteins to evolve slower than cis-regulatory modules. (iii) All positions evolve independently, at equal rates, and the probability of fixation of a mutation <italic>&#x003b1; </italic>&#x02192; <italic>&#x003b2; </italic>at position <italic>k </italic>is proportional to the weight matrix entry of <italic>&#x003b2; </italic>at that position. Suppose we are given a phylogenetic tree &#x003a8;, with the species {<italic>&#x003c3;</italic><sub>1</sub>, <italic>&#x003c3;</italic><sub>2</sub>, .... <italic>&#x003c3;</italic><sub><italic>K</italic></sub>} at the leaves. Let the vector <italic>&#x003c8; </italic>= (<italic>s</italic><sub>1</sub>, <italic>s</italic><sub>2</sub>, ... <italic>s</italic><sub><italic>K</italic></sub>), where <italic>s</italic><sub><italic>&#x003c3; </italic></sub>is the nucleotide from species <italic>&#x003c3; </italic>in the (single position) alignment <italic>&#x003c8;</italic>. The term <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic>, <italic>k</italic>) denotes the probability of observing <italic>&#x003c8; </italic>at position <italic>k </italic>when sampling from weight matrix <italic>W</italic>. For each node <italic>j </italic>of the tree, except the root, let <italic>&#x003bc;</italic><sub><italic>j </italic></sub>be the probability of a base in the parent species of <italic>j </italic>having mutated (under neutral evolution) in species <italic>j</italic>. Also, let <italic>&#x003c8;</italic><sub><italic>j </italic></sub>be the vector formed by elements of <italic>&#x003c8; </italic>that correspond to leaf nodes descended from node <italic>j</italic>. Let <italic>C</italic>(<italic>j</italic>) denote the set of children of node <italic>j </italic>and let <italic>r </italic>be the root of the tree. Then, we can write (using the model assumptions):</p><p><inline-graphic xlink:href="1471-2105-5-170-i14.gif"/></p><p>where <italic>f</italic>(<italic>&#x003c8;</italic><sub><italic>j</italic></sub>, <italic>&#x003b1;</italic>) denotes the probability of observing <italic>&#x003c8;</italic><sub><italic>j </italic></sub>given that the base at the parent of <italic>j </italic>is <italic>&#x003b1;</italic>. For a leaf node <italic>&#x003c3;</italic>, this can be written as <inline-graphic xlink:href="1471-2105-5-170-i15.gif"/>, from the model assumptions. (<italic>&#x003b4;</italic><sub><italic>ij </italic></sub>= 1 if <italic>i </italic>= <italic>j</italic>, and 0 otherwise.) For an internal node <italic>j </italic>(except root <italic>r</italic>), the expression is :</p><p><inline-graphic xlink:href="1471-2105-5-170-i16.gif"/></p><p>For the special case where &#x003a8; has a star topology, Equation 4 reduces to Equation 1.</p></sec><sec><title>Training parameters in a HMM</title><p>Given a sequence <italic>S </italic>and a set of position weight matrices {<italic>W</italic><sub><italic>i</italic></sub>}, the objective function to be maximized is <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>) = log(<italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>)/<italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic><sub><italic>b</italic></sub>)), where <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>) is the probability of generating the sequence <italic>S </italic>using the parameters <italic>&#x003b8;</italic>, and <italic>&#x003b8;</italic><sub><italic>b </italic></sub>represents the parameter values that only allow the background motif <italic>W</italic><sub><italic>b </italic></sub>to be used by the HMM. The sequence <italic>S </italic>can be written as <italic>&#x003c8;</italic><sub>1</sub><italic>&#x003c8;</italic><sub>2 </sub>... <italic>&#x003c8;</italic><sub><italic>L</italic></sub>, where each <italic>&#x003c8;</italic><sub><italic>i </italic></sub>is either a single base or an alignment of orthologous bases at a single position. <italic>&#x003b8; </italic>includes the weight matrices <italic>W</italic><sub><italic>i </italic></sub>and their transition probabilities <italic>p</italic><sub><italic>i</italic></sub>. Since <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic><sub><italic>b</italic></sub>) depends only on <italic>W</italic><sub><italic>b</italic></sub>, which is assumed constant, we shall outline how to maximize log <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>), following the description in [<xref ref-type="bibr" rid="B23">23</xref>]. A parse of the sequence <italic>S </italic>in terms of the <italic>W</italic><sub><italic>i </italic></sub>(i.e., the series of motifs chosen in the successive steps of the generative probabilistic process) is denoted by <italic>T</italic>.</p><p>We thus have</p><p><inline-graphic xlink:href="1471-2105-5-170-i17.gif"/></p><p>The maximization is iterative, with the <italic>t</italic><sup><italic>th </italic></sup>iteration computing a model <italic>&#x003b8;</italic><sup><italic>t </italic>+ 1 </sup>that improves the objective function from the current model <italic>&#x003b8;</italic><sup><italic>t</italic></sup>. In classical E-M fashion, let us define a function <italic>Q</italic>(<italic>&#x003b8;</italic>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>) as</p><p><inline-graphic xlink:href="1471-2105-5-170-i18.gif"/></p><p>It is easily shown that log <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>) - log <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>) &#x02265; <italic>Q</italic>(<italic>&#x003b8;</italic>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>) - <italic>Q</italic>(<italic>&#x003b8;</italic><sup><italic>t</italic></sup>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>). Thus, if we maximize <italic>Q</italic>(<italic>&#x003b8;</italic>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>) over all <italic>&#x003b8;</italic>, we shall always improve upon log <italic>Pr</italic>(<italic>S</italic>|<italic>&#x003b8;</italic><sup><italic>t</italic></sup>), or remain there if the local maximum has been reached. Let <italic>A</italic><sub><italic>i</italic></sub>(<italic>T</italic>, <italic>S</italic>) be the number of times <italic>W</italic><sub><italic>i </italic></sub>occurs in the parse <italic>T </italic>of <italic>S</italic>. Also, let <italic>E</italic><sub><italic>ik&#x003c8;</italic></sub>(<italic>T</italic>, <italic>S</italic>) denote the number of times that the alignment <italic>&#x003c8; </italic>is emitted (sampled) at the <italic>k</italic><sup><italic>th </italic></sup>position of the matrix <italic>W</italic><sub><italic>i</italic></sub>, in parse <italic>T </italic>of <italic>S</italic>. Let <italic>l</italic><sub><italic>i </italic></sub>denote the length of <italic>W</italic><sub><italic>i</italic></sub>. Then we have</p><p><inline-graphic xlink:href="1471-2105-5-170-i19.gif"/></p><p>which gives us</p><p><inline-graphic xlink:href="1471-2105-5-170-i20.gif"/></p><p>Note that the only the first term in this expression depends on <italic>p</italic><sub><italic>i</italic></sub>, and only the second term depends on <italic>W</italic><sub><italic>i</italic></sub>. Hence, we maximize each of these terms independently, with respect to the appropriate free parameters. We first maximize the term</p><p><inline-graphic xlink:href="1471-2105-5-170-i21.gif"/></p><p>Note that <inline-graphic xlink:href="1471-2105-5-170-i22.gif"/> is the average number of occurrences of <italic>W</italic><sub><italic>i </italic></sub>in <italic>S </italic>over all parses <italic>T</italic>.</p><p>Thus the term to maximize is <inline-graphic xlink:href="1471-2105-5-170-i23.gif"/>, and this is maximized when</p><p><inline-graphic xlink:href="1471-2105-5-170-i24.gif"/></p><p>Next, we maximize the second term:</p><p><inline-graphic xlink:href="1471-2105-5-170-i25.gif"/></p><p>Again, note that <inline-graphic xlink:href="1471-2105-5-170-i26.gif"/> is the average number of times that the alignment <italic>&#x003c8; </italic>is sampled at the <italic>k</italic><sup><italic>th </italic></sup>position of the matrix <italic>W</italic><sub><italic>i </italic></sub>while generating <italic>S</italic>, the average being over all parses <italic>T</italic>. Thus, the term to maximize is <inline-graphic xlink:href="1471-2105-5-170-i27.gif"/>. We first note that in our case, there is a single weight matrix <italic>W</italic><sub><italic>m </italic></sub>to be trained. Hence, we need to maximize <italic>Q </italic>with respect to <italic>W</italic><sub><italic>m</italic></sub>. We can do this maximization with respect to each column <italic>k </italic>independently. Let <italic>W</italic><sub><italic>k&#x003b2; </italic></sub>denote the (<italic>k</italic>, <italic>&#x003b2;</italic>)<sup><italic>th </italic></sup>entry of <italic>W</italic><sub><italic>m</italic></sub>. Thus, for each <italic>k </italic>= 1 ... <italic>l</italic>, we need to maximize <italic>Q </italic>with respect to <italic>W</italic><sub><italic>k&#x003b2; </italic></sub>(<italic>&#x003b2; </italic>&#x02208; &#x003a3;), with the constraint &#x003a3;<sub><italic>&#x003b2; </italic></sub><italic>W</italic><sub><italic>k&#x003b2; </italic></sub>= 1. Using Lagrangian multiplier <italic>&#x003bb;</italic>, the objective function becomes <italic>Q </italic>+ <italic>&#x003bb; </italic>(&#x003a3;<sub><italic>&#x003b2; </italic></sub><italic>W</italic><sub><italic>k&#x003b2; </italic></sub>- 1).</p><p>Transforming to log variables <italic>u</italic><sub><italic>&#x003b2; </italic></sub>= log <italic>W</italic><sub><italic>k&#x003b2; </italic></sub>to ensure that the <italic>W</italic><sub><italic>k&#x003b2; </italic></sub>remain positive during optimization, we then have the following necessary conditions for optimality (in addition to the constraint <inline-graphic xlink:href="1471-2105-5-170-i28.gif"/>) :</p><p><inline-graphic xlink:href="1471-2105-5-170-i29.gif"/></p><p>We therefore have a system of five equations (including the constraint) in the variables <italic>u</italic><sub><italic>&#x003b2; </italic></sub>(&#x02200;<italic>&#x003b2; </italic>&#x02208; &#x003a3; and <italic>&#x003bb;</italic>. Denoting the vector of these five variables by <bold>u</bold>, we solve this system of equations using Newton's iterative method. Let us write the above system of equations as <bold>F</bold>(<bold>u</bold>) = <bold>0</bold>, where <bold>F</bold>(<bold>u</bold>) = [[<italic>f</italic><sub><italic>&#x003b2;</italic></sub>], <italic>f</italic><sub><italic>&#x003bb;</italic></sub>], with <italic>f</italic><sub><italic>&#x003b2; </italic></sub>being the left side of Equation 9, and <inline-graphic xlink:href="1471-2105-5-170-i30.gif"/>. Newton's method uses the update relation:</p><p>&#x00394;<bold>u </bold>= -(<bold>J</bold>(<bold>u</bold>))<sup>-1</sup><bold>F</bold>(<bold>u</bold>)</p><p>where &#x00394;<bold>u </bold>is the change in <bold>u </bold>in the current iteration and <bold>J </bold>is the Jacobian matrix of <bold>F</bold>. The important terms in the computation of <bold>F </bold>and <bold>J </bold>are the first and second partial derivatives of log <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic>, <italic>k</italic></sub>) with respect to the <italic>u</italic><sub><italic>&#x003b2; </italic></sub>variables. For this purpose, we need to compute <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic>, <italic>k</italic></sub>) and its first and second partial derivatives. Computation of <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic>, <italic>k</italic></sub>) uses the formulas 4 and 5. The partial derivatives can be computed recursively (over the tree &#x003a8;) by using the chain rule of differentiation. These recursive computations are implemented in a bottom-up manner, so as to avoid redundant computations. Newton's method uses <bold>F </bold>and <bold>J </bold>to iteratively compute new values of <bold>u</bold>, until convergence. The Jacobian matrix <bold>J </bold>in our case is not positive definite, hence Newton's method is not guaranteed to converge. However, in practice, we found the method to always converge from a single initial seed. Upon convergence, the log variables <italic>u</italic><sub><italic>&#x003b2; </italic></sub>are transformed back to <italic>W</italic><sub><italic>k&#x003b2; </italic></sub>= <italic>e</italic><sup><italic>u&#x003b2;</italic></sup>. The procedure is repeated for each <italic>k </italic>= 1 ... <italic>l</italic>, and <italic>W</italic><sub><italic>m </italic></sub>is then updated with the new values. This update, along with that given by Equation 8, is used iteratively to improve <italic>F</italic>(<italic>S</italic>|<italic>&#x003b8;</italic>) until the local maximum is reached, as indicated by a very small change in its value.</p></sec><sec><title>Time complexity</title><p>The E-step computes <inline-graphic xlink:href="1471-2105-5-170-i31.gif"/>, <inline-graphic xlink:href="1471-2105-5-170-i32.gif"/> and <inline-graphic xlink:href="1471-2105-5-170-i33.gif"/>, for <italic>k </italic>= 1 &#x02026; <italic>l</italic>, &#x02200; <italic>&#x003c8;</italic>. The Forward-Backward algorithm is run once, in <italic>O</italic>(<italic>LKl</italic>) time, where <italic>L </italic>is the total length of the input sequences, <italic>K </italic>is the number of species, and <italic>l </italic>is the length of the motif <italic>W</italic><sub><italic>m</italic></sub>. (This time complexity assumes that nodes in the phylogenetic tree have a fixed maximum degree.) Thereafter, <inline-graphic xlink:href="1471-2105-5-170-i31.gif"/>, <inline-graphic xlink:href="1471-2105-5-170-i32.gif"/> are computed in <italic>O</italic>(<italic>L</italic>) time, and all the <inline-graphic xlink:href="1471-2105-5-170-i33.gif"/> are computed in one scan of the input, expending <italic>O</italic>(<italic>Ll</italic>) time.</p><p>The M-step runs Newton's method to solve a system of equations, once for each column of <italic>W</italic><sub><italic>m</italic></sub>. Each run of Newton's method goes through a small number (3&#x02013;5) of iterations. Each iteration computes the first and second partial derivatives of log <italic>Pr</italic><sub><italic>e</italic></sub>(<italic>&#x003c8;</italic>|<italic>W</italic><sub><italic>m</italic>, <italic>k</italic></sub>) Each of these derivatives can be computed in <italic>O</italic>(<italic>K</italic>) time, where <italic>K </italic>is the number of species (since |<italic>&#x003c8;</italic>| &#x02264; <italic>K</italic>) Hence, <bold>F </bold>and <bold>J </bold>can be computed in <italic>O</italic>(<italic>LK</italic>) time, where <italic>L </italic>is the total length of the sequence. Hence, Newton's method takes <italic>O</italic>(<italic>LK</italic>) time, and is run <italic>l </italic>times, for an overall time complexity of <italic>O</italic>(<italic>LKl</italic>) for the M-step.</p><p>Thus, the running time of (each E-M iteration in) PhyME scales linearly with the length of the sequences, the length of the motif desired, and the number of species.</p></sec><sec><title>Implementation details</title><p>PhyME is implemented in C++ for Linux, and the source code will be made freely available at <ext-link ext-link-type="uri" xlink:href="http://edsc.rockefeller.edu/cgi-bin/phyme/download.pl"/>. The current implementation runs in a few minutes (on a workstation) for typical applications with total sequence length ~10000 bp, 2&#x02013;4 species, and motif length of ~10.</p><p>PhyME uses the LAGAN alignment tool of Brudno <italic>et al</italic>. [<xref ref-type="bibr" rid="B21">21</xref>] for the alignment step. After alignment, the ungapped blocks extracted are required to be at least 10 bp long, and have at least 70% identity. PhyME is implemented to handle an arbitrary phylogenetic tree &#x003a8; relating the input species.</p><p>The E-M algorithm is guaranteed to converge only to a local optimum. To address this problem, the motif-finding step is executed a fixed number of times, each time using a randomly chosen substring of the input sequence as the "seed" to initialize <italic>W</italic><sub><italic>m</italic></sub>, and truncating the E-M procedure after a small number of iterations. The seed with greatest score <italic>F</italic>(<italic>S</italic>, <italic>&#x003b8;</italic>) among these runs is then used to run the E-M to convergence and the trained motif is reported, along with all its instances with posterior probability above a certain threshold. To find more motifs, PhyME masks out the central base of each of these instances. Optionally, the user may specify nsites, the expected number of occurrences of each of the desired motifs. In such a case, PhyME turns off training of the parameter <italic>p</italic>, and uses a fixed value computed from nsites. Similarly, an option maxsites specifies the maximum number of occurrences expected.</p><p>PhyME considers occurrences on both strands by introducing a new weight matrix <italic>W</italic><sub><italic>r</italic></sub>, and an associated transition probability <italic>p</italic><sub><italic>r</italic></sub>, in the HMM parameters. The weight matrix is constrained to be the reverse complement of <italic>W</italic><sub><italic>m</italic></sub>. The model has a fixed bias of planting the motif in one orientation versus the other, and this bias is trained from the data. PhyME also has the option of capturing local correlations in background nucleotide composition. To implement a <italic>&#x003ba;</italic><sup><italic>th </italic></sup>order Markov background, PhyME uses a special background weight matrix that is of length 1 but uses the knowledge of the previous <italic>&#x003ba; </italic>bases generated to determine the emission probabilities of the next base.</p></sec><sec><title>Performance score in experiments with synthetic data</title><p>We use the following score for measuring the performance of a motif-finding algorithm on synthetic data. Let <italic>S </italic>= {<italic>S</italic><sub>1</sub>, <italic>S</italic><sub>2</sub>, ... <italic>S</italic><sub><italic>n</italic></sub>} be the set of <italic>n </italic>input sequences. For any motif <italic>m</italic>, let <italic>I</italic><sub><italic>mi </italic></sub>be the set of positions in sequence <italic>S</italic><sub><italic>i </italic></sub>that are occupied by an occurrence of <italic>m</italic>. We know the occurrences of the planted motif <italic>m</italic><sup><italic>k</italic></sup>, and are evaluating the motif <italic>m</italic><sup><italic>r </italic></sup>reported by an algorithm. The performance score &#x003a6; is defined as follows:</p><p><inline-graphic xlink:href="1471-2105-5-170-i34.gif"/></p><p>In other words, it is the number of positions, over all sequences, where occurrences of the known and reported motifs overlap, divided by the total number of positions at which the known <italic>or </italic>the reported motif occurs. Note that if the reported occurrences exactly concur with the known occurrences, the score is 1, and when the reported and known occurrences have no position in common, it is 0.</p></sec><sec><title>Details of experiments with biological data sets</title><sec><title>Yeast</title><p>The genes regulated by each transcription factor are listed in SCPD. For each such "regulon", the known sites and the known weight matrix were extracted from SCPD. Also, 800 bp long upstream sequences of the genes in each regulon were extracted (for <italic>S. cerevisiae</italic>) from the RSA-Tools web site [<xref ref-type="bibr" rid="B30">30</xref>]. Orthologous promoters in the other yeast species were obtained from Cliften <italic>et al</italic>. [<xref ref-type="bibr" rid="B11">11</xref>]. Let <italic>&#x003b7; </italic>be the number of known binding sites in <italic>S. cerevisiae</italic>. The input to the motif finding algorithm consisted of the sequences from <italic>S. cerevisiae </italic>and their orthologs from one or more of the other species, depending on <italic>K</italic>. (In addition to <italic>S. cerevisiae</italic>, we used <italic>S. mikatae </italic>for <italic>K </italic>= 2, <italic>S. mikatae </italic>and <italic>S. kudriavzevii </italic>for <italic>K </italic>= 3, and <italic>S. mikatae</italic>, <italic>S. kudriavzevii </italic>and <italic>S. bayanus </italic>for <italic>K </italic>= 4.) The length of the motif was also input to each program. Each algorithm was made to report 3 motifs, and for each motif, the top <italic>&#x003b7; </italic>reported occurrences in <italic>S. cerevisiae </italic>were examined. For each such occurrence, the logarithm of the probability of sampling it from the known weight matrix was computed, and a <italic>z</italic>-score of this logarithm was obtained. If the <italic>z</italic>-score was above 3, the occurrence was called a "match". To allow for slight offsets in the reported motif, each reported occurrence was padded with 3 bp of its context, on either side.</p><p>PhyME was run with the <italic>maxsites </italic>option set to <italic>&#x003b7;</italic>, and MEME was run with the same option set to <italic>&#x003b7;K</italic>. We also experimented with running MEME with the <italic>nsites </italic>parameter set to <italic>&#x003b7;K</italic>. OrthoMEME was run with a zeroth order Markov background, in the "zoops" mode, with expected number of sites between 0.8*<italic>&#x003b7; </italic>("minsites") and 1.2*<italic>&#x003b7; </italic>("maxsites"). PhyloGibbs was run with mutation probability 0.7 ("-G 0.3") for all species, and was asked to report three motifs (three "colors") each with 1.5 &#x000d7; <italic>&#x003b7; </italic>occurrences ("-I") initially. A 3<sup><italic>rd </italic></sup>order Markov background ("-N 3") trained on the full complement of yeast promoters was used, as with PhyME and MEME. The "loose align" option ("-D 1") and the "stop after anneal" option ("-X") were used. These options were suggested by an author of PhyloGibbs (Rahul Siddharthan, personal communication). We experimented with a different value for the mutation probability ("-G 0.7"), with no improvement, except in the RAP1 regulon. EMnEM was run with default parameters, the motif length being input through the "-w" parameter. Phylogenetic trees were derived from each input promoter, using the fastDNAML software of Olsen <italic>et al</italic>. [<xref ref-type="bibr" rid="B31">31</xref>]. The alignments were done using the MLAGAN program of Brudno <italic>et al</italic>. [<xref ref-type="bibr" rid="B21">21</xref>]. In separate runs, we also tried non-default values of the parameters "-p" (relative rate of motif to background; default 0.5, also tried 0.25) and "-m" (evolutionary model; default Jukes-Cantor, also tried F81). The expected number of instances of each motif per sequence ("-e") was set to <italic>&#x003b7;</italic>/<italic>n </italic>and <italic>&#x003b7;</italic>/<italic>n </italic>+ 1 in separate runs, where <italic>n </italic>is the number of input promoters. For each data set, and for each value of <italic>K</italic>, we took the best scoring choice of parameters. This was done to give some advantage to EMnEM, since we lacked expertise in choosing optimal parameter values.</p></sec><sec><title>Fly</title><p>The locations of cis-regulatory modules involved in body-patterning of the early embryo in <italic>D. melanogaster </italic>were obtained from [<xref ref-type="bibr" rid="B26">26</xref>], and their sequences were extracted from BDGP [<xref ref-type="bibr" rid="B32">32</xref>]. The evaluation procedure was identical to that in yeast, with the following difference. Since there is no complete list of verified sites in the enhancers, we first scanned the sequences (in <italic>D. melanogaster</italic>) with the known weight matrix, and counted matches, by the same measure as above. This count was the value of <italic>&#x003b7; </italic>used in the experiment. An extra complication in the fly data is caused by the fact that each enhancer typically contains sites for multiple transcription factors. We restricted our tests to the factors Kr and Bcd, because their weight matrices are of better quality than others. Moreover, for each enhancer, we chose to test with the transcription factor with most putative sites (matches to its weight matrix).</p><p>OrthoMEME was run as in the yeast data sets (see above), except that the "tcm" mode was used now. PhyloGibbs was also run as in the yeast data sets, except that we used a mutation probability of 0.5 ("-G 0.5"), and a 2<sup><italic>nd </italic></sup>order Markov background ("-N 2"), trained on non-coding regions in fly. We also experimented with a higher value of the mutation probability, and tried specifying the initial number of occurrences per motif ("-I") differently, with no clear improvement. EMnEM was run with the Jukes-Cantor evolutionary model ("-m 0") and with the relative rate of motif to background ("-p") set to 0.5 and 0.25 in separate runs. The expected number of motifs was set to <italic>&#x003b7; </italic>and 1.5 &#x000d7; <italic>&#x003b7; </italic>in separate runs. The best performing choice of parameters was used for each data set.</p></sec><sec><title>Human</title><p>The genes comprising each regulon were obtained from TRANSFAC [<xref ref-type="bibr" rid="B33">33</xref>]. Mouse and rat orthology information for human genes was obtained from Homologene [<xref ref-type="bibr" rid="B34">34</xref>]. Human, mouse and rat promoters were obtained from the UCSC Genome Browser [<xref ref-type="bibr" rid="B35">35</xref>].</p></sec></sec></sec><sec><title>Authors' contributions</title><p>All authors participated in initial discussions leading to the key idea of using Expectation-Maximization and a phylogenetic model to search in a weight-matrix space. SS designed the algorithm details, derived the E-M calculations, implemented and tested the program, and drafted the manuscript. All authors contributed to, read and approved the final manuscript.</p></sec></body><back><ack><sec><title>Acknowledgments</title><p>This material is based upon work supported in part by the National Science Foundation under grant DBI-0218798, in part by the National Institutes of Health under grant R01 HG02602, and in part by a Keck Foundation fellowship. We are very grateful to Amol Prakash for experiments with orthoMEME, and to Rahul Siddharthan for help in running PhyloGibbs. Several useful discussions on the topic with Eric Siggia are also acknowledged. An anonymous referee, who suggested several useful changes to the manuscript, is also thanked.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Bailey</surname><given-names>TL</given-names></name><name><surname>Elkan</surname><given-names>C</given-names></name></person-group><article-title>Unsupervised learning of multiple motifs in biopolymers using expectation maximization</article-title><source>Machine Learning</source><year>1995</year><volume>21</volume><fpage>51</fpage><lpage>80</lpage><pub-id pub-id-type="doi">10.1023/A:1022617714621</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Hertz</surname><given-names>GZ</given-names></name><name><surname>Hartzell</surname><given-names>GW</given-names><suffix>III</suffix></name><name><surname>Stormo</surname><given-names>GD</given-names></name></person-group><article-title>Identification of Consensus Patterns in Unaligned DNA Sequences Known to be Functionally Related</article-title><source>Computer Applications in the Biosciences</source><year>1990</year><volume>6</volume><fpage>81</fpage><lpage>92</lpage><pub-id pub-id-type="pmid">2193692</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Lawrence</surname><given-names>CE</given-names></name><name><surname>Altschul</surname><given-names>SF</given-names></name><name><surname>Boguski</surname><given-names>MS</given-names></name><name><surname>Liu</surname><given-names>JS</given-names></name><name><surname>Neuwald</surname><given-names>AF</given-names></name><name><surname>Wootton</surname><given-names>JC</given-names></name></person-group><article-title>Detecting Subtle Sequence Signals: a Gibbs Sampling Strategy for Multiple Alignment</article-title><source>Science</source><year>1993</year><volume>262</volume><fpage>208</fpage><lpage>214</lpage><pub-id pub-id-type="pmid">8211139</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Roth</surname><given-names>FP</given-names></name><name><surname>Hughes</surname><given-names>JD</given-names></name><name><surname>Estep</surname><given-names>PW</given-names></name><name><surname>Church</surname><given-names>GM</given-names></name></person-group><article-title>Finding DNA Regulatory Motifs Within Unaligned Noncoding Sequences Clustered by Whole-Genome mRNA Quantitation</article-title><source>Nature Biotechnology</source><year>1998</year><volume>16</volume><fpage>939</fpage><lpage>945</lpage><pub-id pub-id-type="pmid">9788350</pub-id><pub-id pub-id-type="doi">10.1038/nbt1098-939</pub-id></citation></ref><ref id="B5"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Sinha</surname><given-names>S</given-names></name><name><surname>Tompa</surname><given-names>M</given-names></name></person-group><article-title>A Statistical Method for Finding Transcription Factor Binding Sites</article-title><source>In Proceedings of the Eigth International Conference on Intelligent Systems for Molecular Biology: August 2000; La Jolla</source><year>2000</year><fpage>344</fpage><lpage>354</lpage></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>van Helden</surname><given-names>J</given-names></name><name><surname>Andr&#x000e9;</surname><given-names>B</given-names></name><name><surname>Collado-Vides</surname><given-names>J</given-names></name></person-group><article-title>Extracting Regulatory Sites from the Upstream Region of Yeast Genes by Computational Analysis of Oligonucleotide Frequencies</article-title><source>Journal of Molecular Biology</source><year>1998</year><volume>281</volume><fpage>827</fpage><lpage>842</lpage><pub-id pub-id-type="pmid">9719638</pub-id><pub-id pub-id-type="doi">10.1006/jmbi.1998.1947</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Blanchette</surname><given-names>M</given-names></name><name><surname>Tompa</surname><given-names>M</given-names></name></person-group><article-title>Discovery of Regulatory elements by a Computational Method for Phylogenetic Footprinting</article-title><source>Genome Research</source><year>2002</year><volume>12</volume><fpage>739</fpage><lpage>748</lpage><pub-id pub-id-type="pmid">11997340</pub-id><pub-id pub-id-type="doi">10.1101/gr.6902</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Loots</surname><given-names>G</given-names></name><name><surname>Ovcharenko</surname><given-names>I</given-names></name><name><surname>Pachter</surname><given-names>L</given-names></name><name><surname>Dubchak</surname><given-names>I</given-names></name><name><surname>Rubin</surname><given-names>E</given-names></name></person-group><article-title>rVista for comparative sequence-based discovery of functional transcription factor binding sites</article-title><source>Genome Research</source><year>2002</year><volume>12</volume><fpage>832</fpage><lpage>9</lpage><pub-id pub-id-type="pmid">11997350</pub-id><comment>10.1101/gr.225502. Article published online before print in April 2002</comment></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gelfand</surname><given-names>M</given-names></name><name><surname>Koonin</surname><given-names>E</given-names></name><name><surname>Mironov</surname><given-names>A</given-names></name></person-group><article-title>Prediction of transcription regulatory sites in Archea by a comparative genomic approach</article-title><source>Nucleic Acids Research</source><year>2000</year><volume>28</volume><fpage>695</fpage><lpage>705</lpage><pub-id pub-id-type="pmid">10637320</pub-id><pub-id pub-id-type="doi">10.1093/nar/28.3.695</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>McGuire</surname><given-names>AM</given-names></name><name><surname>Hughes</surname><given-names>JD</given-names></name><name><surname>Church</surname><given-names>GM</given-names></name></person-group><article-title>Conservation of DNA regulatory motifs and discovery of new motifs in microbial genomes</article-title><source>Genome Research</source><year>2000</year><volume>10</volume><fpage>744</fpage><lpage>757</lpage><pub-id pub-id-type="pmid">10854408</pub-id><pub-id pub-id-type="doi">10.1101/gr.10.6.744</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Cliften</surname><given-names>P</given-names></name><name><surname>Hillier</surname><given-names>L</given-names></name><name><surname>Fulton</surname><given-names>L</given-names></name><name><surname>Graves</surname><given-names>T</given-names></name><name><surname>Miner</surname><given-names>T</given-names></name><name><surname>Gish</surname><given-names>W</given-names></name><name><surname>Waterston</surname><given-names>R</given-names></name><name><surname>Johnston</surname><given-names>M</given-names></name></person-group><article-title>Surveying Saccharomyces genomes to identify functional elements by comparative DNA sequence analysis</article-title><source>Genome Research</source><year>2001</year><volume>11</volume><fpage>1175</fpage><lpage>1186</lpage><pub-id pub-id-type="pmid">11435399</pub-id><pub-id pub-id-type="doi">10.1101/gr.182901</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kellis</surname><given-names>M</given-names></name><name><surname>Patterson</surname><given-names>N</given-names></name><name><surname>Endrizzi</surname><given-names>M</given-names></name><name><surname>Birren</surname><given-names>B</given-names></name><name><surname>Lander</surname><given-names>E</given-names></name></person-group><article-title>Sequencing and comparison of yeast species to identify genes and regulatory elements</article-title><source>Nature</source><year>2003</year><volume>423</volume><fpage>241</fpage><lpage>54</lpage><pub-id pub-id-type="pmid">12748633</pub-id><pub-id pub-id-type="doi">10.1038/nature01644</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Liu</surname><given-names>Y</given-names></name><name><surname>Liu</surname><given-names>XS</given-names></name><name><surname>Wei</surname><given-names>L</given-names></name><name><surname>Altman</surname><given-names>R</given-names></name><name><surname>Batzoglou</surname><given-names>S</given-names></name></person-group><article-title>Eukaryotic Regulatory Element Conservation Analysis and Identification Using Comparative Genomics</article-title><source>Genome Research</source><year>2004</year><volume>14</volume><fpage>451</fpage><lpage>458</lpage><pub-id pub-id-type="pmid">14993210</pub-id><pub-id pub-id-type="doi">10.1101/gr.1327604</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>GuhaThakurta</surname><given-names>D</given-names></name><name><surname>Palomar</surname><given-names>L</given-names></name><name><surname>Stormo</surname><given-names>G</given-names></name><name><surname>Tedesco</surname><given-names>P</given-names></name><name><surname>Johnson</surname><given-names>T</given-names></name><name><surname>Walker</surname><given-names>D</given-names></name><name><surname>Lithgow</surname><given-names>G</given-names></name><name><surname>Kim</surname><given-names>S</given-names></name><name><surname>Link</surname><given-names>C</given-names></name></person-group><article-title>Identification of a novel cis-regulatory element involved in the heat shock response in Caenorhabditis elegans using microarray gene expression and computational methods</article-title><source>Genome Research</source><year>2002</year><volume>12</volume><fpage>701</fpage><lpage>12</lpage><pub-id pub-id-type="pmid">11997337</pub-id><pub-id pub-id-type="doi">10.1101/gr.228902</pub-id></citation></ref><ref id="B15"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Prakash</surname><given-names>A</given-names></name><name><surname>Blanchette</surname><given-names>M</given-names></name><name><surname>Sinha</surname><given-names>S</given-names></name><name><surname>Tompa</surname><given-names>M</given-names></name></person-group><article-title>Motif discovery in heterogeneous sequence data</article-title><source>In Pacific Symposium on Biocomputing: January 2004; Hawaii</source><year>2004</year><fpage>348</fpage><lpage>359</lpage></citation></ref><ref id="B16"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Emberly</surname><given-names>E</given-names></name><name><surname>Rajewsky</surname><given-names>N</given-names></name><name><surname>Siggia</surname><given-names>E</given-names></name></person-group><article-title>Conservation of regulatory elements between two species of Drosophila</article-title><source>BMC Bioinformatics</source><year>2003</year><volume>4</volume></citation></ref><ref id="B17"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Siddharthan</surname><given-names>R</given-names></name><name><surname>van Nimwegen</surname><given-names>E</given-names></name><name><surname>Siggia</surname><given-names>E</given-names></name></person-group><article-title>PhyloGibbs: Incorporating phylogeny and tracking-based significance assessment in a Gibbs sampler</article-title><source>In RECOMB Satellite Workshop on Regulatory Genomics</source><year>2004</year></citation></ref><ref id="B18"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Moses</surname><given-names>A</given-names></name><name><surname>Chiang</surname><given-names>D</given-names></name><name><surname>Eisen</surname><given-names>M</given-names></name></person-group><article-title>Phylogenetic motif detection by expectation-maximization on evolutionary mixtures</article-title><source>In Pacific Symposium on Biocomputing: January 2004; Hawaii</source><year>2004</year><fpage>324</fpage><lpage>335</lpage></citation></ref><ref id="B19"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Jukes</surname><given-names>T</given-names></name><name><surname>Cantor</surname><given-names>C</given-names></name></person-group><person-group person-group-type="editor"><name><surname>Munro MN</surname></name></person-group><article-title>Evolution of protein molecules</article-title><source>In Mammalian Protein Metabolism</source><year>1969</year><publisher-name>Academic Press</publisher-name></citation></ref><ref id="B20"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>T</given-names></name><name><surname>Stormo</surname><given-names>G</given-names></name></person-group><article-title>Combining phylogenetic data with co-regulated genes to identify regulatorymotifs</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>2369</fpage><lpage>2380</lpage><pub-id pub-id-type="pmid">14668220</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btg329</pub-id></citation></ref><ref id="B21"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Brudno</surname><given-names>M</given-names></name><name><surname>Do</surname><given-names>C</given-names></name><name><surname>Cooper</surname><given-names>G</given-names></name><name><surname>Kim</surname><given-names>M</given-names></name><name><surname>Davydov</surname><given-names>E</given-names></name><name><surname>Green</surname><given-names>E</given-names></name><name><surname>Sidow</surname><given-names>A</given-names></name><name><surname>Batzoglou</surname><given-names>S</given-names></name><collab>NISC Comparative Sequencing Program</collab></person-group><article-title>LAGAN and Multi-LAGAN: efficient tools for large-scale multiple alignment of genomic DNA</article-title><source>Genome Research</source><year>2003</year><volume>13</volume><fpage>721</fpage><lpage>31</lpage><pub-id pub-id-type="pmid">12654723</pub-id><pub-id pub-id-type="doi">10.1101/gr.926603</pub-id></citation></ref><ref id="B22"><citation citation-type="other"><person-group person-group-type="author"><name><surname>Sinha</surname><given-names>S</given-names></name><name><surname>van Nimwegen</surname><given-names>E</given-names></name><name><surname>Siggia</surname><given-names>E</given-names></name></person-group><article-title>A Probabilistic Method to Detect Regulatory Modules</article-title><source>In Proceedings of the Eleventh International Conference on Intelligent Systems for Molecular Biology: July 2003; Brisbane</source><year>2003</year><fpage>292</fpage><lpage>301</lpage></citation></ref><ref id="B23"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Eddy</surname><given-names>S</given-names></name><name><surname>Krogh</surname><given-names>A</given-names></name><name><surname>Mitchison</surname><given-names>G</given-names></name></person-group><source>Biological sequences analysis</source><year>1998</year><publisher-name>Cambridge University Press</publisher-name></citation></ref><ref id="B24"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Thompson</surname><given-names>W</given-names></name><name><surname>Rouchka</surname><given-names>E</given-names></name><name><surname>Lawrence</surname><given-names>C</given-names></name></person-group><article-title>Gibbs Recursive Sampler: finding transcription factor binding sites</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>3580</fpage><lpage>3585</lpage><pub-id pub-id-type="pmid">12824370</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg608</pub-id></citation></ref><ref id="B25"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Zhu</surname><given-names>J</given-names></name><name><surname>Zhang</surname><given-names>MQ</given-names></name></person-group><article-title>SCPD: a Promoter Database of the Yeast <italic>Saccharomyces cerevisiae</italic></article-title><source>Bioinformatics</source><year>1999</year><volume>15</volume><fpage>607</fpage><lpage>611</lpage><ext-link ext-link-type="uri" xlink:href="http://cgsigma.cshl.org/jian/"/><pub-id pub-id-type="pmid">10487868</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/15.7.607</pub-id></citation></ref><ref id="B26"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Rajewsky</surname><given-names>N</given-names></name><name><surname>Vergassola</surname><given-names>M</given-names></name><name><surname>Gaul</surname><given-names>U</given-names></name><name><surname>Siggia</surname><given-names>E</given-names></name></person-group><article-title>Computational detection of genomic cis-regulatory modules applied to body patterning in the early Drosophila embryo</article-title><source>BMC Bioinformatics</source><year>2002</year><volume>3</volume></citation></ref><ref id="B27"><citation citation-type="other"><article-title>WebLogo</article-title><ext-link ext-link-type="uri" xlink:href="http://weblogo.berkeley.edu/"/></citation></ref><ref id="B28"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Blanchette</surname><given-names>M</given-names></name><name><surname>Kent</surname><given-names>J</given-names></name><name><surname>Riemer</surname><given-names>C</given-names></name><name><surname>Elnitski</surname><given-names>L</given-names></name><name><surname>Smit</surname><given-names>A</given-names></name><name><surname>Roskin</surname><given-names>K</given-names></name><name><surname>Baertsch</surname><given-names>R</given-names></name><name><surname>Rosenbloom</surname><given-names>K</given-names></name><name><surname>Clawson</surname><given-names>H</given-names></name><name><surname>Green</surname><given-names>E</given-names></name><name><surname>Haussler</surname><given-names>D</given-names></name><name><surname>Miller</surname><given-names>W</given-names></name></person-group><article-title>Aligning multiple genomic sequences with the threaded blockset aligner</article-title><source>Genome Research</source><year>2004</year><volume>14</volume><fpage>708</fpage><lpage>715</lpage><pub-id pub-id-type="pmid">15060014</pub-id><pub-id pub-id-type="doi">10.1101/gr.1933104</pub-id></citation></ref><ref id="B29"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Felsenstein</surname><given-names>J</given-names></name></person-group><article-title>Evolutionary trees from DNA sequences: maximum likelihood approach</article-title><source>Journal of Molecular Evolution</source><year>1981</year><volume>17</volume><fpage>368</fpage><lpage>376</lpage><pub-id pub-id-type="pmid">7288891</pub-id></citation></ref><ref id="B30"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>van Helden</surname><given-names>J</given-names></name></person-group><article-title>Regulatory sequence analysis tools</article-title><source>Nucleic Acids Research</source><year>2003</year><volume>31</volume><fpage>3593</fpage><lpage>6</lpage><pub-id pub-id-type="pmid">12824373</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg567</pub-id></citation></ref><ref id="B31"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Olsen</surname><given-names>GJ</given-names></name><name><surname>Matsuda</surname><given-names>H</given-names></name><name><surname>Hagstrom</surname><given-names>R</given-names></name><name><surname>Overbeek</surname><given-names>R</given-names></name></person-group><article-title>fastDNAml: A tool for construction of phylogenetic trees of DNA sequences using maximum likelihood</article-title><source>Comput Appl Biosci</source><year>1994</year><volume>10</volume><fpage>41</fpage><lpage>48</lpage><pub-id pub-id-type="pmid">8193955</pub-id></citation></ref><ref id="B32"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Celniker</surname><given-names>S</given-names></name><name><surname>Wheeler</surname><given-names>D</given-names></name><name><surname>Kronmiller</surname><given-names>B</given-names></name><name><surname>Carlson</surname><given-names>J</given-names></name><name><surname>Halpern</surname><given-names>A</given-names></name><name><surname>Patel</surname><given-names>S</given-names></name><name><surname>Adams</surname><given-names>M</given-names></name><name><surname>Champe</surname><given-names>M</given-names></name><name><surname>Dugan</surname><given-names>S</given-names></name><name><surname>Frise</surname><given-names>E</given-names></name><name><surname>Hodgson</surname><given-names>A</given-names></name><name><surname>George</surname><given-names>R</given-names></name><name><surname>Hoskins</surname><given-names>R</given-names></name><name><surname>Laverty</surname><given-names>T</given-names></name><name><surname>Muzny</surname><given-names>D</given-names></name><name><surname>Nelson</surname><given-names>C</given-names></name><name><surname>Pacleb</surname><given-names>J</given-names></name><name><surname>Park</surname><given-names>S</given-names></name><name><surname>Pfeiffer</surname><given-names>B</given-names></name><name><surname>Richards</surname><given-names>S</given-names></name><name><surname>Sodergren</surname><given-names>E</given-names></name><name><surname>Svirskas</surname><given-names>R</given-names></name><name><surname>Tabor</surname><given-names>P</given-names></name><name><surname>Wan</surname><given-names>K</given-names></name><name><surname>Stapleton</surname><given-names>M</given-names></name><name><surname>Sutton</surname><given-names>G</given-names></name><name><surname>Venter</surname><given-names>C</given-names></name><name><surname>Weinstock</surname><given-names>G</given-names></name><name><surname>Scherer</surname><given-names>S</given-names></name><name><surname>Myers</surname><given-names>E</given-names></name><name><surname>Gibbs</surname><given-names>R</given-names></name><name><surname>Rubin</surname><given-names>G</given-names></name></person-group><article-title>Finishing a whole genome shotgun: Release 3 of the Drosophila melanogaster euchromatic genome sequence</article-title><source>Genome Biology</source><year>2002</year><volume>3</volume></citation></ref><ref id="B33"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wingender</surname><given-names>E</given-names></name><name><surname>Dietze</surname><given-names>P</given-names></name><name><surname>Karas</surname><given-names>H</given-names></name><name><surname>Kn&#x000fc;ppel</surname><given-names>R</given-names></name></person-group><article-title>TRANSFAC: a Database on Transcription Factors and their DNA Binding Sites</article-title><source>Nucleic Acids Research</source><year>1996</year><volume>24</volume><fpage>238</fpage><lpage>241</lpage><ext-link ext-link-type="uri" xlink:href="http://transfac.gbf.de"/><pub-id pub-id-type="pmid">8594589</pub-id><pub-id pub-id-type="doi">10.1093/nar/24.1.238</pub-id></citation></ref><ref id="B34"><citation citation-type="other"><article-title>HomoloGene</article-title><ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?db=homologene"/></citation></ref><ref id="B35"><citation citation-type="other"><article-title>UCSC Genome Browser</article-title><ext-link ext-link-type="uri" xlink:href="http://genome.ucsc.edu/"/></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p>Orthologous promoters and blocks of sequence conservation. Shaded areas represent ungapped aligned blocks. <italic>&#x003c3;</italic><sub>1 </sub>is the reference species. (a) Alignment of input sequences and extraction of blocks. (b) Reorganization of input sequences.</p></caption><graphic xlink:href="1471-2105-5-170-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p>Effect of varying the number of species (<italic>K</italic>) on motif-finding performance. The x-axis is the relative entropy (<italic>R</italic>) of the planted motif. Each point is an average over 10 experiments with synthetic data. (<italic>&#x003bc;</italic><sub><italic>b </italic></sub>= 0.3, <italic>&#x003bc;</italic><sub><italic>m </italic></sub>= 0.1.)</p></caption><graphic xlink:href="1471-2105-5-170-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p>Effect of varying background and motif mutation rates (<italic>&#x003bc;</italic><sub><italic>b </italic></sub>and <italic>&#x003bc;</italic><sub><italic>m </italic></sub>respectively) on motif-finding performance. Each point is an average over 10 experiments with synthetic data. (<italic>K </italic>= 3, <italic>R </italic>= 12.)</p></caption><graphic xlink:href="1471-2105-5-170-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p>Effect of the alignment step on motif-finding performance. The x-axis shows how many of the orthologous pairs of planted motifs are artificially unpaired in the alignment step. Each solid line represents a separate experiment. The squares plot the average score over eight experiments.</p></caption><graphic xlink:href="1471-2105-5-170-4"/></fig><fig position="float" id="F5"><label>Figure 5</label><caption><p>Effect of multiple species information on motif-discovery in the regulons RAP1, MIG1, CAR1, PHO4 and MCM1 in yeast. The y-axis plots the number of matches to the known motif, among the top <italic>&#x003b7; </italic>reported occurrences, where <italic>&#x003b7; </italic>is the number of known sites, plotted as "KNOWN" . Only matches in <italic>S. cerevisiae </italic>are considered.</p></caption><graphic xlink:href="1471-2105-5-170-5"/></fig><fig position="float" id="F6"><label>Figure 6</label><caption><p>Comparison of PhyME to 1 species and 2 species MEME, and to PhyloGibbs and EMnEM, for fly enhancers. The parenthetical number next to an enhancer name is the number of strong occurrences of the known weight matrix, in the <italic>D. melanogaster </italic>sequence.</p></caption><graphic xlink:href="1471-2105-5-170-6"/></fig><fig position="float" id="F7"><label>Figure 7</label><caption><p>Results on the human SP1 regulon. (a) The known motif. (b) Motif reported by PhyME, using mouse and rat orthologs. (c) The phylogenetic tree used by PhyME.</p></caption><graphic xlink:href="1471-2105-5-170-7"/></fig><fig position="float" id="F8"><label>Figure 8</label><caption><p>Results on the human c-Jun regulon. (a) The known motif. (b) Motif reported by PhyME, using mouse and rat orthologs.</p></caption><graphic xlink:href="1471-2105-5-170-8"/></fig></sec></back></article>



