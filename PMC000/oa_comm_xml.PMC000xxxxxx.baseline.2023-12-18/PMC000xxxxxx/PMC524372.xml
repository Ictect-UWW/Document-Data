<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="product-review"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15461789</article-id><article-id pub-id-type="pmc">PMC524372</article-id><article-id pub-id-type="publisher-id">1471-2105-5-142</article-id><article-id pub-id-type="doi">10.1186/1471-2105-5-142</article-id><article-categories><subj-group subj-group-type="heading"><subject>Software</subject></subj-group></article-categories><title-group><article-title>ArrayD: A general purpose software for Microarray design</article-title></title-group><contrib-group><contrib id="A1" contrib-type="author"><name><surname>Sharma</surname><given-names>Anu</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>anusha77in@yahoo.com</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Srivastava</surname><given-names>Gyan Prakash</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>gyanprakash@lycos.com</email></contrib><contrib id="A3" contrib-type="author"><name><surname>Sharma</surname><given-names>Vineet K</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>vsharma@igib.res.in</email></contrib><contrib id="A4" corresp="yes" contrib-type="author"><name><surname>Ramachandran</surname><given-names>Srinivasan</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>ramu@igib.res.in</email></contrib></contrib-group><aff id="I1"><label>1</label>Institute of Genomics and Integrative Biology (CSIR), Mall Road, Delhi 110 007, India</aff><pub-date pub-type="collection"><year>2004</year></pub-date><pub-date pub-type="epub"><day>2</day><month>10</month><year>2004</year></pub-date><volume>5</volume><fpage>142</fpage><lpage>142</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/5/142"/><history><date date-type="received"><day>3</day><month>6</month><year>2004</year></date><date date-type="accepted"><day>2</day><month>10</month><year>2004</year></date></history><copyright-statement>Copyright &#x000a9; 2004 Sharma et al; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an open-access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>Microarray is a high-throughput technology to study expression of thousands of genes in parallel. A critical aspect of microarray production is the design aimed at space optimization while maximizing the number of gene probes and their replicates to be spotted.</p></sec><sec><title>Results</title><p>We have developed a software called 'ArrayD' that offers various alternative design solutions for an array given a set of user requirements. The user feeds the following inputs: type of source plates to be used, number of gene probes to be printed, number of replicates and number of pins to be used for printing. The solutions are stored in a text file. The choice of a design solution to be used will be governed by the spotting chemistry to be used and the accuracy of the robot.</p></sec><sec><title>Conclusions</title><p>ArrayD is a software for standard cartesian robots. The software aids users in preparing a judicious and elegant design. ArrayD is universally applicable and is available at <ext-link ext-link-type="uri" xlink:href="http://www.igib.res.in/scientists/arrayd/arrayd.html"/>.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Microarray is a popularly used high-throughput technology to investigate gene expression of thousands of genes simultaneously at the level of mRNA. Ever since the development of this technology [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>], transcriptional profiling at the genomic level has been employed to address numerous issues in biology and in medicine [<xref ref-type="bibr" rid="B4">4</xref>-<xref ref-type="bibr" rid="B8">8</xref>]. It is likely that microarrays will continue to be used to explore various biological phenomena. The basic underlying principle involves spotting DNA fragments either derived from polymerase chain reaction or preparation of plasmids or oligonucleotides at high density (~10,000&#x02013;25,000 spots on a glass slide of 25 mm &#x000d7; 75 mm) representing the probes of the genes under study. The surface on which the DNA fragments or oligonucleotides are spotted is usually glass slides coated with poly-L-lysine or amino alkyl silane that serve to improve adherence of DNA to the surface. Uniform spotting at high density requires robotic operation and a variety of robots are now available for spotting [<xref ref-type="bibr" rid="B9">9</xref>]. The robots employed for the preparation of microarrays are of the cartesian type with movement in x-y-z direction.</p><p>A critical aspect of microarray production is the design considering space optimization to produce high-density arrays for a given set of samples and replicates. The softwares generally supplied with robotic spotters translate user input parameters into a set of instructions in robot language for printing arrays. These softwares do not offer design capabilities in which spotting parameters and grid configurations can be chosen for a given set of samples and replicates. Presently various solutions have to be derived manually in most academic laboratories. We have developed a user-friendly software 'ArrayD' that can be used by experts and novice alike to fill this gap to simplify and aid in rapid design. ArrayD offers a variety of design solutions given a set of requirements: Number of gene probes, number of replicates, and the source plate (384 well or 96 well). Because the algorithm implemented in ArrayD is inherently simple and uses fundamental principles of robot operation, the design solutions offered by ArrayD are universally applicable to any system. The choice of a design solution would be governed by the spotting chemistry and the humidity used in addition to elegant appearance. The hallmark of ArrayD is its overall simplicity and the variety of alternative designs it offers for users to decide on choosing the appropriate spotting parameters. The multiple design solutions offered by ArrayD provides a wide range of arrays from compact to loosely spaced spots as well as convenient grid patterning, which can be user selected for printing.</p><sec><title>Implementation</title><p>ArrayD program is developed in C and can be compiled and operated on UNIX V5.1, IRIX 5.1 and Red Hat Linux 7.0 (or higher) operating systems. A companion computer program ArraySolution was developed in Perl (Practical Extraction Report Language) version 5.6.1 and can be implemented on any UNIX or Linux operating system.</p><sec><title>Inputs to be defined for ArrayD</title><p>(a) Type of source plate to be used</p><p>The input parameter toggles between either 96 well or 384 well plate.</p><p>(b) Number of gene probes to be printed</p><p>The number of gene probes including positive and negative controls and blanks.</p><p>(c) Number of replicates</p><p>The number of replicates of each gene probe. Although the most common pattern chosen is duplicates, users can choose any number of replicates. Replicates are assumed to be printed in the Y axis.</p><p>(d) Number of pins to be used for printing</p><p>This parameter relates to time taken for printing the slides and the number of spots arrayed per slide. The number of pins in X-axis and Y-axis need to be specified. The type of pins used is assumed to be stealth pins, which are widely used. It is not necessary to specify pin type for ArrayD. Instead, this aspect is considered in the printing software according to the pin type used for implementing a particular design.</p></sec></sec></sec><sec><title>Results and discussion</title><p>A general microarray design layout is displayed in Figure <xref ref-type="fig" rid="F1">1</xref>. ArrayD accepts standard slide dimensions (25 mm &#x000d7; 75 mm), conceptualizes the spotting area to be 50 mm &#x000d7; 22 mm to provide space for barcode labeling and for appropriate placement of coverslip over the print area.</p><p>The reference direction of the robot for picking probes from source plate is left &#x02192; right followed by top &#x02192; down; the printing direction is top &#x02192; down followed by left &#x02192; right. Replicates are considered to be spotted in Y-axis (Figure <xref ref-type="fig" rid="F1">1</xref>). After the user has entered the parameters, the software generates a text file called 'solution.txt' that carries possible alternative array design parameters for the given input. The algorithm implemented in ArrayD is displayed in Figure <xref ref-type="fig" rid="F2">2</xref>.</p><p>The program first validates the input given by the user for appropriate number of pins in each direction and the plate type to be used. For a valid input, ArrayD calculates maximum possible number of super grids in X (or Y) direction based on the coverslip dimensions, pin number in X (or Y) direction and pin-to-pin distance (Figure <xref ref-type="fig" rid="F2">2</xref>). The coverslip dimensions have been set in the program as 50 mm &#x000d7; 22 mm for the longest size coverslip that can be effectively used during hybridization. The pin-to-pin distance is fixed at 4500 microns in the print head for 384 well plates and at 9000 microns for 96 well plates.</p><p>ArrayD uses a predefined inter-spot distance database. Design solutions of ArrayD encompass various inter-spot distances that would be compatible with different spotting chemistries and conditions of humidity. We have used inter-spot distances of 170 &#x003bc;m, 180 &#x003bc;m, 190 &#x003bc;m, 200 &#x003bc;m, 220 &#x003bc;m, 250 &#x003bc;m and 300 &#x003bc;m. This database can be expanded to incorporate even lower inter-spot distances for use with other spotting chemistries by simple modification. We chose 170 &#x003bc;m as least distance based on several trial experiments in our laboratory using 50% DMSO as spotting solution and SMP3 pin type. In our experience, a minimum inter-spot distance of 200 microns works best with 50% DMSO at 40% &#x02013; 50% humidity at 25&#x000b0;C.</p><p>The options for the inter-spot distance currently offered by the software can work successfully for SMP2, SMP2B, SMP2XB, SMP2.5, SMP2.5B, SMP2.5XB, SMP3, SMP3B, SMP3XB, SMP4, SMP4B, SMP4XB, SMP5, SMP5B and SMP5XB stealth pins (See Table <xref ref-type="table" rid="T1">1</xref>). For each possible super grid configuration, the number of grids in each direction is optimized based on the number of gene probes (samples) input by the user as shown in figure <xref ref-type="fig" rid="F2">2</xref>.</p><sec><title>Design solutions offered by the program</title><p>Alternative array designs for a given set of input parameters are ranked on the basis of 'Distance area ratio' that describes the area covered by the array for each design. The array design spanning least area is ranked highest. This strategy allows for applying the labeled target sparingly. Subsequently, an easy report in tabular form can be generated by feeding the output data file from ArrayD into the companion Perl program 'ArraySolution.pl', which classifies array solutions into 'Square', 'Rectangle (Horizontal bar)', or 90&#x000b0; rotated 'Rectangle (Vertical column)' based on the geometry of a given design solution. If the number of grids are equal in both the direction we have a 'Square' design. In all other cases we obtain a 'Rectangle' design, which can be either of two types: the long side of the array is parallel to the length (Horizontal) or the width (Vertical) of the slide. The output of ArraySolution is a tab-delimited text file called 'filename.solution' where filename corresponds to the input name of the file carrying design solutions. The tabular report consist of Number of super grids in X &#x02013; direction, Number of super grids in Y &#x02013; direction, Number of spots per grid in X &#x02013; direction, Number of spots per grid in Y &#x02013; direction, Distance between two spots (in microns), Distance Area ratio and geometry of design (Square or Rectangle). This can aid users to decide on a particular design solution based on space optimization and elegant appearance.</p><p>An example of a sample run is provided in Figure <xref ref-type="fig" rid="F3">3</xref>. The number of gene probes (including controls and blanks) to be spotted using a 2 by 2 pin configuration in X-Y axis is fed as 2304 (Figure <xref ref-type="fig" rid="F3">3</xref>). The gene probes have to be spotted in duplicates so the total number of spots on the slide would be 4608. The program provides 67 different array designs for various inter-spot distances, number of grids and number of spots in each grid. Two examples of different solutions are presented in Figure <xref ref-type="fig" rid="F4">4</xref>. In this example, the first solution is ranked highest with inter-spot distance of 170 microns and a 24 &#x000d7; 24 grid pattern with 4 grids in Y axis and 2 grids in X axis. An alternative solution provides a design with a higher inter-spot distance of 200 microns and 18 &#x000d7; 16 grid pattern with 4 grids each in X axis and Y axis. The first solution can be used in conditions when humidity is low and the spotting solution does not absorb moisture and spread after printing. The second solution is more appropriate for printing samples in 50% DMSO. The classification of all design solutions based on the geometries obtained from ArraySolution is displayed in Table 2 [see <xref ref-type="supplementary-material" rid="S1">Additional file 1</xref>].</p></sec></sec><sec><title>Conclusion</title><p>We have developed a simple and rapid software ArrayD that offers various design solutions of designing microarrays for a specific set of user-defined requirements.</p></sec><sec><title>Availability and requirements</title><p>The source code and the executable file for ArrayD and ArraySolution programs are freely available and can be downloaded from our website [<xref ref-type="bibr" rid="B11">11</xref>]. The source code can be compiled and executed on Unix v 5.1, or IRIX v 5.1 or Red Hat Linux v 7.0 (or higher). The executable files can be downloaded for Windows platform (Windows 98/NT/XP/2000). Further information can be requested by sending e-mail to <email>ramu@igib.res.in</email> or <email>ramucbt@yahoo.com</email>.</p></sec><sec><title>Authors' contributions</title><p>AS explained the operational details to software expert, did the experimentation, maintenance and testing of the software. GPS did the basic software writing and implementation of 'ArrayD'. VKS prepared the code for the companion program 'ArraySolution' to classify the solutions on the basis of design geometry. SR is the Group Leader generating demand, sourcing and linking people, explaining the concepts, testing, critical examination, presentation of data, providing salary through grants.</p></sec><sec sec-type="supplementary-material"><title>Supplementary Material</title><supplementary-material content-type="local-data" id="S1"><caption><title>Additional File 1</title><p>Report generated by ArraySolution. A total of 67 different design solutions were classified into three categories of Square, Rectangle (Horizontal) and Rectangle (Vertical) as mentioned in text. The detailed design parameters including number of supergrids in X and Y direction, number of spots per grid in X and Y direction, distance between the spots, distance area ratio and geometry of design are provided for preparing elegant microarrays.</p></caption><media xlink:href="1471-2105-5-142-S1.pdf" mimetype="application" mime-subtype="pdf"><caption><p>Click here for file</p></caption></media></supplementary-material></sec></body><back><ack><sec><title>Acknowledgements</title><p>AS, GPS and VKS thank Council of Scientific and Industrial Research (CSIR) for providing financial assistance. We thank Dipayan Dasgupta for his help in compilation of the software and Mamta Khandelwal for her help in uploading the software on the web site. We thank the assistance of Technosol.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schena</surname><given-names>M</given-names></name><name><surname>Shalon</surname><given-names>D</given-names></name><name><surname>Davis</surname><given-names>RW</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name></person-group><article-title>Quantitative monitoring of gene expression patterns with a complementary DNA microarray</article-title><source>Science</source><year>1995</year><volume>270</volume><fpage>467</fpage><lpage>70</lpage><pub-id pub-id-type="pmid">7569999</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schena</surname><given-names>M</given-names></name><name><surname>Shalon</surname><given-names>D</given-names></name><name><surname>Heller</surname><given-names>R</given-names></name><name><surname>Chai</surname><given-names>A</given-names></name><name><surname>Brown</surname><given-names>PO</given-names></name><name><surname>Davis</surname><given-names>RW</given-names></name></person-group><article-title>Parallel human genome analysis: microarray-based expression monitoring of 1000 genes</article-title><source>Proc Natl Acad Sci U S A</source><year>1996</year><volume>93</volume><fpage>10614</fpage><lpage>9</lpage><pub-id pub-id-type="pmid">8855227</pub-id><pub-id pub-id-type="doi">10.1073/pnas.93.20.10614</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Schena</surname><given-names>M</given-names></name></person-group><article-title>Genome analysis with gene expression microarrays</article-title><source>Bioessays</source><year>1996</year><volume>18</volume><fpage>427</fpage><lpage>31</lpage><pub-id pub-id-type="pmid">8639166</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gerhold</surname><given-names>DL</given-names></name><name><surname>Jensen</surname><given-names>RV</given-names></name><name><surname>Gullans</surname><given-names>SR</given-names></name></person-group><article-title>Better therapeutics through microarrays</article-title><source>Nature Genetics</source><year>2002</year><volume>32</volume><fpage>547</fpage><lpage>552</lpage><pub-id pub-id-type="pmid">12454652</pub-id><pub-id pub-id-type="doi">10.1038/ng1042</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Petricoin III</surname><given-names>EF</given-names></name><name><surname>Hackett</surname><given-names>JL</given-names></name><name><surname>Lesko</surname><given-names>LJ</given-names></name><name><surname>Puri</surname><given-names>RK</given-names></name><name><surname>Gutman</surname><given-names>SI</given-names></name><name><surname>Chumakov</surname><given-names>K</given-names></name><name><surname>Woodcock</surname><given-names>J</given-names></name><name><surname>Feigal</surname><given-names>DW</given-names></name><name><surname>Zoon</surname><given-names>KC</given-names><suffix>Jr</suffix></name><name><surname>Sistare</surname><given-names>FD</given-names></name></person-group><article-title>Medical applications of microarray technologies: a regulatory science perspective</article-title><source>Nature Genetics</source><year>2002</year><volume>32</volume><fpage>474</fpage><lpage>479</lpage><pub-id pub-id-type="pmid">12454641</pub-id><pub-id pub-id-type="doi">10.1038/ng1029</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Golub</surname><given-names>TR</given-names></name><name><surname>Slonim</surname><given-names>DK</given-names></name><name><surname>Tamayo</surname><given-names>P</given-names></name><name><surname>Huard</surname><given-names>C</given-names></name><name><surname>Gaasenbeek</surname><given-names>M</given-names></name><name><surname>Mesirov</surname><given-names>JP</given-names></name><name><surname>Coller</surname><given-names>H</given-names></name><name><surname>Loh</surname><given-names>ML</given-names></name><name><surname>Downing</surname><given-names>JR</given-names></name><name><surname>Caligiuri</surname><given-names>MA</given-names></name><name><surname>Bloomfield</surname><given-names>CD</given-names></name><name><surname>Lander</surname><given-names>ES</given-names></name></person-group><article-title>Molecular classification of cancer class discovery and class prediction by gene expression monitoring</article-title><source>Science</source><year>1999</year><volume>286</volume><fpage>531</fpage><lpage>7</lpage><pub-id pub-id-type="pmid">10521349</pub-id><pub-id pub-id-type="doi">10.1126/science.286.5439.531</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Cummings</surname><given-names>CA</given-names></name><name><surname>Relman</surname><given-names>DA.</given-names></name></person-group><article-title>Using DNA microarrays to study host-microbe interactions</article-title><source>Emerg Infect Dis</source><year>2000</year><volume>6</volume><fpage>513</fpage><lpage>25</lpage><pub-id pub-id-type="pmid">10998383</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Quackenbush</surname><given-names>J</given-names></name></person-group><article-title>Computational analysis of microarray data</article-title><source>Nat Rev Genet</source><year>2001</year><volume>2</volume><fpage>418</fpage><lpage>27</lpage><pub-id pub-id-type="pmid">11389458</pub-id><pub-id pub-id-type="doi">10.1038/35076576</pub-id></citation></ref><ref id="B9"><citation citation-type="book"><person-group person-group-type="author"><name><surname>Schena</surname><given-names>M</given-names></name></person-group><source>Microarray analysis</source><year>2002</year><publisher-name>Hoboken, New Jersey: Wiley and Sons, Inc</publisher-name></citation></ref><ref id="B10"><citation citation-type="other"><article-title>Arrayit Web site</article-title><ext-link ext-link-type="uri" xlink:href="http://arrayit.com/Products/Printing/Stealth/stealth.html"/></citation></ref><ref id="B11"><citation citation-type="other"><article-title>ArrayD Web site</article-title><ext-link ext-link-type="uri" xlink:href="http://www.igib.res.in/scientists/arrayd/arrayd.html"/></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p>A general layout of microarray. In this example, a 2 &#x000d7; 2 pin configuration for 192 samples and 384 spots (duplicate) were considered. The origin is marked. Each pin prints one grid. One Super grid comprises of 4 grids, two in each axis. The number of super grids in X-direction is 2 and the number of super grids in Y-direction is 1. The spot pattern of a portion of one grid is zoomed for clarity. Replicates are spotted adjacent to each other in Y-direction. The number of samples in each grid is 24 and the total number of spots is 48. Two spots are further zoomed to show the diameter of the spot and the inter-spot distance.</p></caption><graphic xlink:href="1471-2105-5-142-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p>The flowchart of algorithm implemented in ArrayD to compute all possible design solutions for a given input parameters. The program first validates the given input parameters and then calculates the grid configuration. Note that in the case of 384 well plate type the pin-to-pin distance is 4500 microns on the print-head and therefore the max-grid-size is set at 4000 microns, which is 500 microns less than the upper limit (4500 microns). Similarly for 96 well plate type, the max-grid-size is set at 8500 microns (500 microns less than the upper limit 9000 microns). Maximum number of pins in the print head is taken as 48 and conforms to most printing robots. The spot distance database has inter-spot distances of 300, 250, 220, 200, 190, 180 and 170 microns. Users can expand this database. The variables used in the flowchart: pin_x: pin number in X-direction; pin_y: pin number in Y-direction; R: number of replicates; D: pin-to-pin distance; d: inter-spot distance; SG<sub>x </sub>(max): maximum possible number of super grids in X-direction; SG<sub>y </sub>(max): maximum possible number of super grids in Y-direction; G<sub>T</sub>: Total number of grids in the slide; G<sub>x</sub>: Total Number of Grids in X-direction; G<sub>y</sub>: Total Number of grids in Y-direction; S<sub>T</sub>: Maximum possible number of samples in each grid; S<sub>x</sub>: Maximum possible number of samples in each grid in X-direction; S<sub>y</sub>: Maximum possible number of samples in each grid in Y-direction; X<sub>s</sub>: number of samples in each grid in X-direction for a solution; Y<sub>s</sub>: number of samples in each grid in Y-direction for a solution; S<sub>g</sub>: Total number of samples per grid for a solution; A: Total area covered by the microarray on the slide.</p></caption><graphic xlink:href="1471-2105-5-142-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p>Screenshot of input parameters to ArrayD. Five inputs (Plate type (384 or 96), total number of samples, total number of replicates, pin number in X-axis and pin number in Y-axis) are fed to the program sequentially.</p></caption><graphic xlink:href="1471-2105-5-142-3"/></fig><fig position="float" id="F4"><label>Figure 4</label><caption><p>A sample run of ArrayD. The inputs given to the program were: type of plate-384; number of samples-2304; number of replicates-2; number of pins in X-axis-2; number of pins in Y-axis-2. A total of 67 solutions were offered. Two solutions are shown: top ranking solution with inter-spot distance 170 &#x003bc;m and an alternative design solution with inter-spot distance 200 &#x003bc;m. The ArrayD output was subsequently fed to the companion program 'ArraySolution' to classify each design based on its geometry and the report generated is displayed in Table 2 [see Additional file 1].</p></caption><graphic xlink:href="1471-2105-5-142-4"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Stealth pins for implementing various design solutions offered by ArrayD</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="left">Stealth Pin Catalog Number <sup>a</sup></td><td align="center">Spot Diameter <sup>b </sup>(&#x003bc;m)</td><td align="center">Minimum spot spacing <sup>c </sup>(&#x003bc;m)</td></tr></thead><tbody><tr><td align="left">SMP2</td><td align="center">62.5</td><td align="center">90</td></tr><tr><td align="left">SMP2B</td><td align="center">70</td><td align="center">100</td></tr><tr><td align="left">SMP2XB</td><td align="center">80</td><td align="center">110</td></tr><tr><td align="left">SMP2.5</td><td align="center">85</td><td align="center">100</td></tr><tr><td align="left">SMP2.5B</td><td align="center">90</td><td align="center">110</td></tr><tr><td align="left">SMP2.5XB</td><td align="center">110</td><td align="center">130</td></tr><tr><td align="left">SMP3</td><td align="center">100</td><td align="center">120</td></tr><tr><td align="left">SMP3B</td><td align="center">110</td><td align="center">135</td></tr><tr><td align="left">SMP3XB</td><td align="center">125</td><td align="center">150</td></tr><tr><td align="left">SMP4</td><td align="center">135</td><td align="center">160</td></tr><tr><td align="left">SMP4B</td><td align="center">145</td><td align="center">175</td></tr><tr><td align="left">SMP4XB</td><td align="center">160</td><td align="center">190</td></tr><tr><td align="left">SMP5</td><td align="center">165</td><td align="center">200</td></tr><tr><td align="left">SMP5B</td><td align="center">185</td><td align="center">215</td></tr><tr><td align="left">SMP5XB</td><td align="center">200</td><td align="center">240</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>: The catalog numbers of pins according to Telechem Inc., USA.</p><p><sup>b</sup>: The spot diameter (in microns) indicates the size of the spot after printing microarrays.</p><p><sup>c</sup>: The minimum inter-spot distance that can be achieved for each of the respective pins to avoid overlapping or smudging of the spots. Data sourced from Arrayit web site [10].</p></table-wrap-foot></table-wrap></sec></back></article>



