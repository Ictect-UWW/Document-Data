<!DOCTYPE article PUBLIC "-//NLM//DTD Journal Archiving and Interchange DTD v2.3 20070202//EN" "archivearticle.dtd">
<article xmlns:xlink="http://www.w3.org/1999/xlink" article-type="research-article"><?properties open_access?><front><journal-meta><journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id><journal-title>BMC Bioinformatics</journal-title><issn pub-type="epub">1471-2105</issn><publisher><publisher-name>BioMed Central</publisher-name><publisher-loc>London</publisher-loc></publisher></journal-meta><article-meta><article-id pub-id-type="pmid">15755318</article-id><article-id pub-id-type="pmc">PMC555558</article-id><article-id pub-id-type="publisher-id">1471-2105-6-46</article-id><article-id pub-id-type="doi">10.1186/1471-2105-6-46</article-id><article-categories><subj-group subj-group-type="heading"><subject>Methodology Article</subject></subj-group></article-categories><title-group><article-title>Automatic detection of false annotations via binary property clustering</article-title></title-group><contrib-group><contrib id="A1" corresp="yes" contrib-type="author"><name><surname>Kaplan</surname><given-names>Noam</given-names></name><xref ref-type="aff" rid="I1">1</xref><email>kaplann@cc.huji.ac.il</email></contrib><contrib id="A2" contrib-type="author"><name><surname>Linial</surname><given-names>Michal</given-names></name><xref ref-type="aff" rid="I1">1</xref><xref ref-type="aff" rid="I2">2</xref><email>michall@cc.huji.ac.il</email></contrib></contrib-group><aff id="I1"><label>1</label>Department of Biological Chemistry, Institute of Life Sciences, The Hebrew University of Jerusalem, Israel</aff><aff id="I2"><label>2</label>Department of Computer Science and Engineering, University of Washington, Seattle, WA, USA</aff><pub-date pub-type="collection"><year>2005</year></pub-date><pub-date pub-type="epub"><day>8</day><month>3</month><year>2005</year></pub-date><volume>6</volume><fpage>46</fpage><lpage>46</lpage><ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/6/46"/><history><date date-type="received"><day>5</day><month>9</month><year>2004</year></date><date date-type="accepted"><day>8</day><month>3</month><year>2005</year></date></history><copyright-statement>Copyright &#x000a9; 2005 Kaplan and Linial; licensee BioMed Central Ltd.</copyright-statement><license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0"><p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p></license><abstract><sec><title>Background</title><p>Computational protein annotation methods occasionally introduce errors. False-positive (FP) errors are annotations that are mistakenly associated with a protein. Such false annotations introduce errors that may spread into databases through similarity with other proteins. Generally, methods used to minimize the chance for FPs result in decreased sensitivity or low throughput. We present a novel protein-clustering method that enables automatic separation of FP from true hits. The method quantifies the biological similarity between pairs of proteins by examining each protein's annotations, and then proceeds by clustering sets of proteins that received similar annotation into biological groups.</p></sec><sec><title>Results</title><p>Using a test set of all PROSITE signatures that are marked as FPs, we show that the method successfully separates FPs in 69% of the 327 test cases supplied by PROSITE. Furthermore, we constructed an extensive random FP simulation test and show a high degree of success in detecting FP, indicating that the method is not specifically tuned for PROSITE and performs well on larger scales. We also suggest some means of predicting in which cases this approach would be successful.</p></sec><sec><title>Conclusion</title><p>Automatic detection of FPs may greatly facilitate the manual validation process and increase annotation sensitivity. With the increasing number of automatic annotations, the tendency of biological properties to be clustered, once a biological similarity measure is introduced, may become exceedingly helpful in the development of such automatic methods.</p></sec></abstract></article-meta></front><body><sec><title>Background</title><p>Computational protein annotation is a major goal of bioinformatics and annotation methods are widely used. A wide variety of annotation methods exist, many of which rely on some kind of scoring. Typically, when testing whether a protein should be given a certain annotation, a score threshold is set, and proteins that score higher than the threshold are given the annotation. Obviously, some annotation mistakes may occur. Such mistakes can be divided into false positives (FPs) and false negatives (FNs). FPs (or false hits) are annotations that were mistakenly assigned to a protein (type I error). FNs (or misses) are annotations that should have been assigned to a protein but were not (type II error). Adjustment of score thresholds allows tradeoff between these two types of mistakes. FPs annotations are considered to be of graver consequence than FNs. This is partially due to the fact that introduction of a false positive annotation into a protein database may cause other proteins to become incorrectly annotated on the basis of sequence similarity [<xref ref-type="bibr" rid="B1">1</xref>,<xref ref-type="bibr" rid="B2">2</xref>]. A systematic evaluation of the source of false annotations that already contaminated current databases was reported [<xref ref-type="bibr" rid="B3">3</xref>]. Several automatic systems such as PEDANT [<xref ref-type="bibr" rid="B4">4</xref>] and GeneQuiz [<xref ref-type="bibr" rid="B5">5</xref>] were introduced with the goal of matching the performance of human experts. Still, over interpretation, FN errors, typographic mistakes and the domain-based transitivity pitfall [<xref ref-type="bibr" rid="B6">6</xref>] limit the use of such fully automatic systems for inferring protein function.</p><p>Due to the importance of minimizing the amount of false annotations and maintaining highly reliable protein databases, three methods are generally used to avoid false annotations. The first method is manual validation of the annotation of each protein, which creates a serious bottleneck in the addition of new proteins and annotations to the database. The second method is using high score thresholds, thus lowering the rate of FPs but also increasing the rate of FNs (resulting in a loss of sensitivity). The third method is requirement for hits from different detection methods, eliminating advantages that are unique to some methods. Thus it would be beneficial to develop means by which FP annotations could be detected automatically, allowing both high throughput and high sensitivity.</p><p>Here we present such a method that uses clustering of protein functional groups to separate true positives (TPs) from FPs automatically. Our method is based on the following notions: (a) protein annotations represent biological properties; (b) protein functional groups share specific combinations of biological properties, essentially constituting "property clusters"; (c) if two proteins have very different combinations of annotations, they are unlikely to share a single functional annotation and therefore there is a high chance that one of them was given that annotation incorrectly. These notions are not obvious, but were shown to correctly indicate false annotations in some individual cases tested manually using the graphical annotation-analysis tool of PANDORA [<xref ref-type="bibr" rid="B7">7</xref>]. We aim to generalize these sporadic observations and to address the feasibility of automating the detection of FP.</p><p>Using these ideas, the method attempts to separate a group of proteins into "property clusters", by introducing a measure that quantifies the similarity between the annotation combinations of two proteins. According to our basic notions, these clusters are likely to be in accordance with false and true hits.</p><p>We tested our method on the PROSITE protein signature database [<xref ref-type="bibr" rid="B8">8</xref>]. The database consists of 1189 protein signatures (essentially annotations) that were assigned to a protein database. PROSITE annotation of proteins is manually validated, stating for each protein hit whether the annotation is a TP or a FP. Out of this set of 1,189 signatures, we chose a subset of all signatures that have both true and false hits, and this served as our test set. Altogether 327 such signatures were collected and tested. For each of the signatures, the method examined the set of proteins that were assigned the signature. We called the separation successful only if at any step of the clustering process <underline>all</underline> the TPs were clustered together without any FPs. We applied a stringent scoring, where a partial success is considered failure.</p><p>Furthermore, we constructed a random FP simulation test in order to provide a more extensive test. In this test, all 5,551 InterPro [<xref ref-type="bibr" rid="B9">9</xref>] annotations were considered. For each InterPro annotation we selected the set of proteins in SwissProt [<xref ref-type="bibr" rid="B10">10</xref>] that were assigned that annotation, and added to that set random proteins, simulating proteins that were assigned the annotation by mistake (FPs). For each annotation we repeated the test 15 times: 5 times with 1 random protein, 5 times with 5 random proteins and 5 times with 10 random proteins. This artificial contamination of the annotation source strives to simulate mistaken annotations that may occur under some automation annotation inference schemes.</p></sec><sec><title>Results</title><sec><title>Property-based clustering</title><p>We begin by describing the method of property-based clustering. Given a set P of all proteins that were given a certain annotation, and that there are both FPs and TPs in P, we would like to separate the set into disjoint subsets, so that one of the subsets will include all TPs and no FPs (leaving one or more subsets containing the FPs).</p><p>Annotation-based clustering is used to detect these subsets. We define an annotation as a binary property assigned to a protein (each protein may or may not have a "hit"). At the first stage, annotations from GO (Gene Ontology) [<xref ref-type="bibr" rid="B11">11</xref>], InterPro (entries) and SwissProt (keywords) are gathered for all proteins in P.</p><p>The clustering works in the following way: between each two proteins we define a similarity score that tries to quantify how much do the two proteins have in common from a biological perspective. The score between two proteins <italic>p</italic><sub>1 </sub>and <italic>p</italic><sub>2 </sub>is defined as:</p><p><inline-graphic xlink:href="1471-2105-6-46-i1.gif"/></p><p>where <italic>A</italic><sub>1 </sub>and <italic>A</italic><sub>2 </sub>are the set of annotations of proteins <italic>p</italic><sub>1 </sub>and <italic>p</italic><sub>2 </sub>respectively, <italic>i </italic>is the current annotation, and <italic>f</italic>(<italic>i</italic>) is the frequency of <italic>i </italic>in the database. This score uses the following logic: if two proteins share an annotation, they are biologically similar in some manner. The more annotations these proteins share, the more cause we have to believe that they are similar biologically. However, two proteins sharing an annotation like "Enzyme" (that appears 45,991 times in our database) should receive a worse similarity score than two proteins that share a much uncommon annotation like "Heat Shock Protein" (that appears only 832 times). This is taken into account by using log(<italic>f</italic>(<italic>i</italic>)). Obviously, one could think of different scoring schemes that would quantify this differently. For a specific example of how the score is calculated see Table <xref ref-type="table" rid="T1">1</xref>.</p><p>The similarity score is calculated between every two proteins in P. Next, we define the similarity score between two clusters as the arithmetic average of scores of all inter-cluster protein pairs:</p><p><inline-graphic xlink:href="1471-2105-6-46-i2.gif"/></p><p>where <italic>C</italic><sub>1 </sub>and <italic>C</italic><sub>2 </sub>are clusters of proteins. Starting with clusters of 1 protein each, the method begins by an initial one-step clustering which merges all clusters that have the exact same combination of annotations. Following this the primary clustering commences: At each clustering step the two clusters that have the highest similarity score are merged. At each step the contents of the clusters are evaluated, and if all TP proteins appear in one cluster without any FPs, we say that the clustering process successfully separated the TPs from the FPs. Note that we do not require all the FPs to be grouped into one cluster, due to the fact that they cannot be expected to share biological similarity amongst themselves.</p></sec><sec><title>PROSITE test</title><p>Out of 327 sets of proteins that share a PROSITE signature, the method showed successful separation (as defined previously) in 227 sets, i.e. 69% of the cases. The average size of the protein sets was 156.1 and the median 76. Altogether 58,254 proteins were used for this test. The average and median FP rates (FP rate is defined as: FP/(TP+FP)) of the sets were 0.12 and 0.07 respectively. These general statistics about the test set indicate that the sets were large enough and had a high enough amount of TPs and FPs so that the chance of random success would be minimal.</p><p>In order to demonstrate the method's performance in this test, we provide the following example of testing a single protein set. The set presented here is the set of all 37 proteins that matched the PROSITE "Serum albumin family" signature. Each protein in the set contains an average of 18.2 annotations (obviously not all are relevant). First, the score between every pair of proteins is calculated, based on their mutual annotations. Next, the proteins undergo a preliminary clustering step in which all proteins that have the exact same combination of annotations are merged into clusters. Following this, the proteins are clustered together based on their mutual similarity score. Finally, once the clustering has finished we examine the tree to see if the true positives were separated from the false positives. In the given example, there are 5 proteins that were incorrectly assigned the PROSITE annotation (FPs), and in Figure <xref ref-type="fig" rid="F1">1</xref> we see that they are indeed separated from the TP proteins.</p></sec><sec><title>Random FP simulation test</title><p>5,551 sets of proteins were tested 15 times each and showed successful separation in 74% of the cases. Altogether 99,076 proteins were used for this test. This can be subdivided into 78% success for the sets that had 1 random protein added, 74% success for the sets that had 5 random proteins added and 68% for the sets that had 10 random proteins added. The average set size was 78 proteins. The drop in the performance by increasing the level of FPs is due to the fact that there is a higher chance that one of the randomly selected proteins will be biologically similar to the TPs. Since we consider only cases in which all FPs are detected, then there would be a higher chance of failure as the number of randomly-generated FPs increases.</p><p>While the simulation of FP errors randomly provides endless amounts of test sets, which is a clear advantage over the limited test sets provided by a real database such as PROSITE, the simulation has its own limitations. The hidden assumption made by this approach is that the FP hits are independent of each other. This assumption is not necessarily true: for example, if annotation is done by means of sequence similarity, false hits may be more likely to be biologically similar to each other (e.g. belong to the same family). In fact, in many cases in the PROSITE test we find that the correct separation separates the TP proteins into one cluster and the FP into one or two clusters, suggesting that the FPs share some degree of biological similarity (see "Determination of the correct halting step"). This difference in the way that FP annotations are generated may also account for the difference in success rates between the PROSITE test set and the simulated test set. The way FP annotations are introduced into databases is impossible to model, but the combined success of the method on both a real database test set and on an extensive simulated test set seems promising.</p><p>A further issue which concerns the simulation method is determining the amount of FPs to add to each set. Here we chose to add 1, 5 or 10 proteins to each set. This does not necessarily reflect the amount of FPs in real databases. Understandably, each database's average FP rate depends on its specific characteristics. However, the PROSITE database's average FP rate of 0.12 (median of 0.08) might give an indication as to what a typical rate is. In comparison, the average FP rate for our random simulation set was 0.11 (median of 0.07), which suggests that our choice was reasonable.</p></sec><sec><title>Determination of the correct halting step</title><p>We call a clustering process successful if it managed at any step to separate the false annotations. However, this step must be somehow determined automatically. There are two approaches to this: one is to use an intrinsic parameter of the clustering process that would indicate where the correct halting step is located; the other is selecting a predetermined step of the process. We chose the similarity score at each merging step as an intrinsic process parameter. When plotting the score against the progression of the clustering (Figure <xref ref-type="fig" rid="F2">2</xref>), a knee shape in the plot would indicate a point of stability (biological similarity), suggesting it as a potential halting step. Analysis of the second derivative of this plot allows finding these knee-shaped stability points automatically. Using this method, 56% percent of the correct halting steps in the PROSITE test were correctly predicted. A different approach was to always choose the last step or the last two steps as the correct halting step. This resulted in 45% and 65% correct prediction, respectively. Furthermore, the union of the correct predictions made by both approaches indicates that together they correctly predict the halting step in 79% of the PROSITE test cases.</p></sec></sec><sec><title>Discussion</title><sec><title>Prediction of success</title><p>Interestingly, we found that with certain sets the method tended to be more successful than with other sets, probably indicating that these sets are more coherent biologically. This might suggest exploring an approach in which for each annotation one could predict the level of success provided by this method. Furthermore, we used the InterPro categorization of annotations into types in order to check success in specific annotation types. InterPro divides its annotations into different categories, such as "domain", "repeat" and "family". Understandably, "family" type annotations had a ~30% higher success rate than the other annotation types, primarily due to the fact that the "family" annotations often represent protein sets that are biologically coherent whereas other types such as "repeat" or "domain" annotations are biologically diverse. This result would be expected by a method that performs a clustering based on biological similarity. This indicates that this approach should be aimed primarily at functional family annotations.</p><p>However, functional families can be defined at different resolutions: an alcohol dehydrogenase belongs to the enzyme family, the dehydrogenase family and the alcohol dehydrogenase family. The test sets of the PROSITE and InterPro databases mainly represent mid-level and low-level annotations, with a typical size of tens or a few hundreds of proteins (see the statistics given previously). In order to further our understanding of the resolution in which this method is successful, we divided the protein groups into size categories and studied the relative amount of success in every size category. Figure <xref ref-type="fig" rid="F3">3</xref> shows that as the group size increases, the rate of success decreases. Assuming larger sets represent the higher level annotations of InterPro, this suggests that when the annotations are more general ("higher" in the biological functional hierarchy) they have less in common biologically. Therefore, we would not expect the method to succeed on very general terms such as "enzyme". Sporadic tests of several high level GO annotations suggest that this is indeed the case (data not shown).</p></sec><sec><title>Annotation source interdependency</title><p>Because multiple annotation sources were used, concerns arose regarding interdependencies amongst them. For example, InterPro is highly dependent on PROSITE, so proteins that have a PROSITE annotation will very likely be assigned an InterPro annotation as well automatically. In order to minimize this effect, we did not allow the algorithm to use the InterPro annotations that matched the PROSITE annotation which was being tested. Furthermore, in order to increase reliability of the random FP simulation test, all known PROSITE FPs were removed from InterPro prior to the test. Still, there is some concern that the results are partially biased due to annotation source interdependencies. Furthermore, it is difficult to determine whether these dependencies represent true biologically dependent properties, or simply a duplication of the same property in different sources. Keeping this difficulty in mind, our results which show different levels of success for different types of annotations (see "Prediction of success") indicate that the success of the method is more likely due to biological dependency rather than artificial duplication.</p></sec><sec><title>Sufficient annotation</title><p>It should be stressed that the clustering process is based on sufficient annotation. Therefore, it may be difficult to apply this method to proteins that are poorly annotated. Still, these cases should be relatively rare: Nearly 77% of the ~1,600,000 proteins in TrEMBL [<xref ref-type="bibr" rid="B10">10</xref>] have at least one annotation by InterPro, and when considering several annotation sources there are on average ~10 annotations per SwissProt protein. Note that the amount and richness of annotation is constantly increasing at a fast rate. Furthermore, the ability to detect false annotations automatically may allow an increase in the sensitivity of current methods, thereby allowing more extensive annotation of proteins.</p><p>It is worthwhile noting that amongst the 58,254 proteins used in these sets there were 3,587 (6%) proteins annotated by SwissProt as "hypothetical proteins". 18% of the sets that were successfully separated contained such hypothetical proteins, with an average of 8% hypothetical proteins for each such set. These results suggest that the method is capable of handling to some extent hypothetical proteins of unknown function.</p><p>Another helpful approach to the problem of insufficient annotation could be the introduction of quantitative protein properties that are easily determined and show some correlation with function (i.e. the protein length, its Isoelectric point, etc.) into this method. Preliminary testing showed some positive correlation between protein length and Isoelectric point with function in certain cases (not shown).</p></sec></sec><sec><title>Conclusion</title><p>Introduction of FP annotations into protein databases can be harmful. It has been shown that once a mistaken annotation is introduced into a database, it often transfers to other proteins that are sequentially similar causing a propagation of false annotation [<xref ref-type="bibr" rid="B1">1</xref>]. Due to the importance of keeping high-quality databases, either the proteins are manually checked one by one or the annotation detection sensitivity is reduced in order to minimize FPs. The error rate and the limited sensitivity of assigning structural annotations using PSI-BLAST [<xref ref-type="bibr" rid="B12">12</xref>] or SAM-T98 [<xref ref-type="bibr" rid="B13">13</xref>] and methodologies based on HMMs and SVMs had been reported [<xref ref-type="bibr" rid="B14">14</xref>]. Naturally the process of manual validation of the annotation of protein databases is extremely time-consuming and in many cases is subjective to the expert view. Automatic detection of false annotations greatly facilitates the task of manual validation of annotation, and allows using lower thresholds when trying to detect protein signatures, therefore allowing higher method sensitivity.</p><p>Based on the notion that protein functional groups share specific combinations of annotations, we have introduced a method that by separating a set of proteins into biological "property clusters" shows successful separation of incorrectly annotated proteins from correctly annotated proteins. We test the method both with a manually validated test set and with a randomly constructed test set, and in both cases show a high degree of success. These results suggest that this tendency of certain annotations to appear in groups may be used as a basis of automatic methods that detect FPs. Naturally, different computer learning methods can be used to take advantage of these interdependencies of biological properties (for example see [<xref ref-type="bibr" rid="B15">15</xref>]).</p></sec><sec sec-type="methods"><title>Methods</title><sec><title>Sources</title><p>We created a database that includes all proteins from SwissProt 40.28 (114,033 proteins) [<xref ref-type="bibr" rid="B10">10</xref>]. The database also included annotation of these proteins by GO[<xref ref-type="bibr" rid="B11">11</xref>], SwissProt and InterPro [<xref ref-type="bibr" rid="B9">9</xref>]. GO terms represent a wide range of biological terms concerning molecular function, cellular localization and biological processes, and span various degrees of specificity: from very general terms to very specific ones. GO terms are assigned to proteins both manually and automatically. InterPro annotations are assigned automatically by sequence and typically represent functional families and domains of no more than a few hundred protein members. SwissProt keywords are assigned manually and cover various biological subjects.</p><p>Annotation source and the number of annotation for each (in parenthesis) are: SwissProt version 40.28 (865 keywords), InterPro version 5.2 (5,551 entries), GO as of July 2002 (5,229 terms), PROSITE version 17.5 (1,189 signatures).</p></sec></sec><sec><title>Authors' contributions</title><p>NK and ML conceived of the study. NK designed the method. NK implemented and developed the method. NK designed the tests and analyzed the results. NK and ML wrote the manuscript.</p></sec></body><back><ack><sec><title>Acknowledgements</title><p>A preliminary version of this work has been presented in ISMB2004 by NK, under the name "False Annotations of Proteins: Automatic Detection via Keyword-Based Clustering". It can be accessed at: <ext-link ext-link-type="uri" xlink:href="http://www.iscb.org/ismbeccb2004/accepted_papers.html"/>. We thank Menachem Fromer for his support and useful suggestions. We thank the ProtoNet team for their constant support. This work is partially supported by The Sudarsky Center for Computational Biology and the EU framework VI BioSapiens NoE consortium.</p></sec></ack><ref-list><ref id="B1"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Linial</surname><given-names>M</given-names></name></person-group><article-title>How incorrect annotations evolve-the case of short ORFs</article-title><source>Trends Biotechnol</source><year>2003</year><volume>21</volume><fpage>298</fpage><lpage>300</lpage><pub-id pub-id-type="pmid">12837613</pub-id><pub-id pub-id-type="doi">10.1016/S0167-7799(03)00139-2</pub-id></citation></ref><ref id="B2"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Gilks</surname><given-names>WR</given-names></name><name><surname>Audit</surname><given-names>B</given-names></name><name><surname>De Angelis</surname><given-names>D</given-names></name><name><surname>Tsoka</surname><given-names>S</given-names></name><name><surname>Ouzounis</surname><given-names>CA</given-names></name></person-group><article-title>Modeling the percolation of annotation errors in a database of protein sequences</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><fpage>1641</fpage><lpage>1649</lpage><pub-id pub-id-type="pmid">12490449</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/18.12.1641</pub-id></citation></ref><ref id="B3"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Iliopoulos</surname><given-names>I</given-names></name><name><surname>Tsoka</surname><given-names>S</given-names></name><name><surname>Andrade</surname><given-names>MA</given-names></name><name><surname>Enright</surname><given-names>AJ</given-names></name><name><surname>Carroll</surname><given-names>M</given-names></name><name><surname>Poullet</surname><given-names>P</given-names></name><name><surname>Promponas</surname><given-names>V</given-names></name><name><surname>Liakopoulos</surname><given-names>T</given-names></name><name><surname>Palaios</surname><given-names>G</given-names></name><name><surname>Pasquier</surname><given-names>C</given-names></name><name><surname>Hamodrakas</surname><given-names>S</given-names></name><name><surname>Tamames</surname><given-names>J</given-names></name><name><surname>Yagnik</surname><given-names>AT</given-names></name><name><surname>Tramontano</surname><given-names>A</given-names></name><name><surname>Devos</surname><given-names>D</given-names></name><name><surname>Blaschke</surname><given-names>C</given-names></name><name><surname>Valencia</surname><given-names>A</given-names></name><name><surname>Brett</surname><given-names>D</given-names></name><name><surname>Martin</surname><given-names>D</given-names></name><name><surname>Leroy</surname><given-names>C</given-names></name><name><surname>Rigoutsos</surname><given-names>I</given-names></name><name><surname>Sander</surname><given-names>C</given-names></name><name><surname>Ouzounis</surname><given-names>CA</given-names></name></person-group><article-title>Evaluation of annotation strategies using an entire genome sequence</article-title><source>Bioinformatics</source><year>2003</year><volume>19</volume><fpage>717</fpage><lpage>726</lpage><pub-id pub-id-type="pmid">12691983</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/btg077</pub-id></citation></ref><ref id="B4"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Frishman</surname><given-names>D</given-names></name><name><surname>Mokrejs</surname><given-names>M</given-names></name><name><surname>Kosykh</surname><given-names>D</given-names></name><name><surname>Kastenmuller</surname><given-names>G</given-names></name><name><surname>Kolesov</surname><given-names>G</given-names></name><name><surname>Zubrzycki</surname><given-names>I</given-names></name><name><surname>Gruber</surname><given-names>C</given-names></name><name><surname>Geier</surname><given-names>B</given-names></name><name><surname>Kaps</surname><given-names>A</given-names></name><name><surname>Albermann</surname><given-names>K</given-names></name><name><surname>Volz</surname><given-names>A</given-names></name><name><surname>Wagner</surname><given-names>C</given-names></name><name><surname>Fellenberg</surname><given-names>M</given-names></name><name><surname>Heumann</surname><given-names>K</given-names></name><name><surname>Mewes</surname><given-names>HW</given-names></name></person-group><article-title>The PEDANT genome database</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><fpage>207</fpage><lpage>211</lpage><pub-id pub-id-type="pmid">12519983</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg005</pub-id></citation></ref><ref id="B5"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Andrade</surname><given-names>MA</given-names></name><name><surname>Brown</surname><given-names>NP</given-names></name><name><surname>Leroy</surname><given-names>C</given-names></name><name><surname>Hoersch</surname><given-names>S</given-names></name><name><surname>De Daruvar</surname><given-names>A</given-names></name><name><surname>Reich</surname><given-names>C</given-names></name><name><surname>Franchini</surname><given-names>A</given-names></name><name><surname>Tamames</surname><given-names>J</given-names></name><name><surname>Valencia</surname><given-names>A</given-names></name><name><surname>Ouzounis</surname><given-names>C</given-names></name><name><surname>Sander</surname><given-names>C.</given-names></name></person-group><article-title>Automated genome sequence analysis and annotation</article-title><source>Bioinformatics</source><year>1999</year><volume>15</volume><fpage>391</fpage><lpage>412</lpage><pub-id pub-id-type="pmid">10366660</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/15.5.391</pub-id></citation></ref><ref id="B6"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Devos</surname><given-names>D</given-names></name><name><surname>Valencia</surname><given-names>A</given-names></name></person-group><article-title>Intrinsic errors in genome annotation</article-title><source>Trends Genet</source><year>2001</year><volume>17</volume><fpage>429</fpage><lpage>431</lpage><pub-id pub-id-type="pmid">11485799</pub-id><pub-id pub-id-type="doi">10.1016/S0168-9525(01)02348-4</pub-id></citation></ref><ref id="B7"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Kaplan</surname><given-names>N</given-names></name><name><surname>Vaaknin</surname><given-names>A</given-names></name><name><surname>Linial</surname><given-names>M</given-names></name></person-group><article-title>PANDORA: keyword-based analysis of protein sets by integration of annotation sources</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><fpage>5617</fpage><lpage>5626</lpage><pub-id pub-id-type="pmid">14500825</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg769</pub-id></citation></ref><ref id="B8"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Sigrist</surname><given-names>CJ</given-names></name><name><surname>Cerutti</surname><given-names>L</given-names></name><name><surname>Hulo</surname><given-names>N</given-names></name><name><surname>Gattiker</surname><given-names>A</given-names></name><name><surname>Falquet</surname><given-names>L</given-names></name><name><surname>Pagni</surname><given-names>M</given-names></name><name><surname>Bairoch</surname><given-names>A</given-names></name><name><surname>Bucher</surname><given-names>P</given-names></name></person-group><article-title>PROSITE: a documented database using patterns and profiles as motif descriptors</article-title><source>Brief Bioinform</source><year>2002</year><volume>3</volume><fpage>265</fpage><lpage>274</lpage><pub-id pub-id-type="pmid">12230035</pub-id></citation></ref><ref id="B9"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Apweiler</surname><given-names>R</given-names></name><name><surname>Attwood</surname><given-names>TK</given-names></name><name><surname>Bairoch</surname><given-names>A</given-names></name><name><surname>Bateman</surname><given-names>A</given-names></name><name><surname>Birney</surname><given-names>E</given-names></name><name><surname>Biswas</surname><given-names>M</given-names></name><name><surname>Bucher</surname><given-names>P</given-names></name><name><surname>Cerutti</surname><given-names>L</given-names></name><name><surname>Corpet</surname><given-names>F</given-names></name><name><surname>Croning</surname><given-names>MD</given-names></name><name><surname>Durbin</surname><given-names>R</given-names></name><name><surname>Falquet</surname><given-names>L</given-names></name><name><surname>Fleischmann</surname><given-names>W</given-names></name><name><surname>Gouzy</surname><given-names>J</given-names></name><name><surname>Hermjakob</surname><given-names>H</given-names></name><name><surname>Hulo</surname><given-names>N</given-names></name><name><surname>Jonassen</surname><given-names>I</given-names></name><name><surname>Kahn</surname><given-names>D</given-names></name><name><surname>Kanapin</surname><given-names>A</given-names></name><name><surname>Karavidopoulou</surname><given-names>Y</given-names></name><name><surname>Lopez</surname><given-names>R</given-names></name><name><surname>Marx</surname><given-names>B</given-names></name><name><surname>Mulder</surname><given-names>NJ</given-names></name><name><surname>Oinn</surname><given-names>TM</given-names></name><name><surname>Pagni</surname><given-names>M</given-names></name><name><surname>Servant</surname><given-names>F</given-names></name><name><surname>Sigrist</surname><given-names>CJ</given-names></name><name><surname>Zdobnov</surname><given-names>EM</given-names></name></person-group><article-title>InterPro &#x02013; an integrated documentation resource for protein families, domains and functional sites</article-title><source>Bioinformatics</source><year>2000</year><volume>16</volume><fpage>1145</fpage><lpage>1150</lpage><pub-id pub-id-type="pmid">11159333</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/16.12.1145</pub-id></citation></ref><ref id="B10"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Boeckmann</surname><given-names>B</given-names></name><name><surname>Bairoch</surname><given-names>A</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name><name><surname>Blatter</surname><given-names>MC</given-names></name><name><surname>Estreicher</surname><given-names>A</given-names></name><name><surname>Gasteiger</surname><given-names>E</given-names></name><name><surname>Martin</surname><given-names>MJ</given-names></name><name><surname>Michoud</surname><given-names>K</given-names></name><name><surname>O'Donovan</surname><given-names>C</given-names></name><name><surname>Phan</surname><given-names>I</given-names></name><name><surname>Pilbout</surname><given-names>S</given-names></name><name><surname>Schneider</surname><given-names>M</given-names></name></person-group><article-title>The SWISS-PROT protein knowledgebase and its supplement TrEMBL in 2003</article-title><source>Nucleic Acids Res</source><year>2003</year><volume>31</volume><fpage>365</fpage><lpage>370</lpage><pub-id pub-id-type="pmid">12520024</pub-id><pub-id pub-id-type="doi">10.1093/nar/gkg095</pub-id></citation></ref><ref id="B11"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Camon</surname><given-names>E</given-names></name><name><surname>Magrane</surname><given-names>M</given-names></name><name><surname>Barrell</surname><given-names>D</given-names></name><name><surname>Binns</surname><given-names>D</given-names></name><name><surname>Fleischmann</surname><given-names>W</given-names></name><name><surname>Kersey</surname><given-names>P</given-names></name><name><surname>Mulder</surname><given-names>N</given-names></name><name><surname>Oinn</surname><given-names>T</given-names></name><name><surname>Maslen</surname><given-names>J</given-names></name><name><surname>Cox</surname><given-names>A</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name></person-group><article-title>The Gene Ontology Annotation (GOA) Project: Implementation of GO in SWISS-PROT, TrEMBL, and InterPro</article-title><source>Genome Res</source><year>2003</year><volume>13</volume><fpage>662</fpage><lpage>672</lpage><pub-id pub-id-type="pmid">12654719</pub-id><pub-id pub-id-type="doi">10.1101/gr.461403</pub-id></citation></ref><ref id="B12"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Muller</surname><given-names>A</given-names></name><name><surname>MacCallum</surname><given-names>RM</given-names></name><name><surname>Sternberg</surname><given-names>MJ</given-names></name></person-group><article-title>Benchmarking PSI-BLAST in genome annotation</article-title><source>J Mol Biol</source><year>1999</year><volume>293</volume><fpage>1257</fpage><lpage>1271</lpage><pub-id pub-id-type="pmid">10547299</pub-id><pub-id pub-id-type="doi">10.1006/jmbi.1999.3233</pub-id></citation></ref><ref id="B13"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Karplus</surname><given-names>K</given-names></name><name><surname>Barrett</surname><given-names>C</given-names></name><name><surname>Hughey</surname><given-names>R</given-names></name></person-group><article-title>Hidden Markov models for detecting remote protein homologies</article-title><source>Bioinformatics</source><year>1998</year><volume>14</volume><fpage>846</fpage><lpage>856</lpage><pub-id pub-id-type="pmid">9927713</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/14.10.846</pub-id></citation></ref><ref id="B14"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Karchin</surname><given-names>R</given-names></name><name><surname>Karplus</surname><given-names>K</given-names></name><name><surname>Haussler</surname><given-names>D</given-names></name></person-group><article-title>Classifying G-protein coupled receptors with support vector machines</article-title><source>Bioinformatics</source><year>2002</year><volume>18</volume><fpage>147</fpage><lpage>159</lpage><pub-id pub-id-type="pmid">11836223</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/18.1.147</pub-id></citation></ref><ref id="B15"><citation citation-type="journal"><person-group person-group-type="author"><name><surname>Wieser</surname><given-names>D</given-names></name><name><surname>Kretschmann</surname><given-names>E</given-names></name><name><surname>Apweiler</surname><given-names>R</given-names></name></person-group><article-title>Filtering erroneous protein annotation</article-title><source>Bioinformatics</source><year>2004</year><volume>20</volume><fpage>i342</fpage><lpage>i347</lpage><pub-id pub-id-type="pmid">15262818</pub-id><pub-id pub-id-type="doi">10.1093/bioinformatics/bth938</pub-id></citation></ref></ref-list><sec sec-type="display-objects"><title>Figures and Tables</title><fig position="float" id="F1"><label>Figure 1</label><caption><p><bold>Biological clustering example. </bold>The figure shows a dendrogram describing the clustering of 37 proteins that matched the PROSITE "Serum Albumin Family" signature. The clustering advances from right to left along the axis that shows the similarity score at each point of the process. The vertical axis shows 16 initial clusters of proteins that the clustering starts with after the initial clustering stage. The initial clusters are numbered 1&#x02013;16 and in parentheses show the number of proteins in them. Clusters 1&#x02013;3 contain 5 Vitamin D Binding proteins (TPs). Clusters 4&#x02013;13 contain 24 Albumin proteins (TPs). Cluster 14 contains 3 Afamin proteins (TPs). Clusters 15 and 16 contain the 5 FPs. The colors indicate the correct separation of this set into TPs and FPs.</p></caption><graphic xlink:href="1471-2105-6-46-1"/></fig><fig position="float" id="F2"><label>Figure 2</label><caption><p><bold>Similarity score plot. </bold>The figure shows the similarity score (solid line) plotted versus the progression of the clustering process for a sample protein set that was tested. The protein set includes 606 proteins that were annotated as "Rhodopsin-like GPCR superfamily". The score decreases from left to right as the clusters are merged, indicating decreasing biological similarity. The vertical dashed line indicates the correct halting step. Note that the correct halting step is located where there is a distinct knee in the graph, indicating a point of stability in the process.</p></caption><graphic xlink:href="1471-2105-6-46-2"/></fig><fig position="float" id="F3"><label>Figure 3</label><caption><p><bold>Relative success and failure in group size categories. </bold>The figure shows the relative success and failure of the clustering method in different categories of group sizes (the group size of an annotations is the number of proteins that have the annotation). All tested sets were grouped into 30 categories according to the amount of proteins in them, from 0 to 1500 proteins (shown on the horizontal axis). Each category shows the relative amount of success (purple) and failure (blue) of the method in each of the categories. It is apparent that relative success decreases as the group sizes increase.</p></caption><graphic xlink:href="1471-2105-6-46-3"/></fig><table-wrap position="float" id="T1"><label>Table 1</label><caption><p>Similarity score calculation</p></caption><table frame="hsides" rules="groups"><thead><tr><td align="center"><bold>Source</bold></td><td align="center"><bold>Annotation</bold></td><td align="center"><bold>CD63_RABIT<sup>a</sup></bold></td><td align="center"><bold>CD68_HUMAN<sup>a</sup></bold></td><td align="center"><bold>Frequency<sup>b</sup></bold></td><td align="center"><bold>-ln(freq)</bold></td></tr></thead><tbody><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Antigen</td><td align="center">1</td><td align="center">1</td><td align="center">0.007130</td><td align="center">4.9435114</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Lysosome</td><td align="center">1</td><td align="center">1</td><td align="center">0.001929</td><td align="center">6.2506136</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Glycoprotein</td><td align="center">1</td><td align="center">1</td><td align="center">0.094727</td><td align="center">2.3567562</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Transmembrane</td><td align="center">1</td><td align="center">1</td><td align="center">0.159770</td><td align="center">1.8340200</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Alternative splicing</td><td align="center">0</td><td align="center">1</td><td align="center">0.029281</td><td align="center">-</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Signal</td><td align="center">0</td><td align="center">1</td><td align="center">0.123850</td><td align="center">-</td></tr><tr><td align="center"><bold>SwissProt</bold></td><td align="center">Repeat</td><td align="center">0</td><td align="center">1</td><td align="center">0.078968</td><td align="center">-</td></tr><tr><td align="center"><bold>InterPro</bold></td><td align="center">Serum albumin family</td><td align="center">1</td><td align="center">0</td><td align="center">0.000342</td><td align="center">-</td></tr><tr><td align="center"><bold>InterPro</bold></td><td align="center">CD9/CD37/CD63 antigen</td><td align="center">1</td><td align="center">0</td><td align="center">0.000666</td><td align="center">-</td></tr><tr><td align="center"><bold>InterPro</bold></td><td align="center">Lysosome-associated membrane glycoprotein (lamp)/CD68</td><td align="center">0</td><td align="center">1</td><td align="center">0.000123</td><td align="center">-</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Membrane</td><td align="center">1</td><td align="center">1</td><td align="center">0.210869</td><td align="center">1.5565182</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Lysosome</td><td align="center">1</td><td align="center">1</td><td align="center">0.002043</td><td align="center">6.1932038</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Vacuole</td><td align="center">1</td><td align="center">1</td><td align="center">0.002184</td><td align="center">6.1267895</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Lytic vacuole</td><td align="center">1</td><td align="center">1</td><td align="center">0.002043</td><td align="center">6.1932038</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Cell</td><td align="center">1</td><td align="center">1</td><td align="center">0.440206</td><td align="center">0.8205125</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Integral membrane protein</td><td align="center">1</td><td align="center">1</td><td align="center">0.160874</td><td align="center">1.8271338</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Cytoplasm</td><td align="center">1</td><td align="center">1</td><td align="center">0.186569</td><td align="center">1.6789541</td></tr><tr><td align="center"><bold>GO</bold></td><td align="center">Intracellular</td><td align="center">1</td><td align="center">1</td><td align="center">0.307578</td><td align="center">1.1790266</td></tr><tr><td></td><td></td><td></td><td></td><td align="center"><bold>
                              <underline>Similarity Score:</underline>
                           </bold></td><td align="center"><bold>40.960244</bold></td></tr></tbody></table><table-wrap-foot><p>The table shows a calculation of the similarity score between two SwissProt proteins: Rabbit CD63 antigen (CD63_RABIT) and Human Microsialin precursor (CD68_HUMAN). The similarity score is the summation of -ln(freq) on all annotations that are shared by both proteins. <sup>a </sup>&#x02013; 1 or 0 indicate if the given protein has or does not have the annotation respectively. <sup>b </sup>&#x02013; The frequency is the portion of proteins in the database that have the annotation.</p></table-wrap-foot></table-wrap></sec></back></article>



